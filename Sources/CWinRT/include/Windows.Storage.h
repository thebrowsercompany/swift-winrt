// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Storage.FileProperties.h"
#include "Windows.Storage.Provider.h"
#include "Windows.Storage.Search.h"
#include "Windows.Storage.Streams.h"
#include "Windows.System.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CStorage_CIApplicationDataSetVersionHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIApplicationDataSetVersionHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CIApplicationDataSetVersionHandler __x_ABI_CWindows_CStorage_CIApplicationDataSetVersionHandler;

#endif // ____x_ABI_CWindows_CStorage_CIApplicationDataSetVersionHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CStorage_CIStreamedFileDataRequestedHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStreamedFileDataRequestedHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CStorage_CIStreamedFileDataRequestedHandler __x_ABI_CWindows_CStorage_CIStreamedFileDataRequestedHandler;

#endif // ____x_ABI_CWindows_CStorage_CIStreamedFileDataRequestedHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CStorage_CIAppDataPaths_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIAppDataPaths_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIAppDataPaths __x_ABI_CWindows_CStorage_CIAppDataPaths;

#endif // ____x_ABI_CWindows_CStorage_CIAppDataPaths_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIAppDataPathsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIAppDataPathsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIAppDataPathsStatics __x_ABI_CWindows_CStorage_CIAppDataPathsStatics;

#endif // ____x_ABI_CWindows_CStorage_CIAppDataPathsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIApplicationData_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIApplicationData_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIApplicationData __x_ABI_CWindows_CStorage_CIApplicationData;

#endif // ____x_ABI_CWindows_CStorage_CIApplicationData_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIApplicationData2_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIApplicationData2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIApplicationData2 __x_ABI_CWindows_CStorage_CIApplicationData2;

#endif // ____x_ABI_CWindows_CStorage_CIApplicationData2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIApplicationData3_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIApplicationData3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIApplicationData3 __x_ABI_CWindows_CStorage_CIApplicationData3;

#endif // ____x_ABI_CWindows_CStorage_CIApplicationData3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIApplicationDataContainer_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIApplicationDataContainer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIApplicationDataContainer __x_ABI_CWindows_CStorage_CIApplicationDataContainer;

#endif // ____x_ABI_CWindows_CStorage_CIApplicationDataContainer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIApplicationDataStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIApplicationDataStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIApplicationDataStatics __x_ABI_CWindows_CStorage_CIApplicationDataStatics;

#endif // ____x_ABI_CWindows_CStorage_CIApplicationDataStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIApplicationDataStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIApplicationDataStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIApplicationDataStatics2 __x_ABI_CWindows_CStorage_CIApplicationDataStatics2;

#endif // ____x_ABI_CWindows_CStorage_CIApplicationDataStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CICachedFileManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CICachedFileManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CICachedFileManagerStatics __x_ABI_CWindows_CStorage_CICachedFileManagerStatics;

#endif // ____x_ABI_CWindows_CStorage_CICachedFileManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIDownloadsFolderStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIDownloadsFolderStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIDownloadsFolderStatics __x_ABI_CWindows_CStorage_CIDownloadsFolderStatics;

#endif // ____x_ABI_CWindows_CStorage_CIDownloadsFolderStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2 __x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2;

#endif // ____x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIFileIOStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIFileIOStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIFileIOStatics __x_ABI_CWindows_CStorage_CIFileIOStatics;

#endif // ____x_ABI_CWindows_CStorage_CIFileIOStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIKnownFoldersCameraRollStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIKnownFoldersCameraRollStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIKnownFoldersCameraRollStatics __x_ABI_CWindows_CStorage_CIKnownFoldersCameraRollStatics;

#endif // ____x_ABI_CWindows_CStorage_CIKnownFoldersCameraRollStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIKnownFoldersPlaylistsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIKnownFoldersPlaylistsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIKnownFoldersPlaylistsStatics __x_ABI_CWindows_CStorage_CIKnownFoldersPlaylistsStatics;

#endif // ____x_ABI_CWindows_CStorage_CIKnownFoldersPlaylistsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics __x_ABI_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics;

#endif // ____x_ABI_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIKnownFoldersStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIKnownFoldersStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIKnownFoldersStatics __x_ABI_CWindows_CStorage_CIKnownFoldersStatics;

#endif // ____x_ABI_CWindows_CStorage_CIKnownFoldersStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIKnownFoldersStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIKnownFoldersStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIKnownFoldersStatics2 __x_ABI_CWindows_CStorage_CIKnownFoldersStatics2;

#endif // ____x_ABI_CWindows_CStorage_CIKnownFoldersStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIKnownFoldersStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIKnownFoldersStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIKnownFoldersStatics3 __x_ABI_CWindows_CStorage_CIKnownFoldersStatics3;

#endif // ____x_ABI_CWindows_CStorage_CIKnownFoldersStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIPathIOStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIPathIOStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIPathIOStatics __x_ABI_CWindows_CStorage_CIPathIOStatics;

#endif // ____x_ABI_CWindows_CStorage_CIPathIOStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CISetVersionDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CISetVersionDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CISetVersionDeferral __x_ABI_CWindows_CStorage_CISetVersionDeferral;

#endif // ____x_ABI_CWindows_CStorage_CISetVersionDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CISetVersionRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CISetVersionRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CISetVersionRequest __x_ABI_CWindows_CStorage_CISetVersionRequest;

#endif // ____x_ABI_CWindows_CStorage_CISetVersionRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFile __x_ABI_CWindows_CStorage_CIStorageFile;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFile2_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFile2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFile2 __x_ABI_CWindows_CStorage_CIStorageFile2;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFile2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFilePropertiesWithAvailability_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFilePropertiesWithAvailability_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFilePropertiesWithAvailability __x_ABI_CWindows_CStorage_CIStorageFilePropertiesWithAvailability;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFilePropertiesWithAvailability_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFileStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFileStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFileStatics __x_ABI_CWindows_CStorage_CIStorageFileStatics;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFileStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFolder __x_ABI_CWindows_CStorage_CIStorageFolder;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFolder_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFolder2_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFolder2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFolder2 __x_ABI_CWindows_CStorage_CIStorageFolder2;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFolder2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFolder3_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFolder3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFolder3 __x_ABI_CWindows_CStorage_CIStorageFolder3;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFolder3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFolderStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFolderStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFolderStatics __x_ABI_CWindows_CStorage_CIStorageFolderStatics;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFolderStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageItem __x_ABI_CWindows_CStorage_CIStorageItem;

#endif // ____x_ABI_CWindows_CStorage_CIStorageItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageItem2_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageItem2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageItem2 __x_ABI_CWindows_CStorage_CIStorageItem2;

#endif // ____x_ABI_CWindows_CStorage_CIStorageItem2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageItemProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageItemProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageItemProperties __x_ABI_CWindows_CStorage_CIStorageItemProperties;

#endif // ____x_ABI_CWindows_CStorage_CIStorageItemProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageItemProperties2_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageItemProperties2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageItemProperties2 __x_ABI_CWindows_CStorage_CIStorageItemProperties2;

#endif // ____x_ABI_CWindows_CStorage_CIStorageItemProperties2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageItemPropertiesWithProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageItemPropertiesWithProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageItemPropertiesWithProvider __x_ABI_CWindows_CStorage_CIStorageItemPropertiesWithProvider;

#endif // ____x_ABI_CWindows_CStorage_CIStorageItemPropertiesWithProvider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageLibrary_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageLibrary_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageLibrary __x_ABI_CWindows_CStorage_CIStorageLibrary;

#endif // ____x_ABI_CWindows_CStorage_CIStorageLibrary_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageLibrary2_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageLibrary2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageLibrary2 __x_ABI_CWindows_CStorage_CIStorageLibrary2;

#endif // ____x_ABI_CWindows_CStorage_CIStorageLibrary2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageLibrary3_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageLibrary3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageLibrary3 __x_ABI_CWindows_CStorage_CIStorageLibrary3;

#endif // ____x_ABI_CWindows_CStorage_CIStorageLibrary3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageLibraryChange_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageLibraryChange_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageLibraryChange __x_ABI_CWindows_CStorage_CIStorageLibraryChange;

#endif // ____x_ABI_CWindows_CStorage_CIStorageLibraryChange_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageLibraryChangeReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageLibraryChangeReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageLibraryChangeReader __x_ABI_CWindows_CStorage_CIStorageLibraryChangeReader;

#endif // ____x_ABI_CWindows_CStorage_CIStorageLibraryChangeReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker __x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker;

#endif // ____x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageLibraryStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageLibraryStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageLibraryStatics __x_ABI_CWindows_CStorage_CIStorageLibraryStatics;

#endif // ____x_ABI_CWindows_CStorage_CIStorageLibraryStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageLibraryStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageLibraryStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageLibraryStatics2 __x_ABI_CWindows_CStorage_CIStorageLibraryStatics2;

#endif // ____x_ABI_CWindows_CStorage_CIStorageLibraryStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageProvider __x_ABI_CWindows_CStorage_CIStorageProvider;

#endif // ____x_ABI_CWindows_CStorage_CIStorageProvider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageProvider2_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageProvider2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageProvider2 __x_ABI_CWindows_CStorage_CIStorageProvider2;

#endif // ____x_ABI_CWindows_CStorage_CIStorageProvider2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageStreamTransaction_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageStreamTransaction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageStreamTransaction __x_ABI_CWindows_CStorage_CIStorageStreamTransaction;

#endif // ____x_ABI_CWindows_CStorage_CIStorageStreamTransaction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStreamedFileDataRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStreamedFileDataRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStreamedFileDataRequest __x_ABI_CWindows_CStorage_CIStreamedFileDataRequest;

#endif // ____x_ABI_CWindows_CStorage_CIStreamedFileDataRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CISystemAudioProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CISystemAudioProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CISystemAudioProperties __x_ABI_CWindows_CStorage_CISystemAudioProperties;

#endif // ____x_ABI_CWindows_CStorage_CISystemAudioProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CISystemDataPaths_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CISystemDataPaths_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CISystemDataPaths __x_ABI_CWindows_CStorage_CISystemDataPaths;

#endif // ____x_ABI_CWindows_CStorage_CISystemDataPaths_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CISystemDataPathsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CISystemDataPathsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CISystemDataPathsStatics __x_ABI_CWindows_CStorage_CISystemDataPathsStatics;

#endif // ____x_ABI_CWindows_CStorage_CISystemDataPathsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CISystemGPSProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CISystemGPSProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CISystemGPSProperties __x_ABI_CWindows_CStorage_CISystemGPSProperties;

#endif // ____x_ABI_CWindows_CStorage_CISystemGPSProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CISystemImageProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CISystemImageProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CISystemImageProperties __x_ABI_CWindows_CStorage_CISystemImageProperties;

#endif // ____x_ABI_CWindows_CStorage_CISystemImageProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CISystemMediaProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CISystemMediaProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CISystemMediaProperties __x_ABI_CWindows_CStorage_CISystemMediaProperties;

#endif // ____x_ABI_CWindows_CStorage_CISystemMediaProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CISystemMusicProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CISystemMusicProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CISystemMusicProperties __x_ABI_CWindows_CStorage_CISystemMusicProperties;

#endif // ____x_ABI_CWindows_CStorage_CISystemMusicProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CISystemPhotoProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CISystemPhotoProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CISystemPhotoProperties __x_ABI_CWindows_CStorage_CISystemPhotoProperties;

#endif // ____x_ABI_CWindows_CStorage_CISystemPhotoProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CISystemProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CISystemProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CISystemProperties __x_ABI_CWindows_CStorage_CISystemProperties;

#endif // ____x_ABI_CWindows_CStorage_CISystemProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CISystemVideoProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CISystemVideoProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CISystemVideoProperties __x_ABI_CWindows_CStorage_CISystemVideoProperties;

#endif // ____x_ABI_CWindows_CStorage_CISystemVideoProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIUserDataPaths_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIUserDataPaths_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIUserDataPaths __x_ABI_CWindows_CStorage_CIUserDataPaths;

#endif // ____x_ABI_CWindows_CStorage_CIUserDataPaths_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIUserDataPathsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIUserDataPathsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIUserDataPathsStatics __x_ABI_CWindows_CStorage_CIUserDataPathsStatics;

#endif // ____x_ABI_CWindows_CStorage_CIUserDataPathsStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

#if !defined(____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_HSTRING __x_ABI_C__FIAsyncOperation_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperation_1_HSTRING* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        __x_ABI_CWindows_CStorage_CIStorageItem** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CIStorageItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CIStorageItem** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CIStorageItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        __x_ABI_CWindows_CStorage_CIStorageItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CIStorageItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFile __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFile;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_CWindows_CStorage_CIStorageFile** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CIStorageFile** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFileVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFile
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFile __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFile;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFile** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFileVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFile
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CIStorageFile** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CIStorageFile** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFileVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFileVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFileVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFolder __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFolder;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFolder;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CIStorageFolder** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFolder
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFolder __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFolder;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFolder;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageFolder** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFolder
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CIStorageFolder** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CIStorageFolder** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryChange __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryChange;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
        __x_ABI_CWindows_CStorage_CIStorageLibraryChange** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CIStorageLibraryChange** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryChangeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryChange
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryChange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibraryChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibraryChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibraryChange __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibraryChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibraryChange;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibraryChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CStorage__CStorageLibraryChange** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibraryChangeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibraryChange
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibraryChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CStorage__CStorageLibraryChange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CIStorageLibraryChange** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
        __x_ABI_CWindows_CStorage_CIStorageLibraryChange* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CIStorageLibraryChange** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChangeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChangeVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChangeVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1_HSTRING __x_ABI_C__FIVector_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1_HSTRING;

    typedef struct __x_ABI_C__FIVector_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1_HSTRING* This,
        __x_ABI_C__FIVectorView_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVector_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1_HSTRING;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRING __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1_HSTRING* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRING* This,
        __x_ABI_C__FIVector_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRING* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CApplicationData __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CApplicationData;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CApplicationData_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CApplicationData_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CApplicationData __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CApplicationData;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CApplicationData;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CApplicationDataVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CApplicationData* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CApplicationData* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CApplicationData* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CApplicationData* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CApplicationData* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CApplicationData* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CApplicationData* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CApplicationData* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CApplicationData* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CApplicationData** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CApplicationData* This,
        __x_ABI_CWindows_CStorage_CIApplicationData** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CApplicationDataVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CApplicationData
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CApplicationDataVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CApplicationData_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CApplicationData_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CApplicationData_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CApplicationData __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CApplicationData;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CApplicationData;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CApplicationDataVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CApplicationData* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CApplicationData* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CApplicationData* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CApplicationData* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CApplicationData* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CApplicationDataVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CApplicationData
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CApplicationDataVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CApplicationData_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CStorage_CFileProperties_CIBasicProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CFileProperties_CIBasicProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CFileProperties_CIBasicProperties __x_ABI_CWindows_CStorage_CFileProperties_CIBasicProperties;

#endif // ____x_ABI_CWindows_CStorage_CFileProperties_CIBasicProperties_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties* This,
        __x_ABI_CWindows_CStorage_CFileProperties_CIBasicProperties** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicPropertiesVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicPropertiesVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicPropertiesVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicPropertiesVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnailVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamWithContentType** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnailVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnailVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnailVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnailVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnailVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        __x_ABI_CWindows_CStorage_CIStorageItem** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CIStorageItem_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CStorage_CProvider_CFileUpdateStatus __x_ABI_CWindows_CStorage_CProvider_CFileUpdateStatus;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus* This,
        enum __x_ABI_CWindows_CStorage_CProvider_CFileUpdateStatus* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatusVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatusVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_CWindows_CStorage_CIStorageFile** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFileVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFileVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFile_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageLibrary __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageLibrary;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibrary_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibrary_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibrary __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibrary;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibrary;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibraryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibrary* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibrary* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageLibrary* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageLibrary** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
        __x_ABI_CWindows_CStorage_CIStorageLibrary** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibraryVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibrary
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibraryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibrary_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageLibrary_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageLibrary_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageLibrary __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageLibrary;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageLibrary;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageLibraryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageLibrary* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageLibrary* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageLibrary* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibrary* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageLibraryVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageLibrary
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageLibraryVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageLibrary_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransactionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction* This,
        __x_ABI_CWindows_CStorage_CIStorageStreamTransaction** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransactionVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransactionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageStreamTransactionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageStreamTransactionVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageStreamTransactionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIBuffer __x_ABI_CWindows_CStorage_CStreams_CIBuffer;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
        __x_ABI_CWindows_CStorage_CIApplicationDataContainer** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainerVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainerVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainerVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIMapChangedEventArgs_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapChangedEventArgs_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapChangedEventArgs_1_HSTRING __x_ABI_C__FIMapChangedEventArgs_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapChangedEventArgs_1_HSTRING;

    typedef struct __x_ABI_C__FIMapChangedEventArgs_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapChangedEventArgs_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapChangedEventArgs_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapChangedEventArgs_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapChangedEventArgs_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapChangedEventArgs_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapChangedEventArgs_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CollectionChange)(__x_ABI_C__FIMapChangedEventArgs_1_HSTRING* This,
        enum __x_ABI_CWindows_CFoundation_CCollections_CCollectionChange* result);
    HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIMapChangedEventArgs_1_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIMapChangedEventArgs_1_HSTRINGVtbl;

    interface __x_ABI_C__FIMapChangedEventArgs_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMapChangedEventArgs_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapChangedEventArgs_1_HSTRING_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING_IInspectable __x_ABI_C__FIMapView_2_HSTRING_IInspectable;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING_IInspectable __x_ABI_C__FIMapView_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        HSTRING key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** first,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
        HSTRING key,
        __x_ABI_CWindows_CStorage_CIApplicationDataContainer** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer** first,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainerVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainerVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIMap_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMap_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMap_2_HSTRING_IInspectable __x_ABI_C__FIMap_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMap_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIMap_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
        HSTRING key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
        HSTRING key,
        IInspectable* value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
        HSTRING key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This);

        END_INTERFACE
    } __x_ABI_C__FIMap_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIMap_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIMap_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMap_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIObservableMap_2_HSTRING_IInspectable __x_ABI_C__FIObservableMap_2_HSTRING_IInspectable;

#if !defined(____x_ABI_C__FMapChangedEventHandler_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FMapChangedEventHandler_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FMapChangedEventHandler_2_HSTRING_IInspectable __x_ABI_C__FMapChangedEventHandler_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FMapChangedEventHandler_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FMapChangedEventHandler_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FMapChangedEventHandler_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FMapChangedEventHandler_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FMapChangedEventHandler_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FMapChangedEventHandler_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIObservableMap_2_HSTRING_IInspectable* sender,
        __x_ABI_C__FIMapChangedEventArgs_1_HSTRING* event);

        END_INTERFACE
    } __x_ABI_C__FMapChangedEventHandler_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FMapChangedEventHandler_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FMapChangedEventHandler_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FMapChangedEventHandler_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIObservableMap_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIObservableMap_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIObservableMap_2_HSTRING_IInspectable __x_ABI_C__FIObservableMap_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIObservableMap_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIObservableMap_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIObservableMap_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIObservableMap_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIObservableMap_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIObservableMap_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIObservableMap_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIObservableMap_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_MapChanged)(__x_ABI_C__FIObservableMap_2_HSTRING_IInspectable* This,
        __x_ABI_C__FMapChangedEventHandler_2_HSTRING_IInspectable* vhnd,
        EventRegistrationToken* result);
    HRESULT (STDMETHODCALLTYPE* remove_MapChanged)(__x_ABI_C__FIObservableMap_2_HSTRING_IInspectable* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_C__FIObservableMap_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIObservableMap_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIObservableMap_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIObservableMap_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CIStorageFolder** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CIStorageFolder* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        UINT32 index,
        __x_ABI_CWindows_CStorage_CIStorageFolder* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CIStorageFolder** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CStorage_CIStorageFolder** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolder __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolder;

#if !defined(____x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CStorage__CStorageFolder __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CStorage__CStorageFolder;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CStorage__CStorageFolder;

    typedef struct __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolder* sender,
        __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs* event);

        END_INTERFACE
    } __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl;

    interface __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CStorage__CStorageFolder
    {
        CONST_VTBL struct __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolder __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolder;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolder;

    typedef struct __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_VectorChanged)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        __x_ABI_C__FVectorChangedEventHandler_1___x_ABI_CWindows__CStorage__CStorageFolder* vhnd,
        EventRegistrationToken* result);
    HRESULT (STDMETHODCALLTYPE* remove_VectorChanged)(__x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolder* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl;

    interface __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolder
    {
        CONST_VTBL struct __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolderVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolder_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CApplicationData_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CApplicationData_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CApplicationData_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CApplicationData_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CApplicationData_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CApplicationData_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CApplicationData_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CApplicationData_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CApplicationData_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CApplicationData_IInspectable* This,
        __x_ABI_CWindows_CStorage_CIApplicationData* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CApplicationData_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CApplicationData_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CApplicationData_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CApplicationData_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CStorageLibrary_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CStorageLibrary_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CStorageLibrary_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CStorageLibrary_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CStorageLibrary_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CStorageLibrary_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CStorageLibrary_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CStorageLibrary_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CStorageLibrary_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CStorageLibrary_IInspectable* This,
        __x_ABI_CWindows_CStorage_CIStorageLibrary* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CStorageLibrary_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CStorageLibrary_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CStorageLibrary_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CStorageLibrary_IInspectable_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties __x_ABI_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties;

#endif // ____x_ABI_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CStorage_CFileProperties_CThumbnailMode __x_ABI_CWindows_CStorage_CFileProperties_CThumbnailMode;

typedef enum __x_ABI_CWindows_CStorage_CFileProperties_CThumbnailOptions __x_ABI_CWindows_CStorage_CFileProperties_CThumbnailOptions;

#ifndef ____x_ABI_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations __x_ABI_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations;

#endif // ____x_ABI_CWindows_CStorage_CSearch_CIStorageFolderQueryOperations_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIInputStreamReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIInputStreamReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIInputStreamReference __x_ABI_CWindows_CStorage_CStreams_CIInputStreamReference;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIInputStreamReference_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIOutputStream __x_ABI_CWindows_CStorage_CStreams_CIOutputStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIOutputStream_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CStorage_CStreams_CUnicodeEncoding __x_ABI_CWindows_CStorage_CStreams_CUnicodeEncoding;

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CIUser __x_ABI_CWindows_CSystem_CIUser;

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CStorage_CApplicationDataCreateDisposition __x_ABI_CWindows_CStorage_CApplicationDataCreateDisposition;

typedef enum __x_ABI_CWindows_CStorage_CApplicationDataLocality __x_ABI_CWindows_CStorage_CApplicationDataLocality;

typedef enum __x_ABI_CWindows_CStorage_CCreationCollisionOption __x_ABI_CWindows_CStorage_CCreationCollisionOption;

typedef enum __x_ABI_CWindows_CStorage_CFileAccessMode __x_ABI_CWindows_CStorage_CFileAccessMode;

typedef enum __x_ABI_CWindows_CStorage_CFileAttributes __x_ABI_CWindows_CStorage_CFileAttributes;

typedef enum __x_ABI_CWindows_CStorage_CKnownFolderId __x_ABI_CWindows_CStorage_CKnownFolderId;

typedef enum __x_ABI_CWindows_CStorage_CKnownLibraryId __x_ABI_CWindows_CStorage_CKnownLibraryId;

typedef enum __x_ABI_CWindows_CStorage_CNameCollisionOption __x_ABI_CWindows_CStorage_CNameCollisionOption;

typedef enum __x_ABI_CWindows_CStorage_CStorageDeleteOption __x_ABI_CWindows_CStorage_CStorageDeleteOption;

typedef enum __x_ABI_CWindows_CStorage_CStorageItemTypes __x_ABI_CWindows_CStorage_CStorageItemTypes;

typedef enum __x_ABI_CWindows_CStorage_CStorageLibraryChangeType __x_ABI_CWindows_CStorage_CStorageLibraryChangeType;

typedef enum __x_ABI_CWindows_CStorage_CStorageOpenOptions __x_ABI_CWindows_CStorage_CStorageOpenOptions;

typedef enum __x_ABI_CWindows_CStorage_CStreamedFileFailureMode __x_ABI_CWindows_CStorage_CStreamedFileFailureMode;

enum __x_ABI_CWindows_CStorage_CApplicationDataCreateDisposition
    {
        __x_ABI_CWindows_CStorage_CApplicationDataCreateDisposition_Always = 0,
    __x_ABI_CWindows_CStorage_CApplicationDataCreateDisposition_Existing = 1,
};

enum __x_ABI_CWindows_CStorage_CApplicationDataLocality
    {
        __x_ABI_CWindows_CStorage_CApplicationDataLocality_Local = 0,
    __x_ABI_CWindows_CStorage_CApplicationDataLocality_Roaming = 1,
    __x_ABI_CWindows_CStorage_CApplicationDataLocality_Temporary = 2,
    __x_ABI_CWindows_CStorage_CApplicationDataLocality_LocalCache = 3,
};

enum __x_ABI_CWindows_CStorage_CCreationCollisionOption
    {
        __x_ABI_CWindows_CStorage_CCreationCollisionOption_GenerateUniqueName = 0,
    __x_ABI_CWindows_CStorage_CCreationCollisionOption_ReplaceExisting = 1,
    __x_ABI_CWindows_CStorage_CCreationCollisionOption_FailIfExists = 2,
    __x_ABI_CWindows_CStorage_CCreationCollisionOption_OpenIfExists = 3,
};

enum __x_ABI_CWindows_CStorage_CFileAccessMode
    {
        __x_ABI_CWindows_CStorage_CFileAccessMode_Read = 0,
    __x_ABI_CWindows_CStorage_CFileAccessMode_ReadWrite = 1,
};

enum __x_ABI_CWindows_CStorage_CFileAttributes
    {
        __x_ABI_CWindows_CStorage_CFileAttributes_Normal = 0,
    __x_ABI_CWindows_CStorage_CFileAttributes_ReadOnly = 0x1,
    __x_ABI_CWindows_CStorage_CFileAttributes_Directory = 0x10,
    __x_ABI_CWindows_CStorage_CFileAttributes_Archive = 0x20,
    __x_ABI_CWindows_CStorage_CFileAttributes_Temporary = 0x100,
    __x_ABI_CWindows_CStorage_CFileAttributes_LocallyIncomplete = 0x200,
};

enum __x_ABI_CWindows_CStorage_CKnownFolderId
    {
        __x_ABI_CWindows_CStorage_CKnownFolderId_AppCaptures = 0,
    __x_ABI_CWindows_CStorage_CKnownFolderId_CameraRoll = 1,
    __x_ABI_CWindows_CStorage_CKnownFolderId_DocumentsLibrary = 2,
    __x_ABI_CWindows_CStorage_CKnownFolderId_HomeGroup = 3,
    __x_ABI_CWindows_CStorage_CKnownFolderId_MediaServerDevices = 4,
    __x_ABI_CWindows_CStorage_CKnownFolderId_MusicLibrary = 5,
    __x_ABI_CWindows_CStorage_CKnownFolderId_Objects3D = 6,
    __x_ABI_CWindows_CStorage_CKnownFolderId_PicturesLibrary = 7,
    __x_ABI_CWindows_CStorage_CKnownFolderId_Playlists = 8,
    __x_ABI_CWindows_CStorage_CKnownFolderId_RecordedCalls = 9,
    __x_ABI_CWindows_CStorage_CKnownFolderId_RemovableDevices = 10,
    __x_ABI_CWindows_CStorage_CKnownFolderId_SavedPictures = 11,
    __x_ABI_CWindows_CStorage_CKnownFolderId_Screenshots = 12,
    __x_ABI_CWindows_CStorage_CKnownFolderId_VideosLibrary = 13,
    __x_ABI_CWindows_CStorage_CKnownFolderId_AllAppMods = 14,
    __x_ABI_CWindows_CStorage_CKnownFolderId_CurrentAppMods = 15,
};

enum __x_ABI_CWindows_CStorage_CKnownLibraryId
    {
        __x_ABI_CWindows_CStorage_CKnownLibraryId_Music = 0,
    __x_ABI_CWindows_CStorage_CKnownLibraryId_Pictures = 1,
    __x_ABI_CWindows_CStorage_CKnownLibraryId_Videos = 2,
    __x_ABI_CWindows_CStorage_CKnownLibraryId_Documents = 3,
};

enum __x_ABI_CWindows_CStorage_CNameCollisionOption
    {
        __x_ABI_CWindows_CStorage_CNameCollisionOption_GenerateUniqueName = 0,
    __x_ABI_CWindows_CStorage_CNameCollisionOption_ReplaceExisting = 1,
    __x_ABI_CWindows_CStorage_CNameCollisionOption_FailIfExists = 2,
};

enum __x_ABI_CWindows_CStorage_CStorageDeleteOption
    {
        __x_ABI_CWindows_CStorage_CStorageDeleteOption_Default = 0,
    __x_ABI_CWindows_CStorage_CStorageDeleteOption_PermanentDelete = 1,
};

enum __x_ABI_CWindows_CStorage_CStorageItemTypes
    {
        __x_ABI_CWindows_CStorage_CStorageItemTypes_None = 0,
    __x_ABI_CWindows_CStorage_CStorageItemTypes_File = 0x1,
    __x_ABI_CWindows_CStorage_CStorageItemTypes_Folder = 0x2,
};

enum __x_ABI_CWindows_CStorage_CStorageLibraryChangeType
    {
        __x_ABI_CWindows_CStorage_CStorageLibraryChangeType_Created = 0,
    __x_ABI_CWindows_CStorage_CStorageLibraryChangeType_Deleted = 1,
    __x_ABI_CWindows_CStorage_CStorageLibraryChangeType_MovedOrRenamed = 2,
    __x_ABI_CWindows_CStorage_CStorageLibraryChangeType_ContentsChanged = 3,
    __x_ABI_CWindows_CStorage_CStorageLibraryChangeType_MovedOutOfLibrary = 4,
    __x_ABI_CWindows_CStorage_CStorageLibraryChangeType_MovedIntoLibrary = 5,
    __x_ABI_CWindows_CStorage_CStorageLibraryChangeType_ContentsReplaced = 6,
    __x_ABI_CWindows_CStorage_CStorageLibraryChangeType_IndexingStatusChanged = 7,
    __x_ABI_CWindows_CStorage_CStorageLibraryChangeType_EncryptionChanged = 8,
    __x_ABI_CWindows_CStorage_CStorageLibraryChangeType_ChangeTrackingLost = 9,
};

enum __x_ABI_CWindows_CStorage_CStorageOpenOptions
    {
        __x_ABI_CWindows_CStorage_CStorageOpenOptions_None = 0,
    __x_ABI_CWindows_CStorage_CStorageOpenOptions_AllowOnlyReaders = 0x1,
    __x_ABI_CWindows_CStorage_CStorageOpenOptions_AllowReadersAndWriters = 0x2,
};

enum __x_ABI_CWindows_CStorage_CStreamedFileFailureMode
    {
        __x_ABI_CWindows_CStorage_CStreamedFileFailureMode_Failed = 0,
    __x_ABI_CWindows_CStorage_CStreamedFileFailureMode_CurrentlyUnavailable = 1,
    __x_ABI_CWindows_CStorage_CStreamedFileFailureMode_Incomplete = 2,
};

#if !defined(____x_ABI_CWindows_CStorage_CIApplicationDataSetVersionHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIApplicationDataSetVersionHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIApplicationDataSetVersionHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIApplicationDataSetVersionHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIApplicationDataSetVersionHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIApplicationDataSetVersionHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CStorage_CIApplicationDataSetVersionHandler* This,
        __x_ABI_CWindows_CStorage_CISetVersionRequest* setVersionRequest);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIApplicationDataSetVersionHandlerVtbl;

    interface __x_ABI_CWindows_CStorage_CIApplicationDataSetVersionHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIApplicationDataSetVersionHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIApplicationDataSetVersionHandler;
    #endif /* !defined(____x_ABI_CWindows_CStorage_CIApplicationDataSetVersionHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStreamedFileDataRequestedHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStreamedFileDataRequestedHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStreamedFileDataRequestedHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStreamedFileDataRequestedHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStreamedFileDataRequestedHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStreamedFileDataRequestedHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CStorage_CIStreamedFileDataRequestedHandler* This,
        __x_ABI_CWindows_CStorage_CStreams_CIOutputStream* stream);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStreamedFileDataRequestedHandlerVtbl;

    interface __x_ABI_CWindows_CStorage_CIStreamedFileDataRequestedHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStreamedFileDataRequestedHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStreamedFileDataRequestedHandler;
    #endif /* !defined(____x_ABI_CWindows_CStorage_CIStreamedFileDataRequestedHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIAppDataPaths_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIAppDataPaths_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIAppDataPathsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIAppDataPaths* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIAppDataPaths* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIAppDataPaths* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIAppDataPaths* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIAppDataPaths* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIAppDataPaths* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Cookies)(__x_ABI_CWindows_CStorage_CIAppDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Desktop)(__x_ABI_CWindows_CStorage_CIAppDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Documents)(__x_ABI_CWindows_CStorage_CIAppDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Favorites)(__x_ABI_CWindows_CStorage_CIAppDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_History)(__x_ABI_CWindows_CStorage_CIAppDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_InternetCache)(__x_ABI_CWindows_CStorage_CIAppDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_LocalAppData)(__x_ABI_CWindows_CStorage_CIAppDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ProgramData)(__x_ABI_CWindows_CStorage_CIAppDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_RoamingAppData)(__x_ABI_CWindows_CStorage_CIAppDataPaths* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIAppDataPathsVtbl;

    interface __x_ABI_CWindows_CStorage_CIAppDataPaths
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIAppDataPathsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIAppDataPaths;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIAppDataPaths_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIAppDataPathsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIAppDataPathsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIAppDataPathsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIAppDataPathsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIAppDataPathsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIAppDataPathsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIAppDataPathsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIAppDataPathsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIAppDataPathsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForUser)(__x_ABI_CWindows_CStorage_CIAppDataPathsStatics* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CStorage_CIAppDataPaths** result);
    HRESULT (STDMETHODCALLTYPE* GetDefault)(__x_ABI_CWindows_CStorage_CIAppDataPathsStatics* This,
        __x_ABI_CWindows_CStorage_CIAppDataPaths** result);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIAppDataPathsStaticsVtbl;

    interface __x_ABI_CWindows_CStorage_CIAppDataPathsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIAppDataPathsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIAppDataPathsStatics;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIAppDataPathsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIApplicationData_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIApplicationData_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIApplicationDataVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIApplicationData* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIApplicationData* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIApplicationData* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIApplicationData* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIApplicationData* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIApplicationData* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Version)(__x_ABI_CWindows_CStorage_CIApplicationData* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* SetVersionAsync)(__x_ABI_CWindows_CStorage_CIApplicationData* This,
        UINT32 desiredVersion,
        __x_ABI_CWindows_CStorage_CIApplicationDataSetVersionHandler* handler,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** setVersionOperation);
    HRESULT (STDMETHODCALLTYPE* ClearAllAsync)(__x_ABI_CWindows_CStorage_CIApplicationData* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** clearOperation);
    HRESULT (STDMETHODCALLTYPE* ClearAsync)(__x_ABI_CWindows_CStorage_CIApplicationData* This,
        enum __x_ABI_CWindows_CStorage_CApplicationDataLocality locality,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** clearOperation);
    HRESULT (STDMETHODCALLTYPE* get_LocalSettings)(__x_ABI_CWindows_CStorage_CIApplicationData* This,
        __x_ABI_CWindows_CStorage_CIApplicationDataContainer** value);
    HRESULT (STDMETHODCALLTYPE* get_RoamingSettings)(__x_ABI_CWindows_CStorage_CIApplicationData* This,
        __x_ABI_CWindows_CStorage_CIApplicationDataContainer** value);
    HRESULT (STDMETHODCALLTYPE* get_LocalFolder)(__x_ABI_CWindows_CStorage_CIApplicationData* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* get_RoamingFolder)(__x_ABI_CWindows_CStorage_CIApplicationData* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* get_TemporaryFolder)(__x_ABI_CWindows_CStorage_CIApplicationData* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* add_DataChanged)(__x_ABI_CWindows_CStorage_CIApplicationData* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CApplicationData_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DataChanged)(__x_ABI_CWindows_CStorage_CIApplicationData* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* SignalDataChanged)(__x_ABI_CWindows_CStorage_CIApplicationData* This);
    HRESULT (STDMETHODCALLTYPE* get_RoamingStorageQuota)(__x_ABI_CWindows_CStorage_CIApplicationData* This,
        UINT64* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIApplicationDataVtbl;

    interface __x_ABI_CWindows_CStorage_CIApplicationData
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIApplicationDataVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIApplicationData;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIApplicationData_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIApplicationData2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIApplicationData2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIApplicationData2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIApplicationData2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIApplicationData2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIApplicationData2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIApplicationData2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIApplicationData2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIApplicationData2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LocalCacheFolder)(__x_ABI_CWindows_CStorage_CIApplicationData2* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIApplicationData2Vtbl;

    interface __x_ABI_CWindows_CStorage_CIApplicationData2
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIApplicationData2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIApplicationData2;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIApplicationData2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIApplicationData3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIApplicationData3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIApplicationData3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIApplicationData3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIApplicationData3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIApplicationData3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIApplicationData3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIApplicationData3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIApplicationData3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetPublisherCacheFolder)(__x_ABI_CWindows_CStorage_CIApplicationData3* This,
        HSTRING folderName,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* ClearPublisherCacheFolderAsync)(__x_ABI_CWindows_CStorage_CIApplicationData3* This,
        HSTRING folderName,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** clearOperation);
    HRESULT (STDMETHODCALLTYPE* get_SharedLocalFolder)(__x_ABI_CWindows_CStorage_CIApplicationData3* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIApplicationData3Vtbl;

    interface __x_ABI_CWindows_CStorage_CIApplicationData3
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIApplicationData3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIApplicationData3;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIApplicationData3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIApplicationDataContainer_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIApplicationDataContainer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIApplicationDataContainerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIApplicationDataContainer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIApplicationDataContainer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIApplicationDataContainer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIApplicationDataContainer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIApplicationDataContainer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIApplicationDataContainer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CStorage_CIApplicationDataContainer* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Locality)(__x_ABI_CWindows_CStorage_CIApplicationDataContainer* This,
        enum __x_ABI_CWindows_CStorage_CApplicationDataLocality* value);
    HRESULT (STDMETHODCALLTYPE* get_Values)(__x_ABI_CWindows_CStorage_CIApplicationDataContainer* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);
    HRESULT (STDMETHODCALLTYPE* get_Containers)(__x_ABI_CWindows_CStorage_CIApplicationDataContainer* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CApplicationDataContainer** value);
    HRESULT (STDMETHODCALLTYPE* CreateContainer)(__x_ABI_CWindows_CStorage_CIApplicationDataContainer* This,
        HSTRING name,
        enum __x_ABI_CWindows_CStorage_CApplicationDataCreateDisposition disposition,
        __x_ABI_CWindows_CStorage_CIApplicationDataContainer** container);
    HRESULT (STDMETHODCALLTYPE* DeleteContainer)(__x_ABI_CWindows_CStorage_CIApplicationDataContainer* This,
        HSTRING name);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIApplicationDataContainerVtbl;

    interface __x_ABI_CWindows_CStorage_CIApplicationDataContainer
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIApplicationDataContainerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIApplicationDataContainer;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIApplicationDataContainer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIApplicationDataStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIApplicationDataStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIApplicationDataStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIApplicationDataStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIApplicationDataStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIApplicationDataStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIApplicationDataStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIApplicationDataStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIApplicationDataStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_CWindows_CStorage_CIApplicationDataStatics* This,
        __x_ABI_CWindows_CStorage_CIApplicationData** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIApplicationDataStaticsVtbl;

    interface __x_ABI_CWindows_CStorage_CIApplicationDataStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIApplicationDataStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIApplicationDataStatics;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIApplicationDataStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIApplicationDataStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIApplicationDataStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIApplicationDataStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIApplicationDataStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIApplicationDataStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIApplicationDataStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIApplicationDataStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIApplicationDataStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIApplicationDataStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForUserAsync)(__x_ABI_CWindows_CStorage_CIApplicationDataStatics2* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CApplicationData** getForUserOperation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIApplicationDataStatics2Vtbl;

    interface __x_ABI_CWindows_CStorage_CIApplicationDataStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIApplicationDataStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIApplicationDataStatics2;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIApplicationDataStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CICachedFileManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CICachedFileManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CICachedFileManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CICachedFileManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CICachedFileManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CICachedFileManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CICachedFileManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CICachedFileManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CICachedFileManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* DeferUpdates)(__x_ABI_CWindows_CStorage_CICachedFileManagerStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file);
    HRESULT (STDMETHODCALLTYPE* CompleteUpdatesAsync)(__x_ABI_CWindows_CStorage_CICachedFileManagerStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CProvider__CFileUpdateStatus** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CICachedFileManagerStaticsVtbl;

    interface __x_ABI_CWindows_CStorage_CICachedFileManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CICachedFileManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CICachedFileManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CStorage_CICachedFileManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIDownloadsFolderStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIDownloadsFolderStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIDownloadsFolderStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIDownloadsFolderStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIDownloadsFolderStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIDownloadsFolderStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIDownloadsFolderStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIDownloadsFolderStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIDownloadsFolderStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateFileAsync)(__x_ABI_CWindows_CStorage_CIDownloadsFolderStatics* This,
        HSTRING desiredName,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile** operation);
    HRESULT (STDMETHODCALLTYPE* CreateFolderAsync)(__x_ABI_CWindows_CStorage_CIDownloadsFolderStatics* This,
        HSTRING desiredName,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder** operation);
    HRESULT (STDMETHODCALLTYPE* CreateFileWithCollisionOptionAsync)(__x_ABI_CWindows_CStorage_CIDownloadsFolderStatics* This,
        HSTRING desiredName,
        enum __x_ABI_CWindows_CStorage_CCreationCollisionOption option,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile** operation);
    HRESULT (STDMETHODCALLTYPE* CreateFolderWithCollisionOptionAsync)(__x_ABI_CWindows_CStorage_CIDownloadsFolderStatics* This,
        HSTRING desiredName,
        enum __x_ABI_CWindows_CStorage_CCreationCollisionOption option,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIDownloadsFolderStaticsVtbl;

    interface __x_ABI_CWindows_CStorage_CIDownloadsFolderStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIDownloadsFolderStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIDownloadsFolderStatics;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIDownloadsFolderStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateFileForUserAsync)(__x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        HSTRING desiredName,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile** operation);
    HRESULT (STDMETHODCALLTYPE* CreateFolderForUserAsync)(__x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        HSTRING desiredName,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder** operation);
    HRESULT (STDMETHODCALLTYPE* CreateFileForUserWithCollisionOptionAsync)(__x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        HSTRING desiredName,
        enum __x_ABI_CWindows_CStorage_CCreationCollisionOption option,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile** operation);
    HRESULT (STDMETHODCALLTYPE* CreateFolderForUserWithCollisionOptionAsync)(__x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        HSTRING desiredName,
        enum __x_ABI_CWindows_CStorage_CCreationCollisionOption option,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2Vtbl;

    interface __x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIDownloadsFolderStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIFileIOStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIFileIOStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIFileIOStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIFileIOStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIFileIOStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIFileIOStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIFileIOStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIFileIOStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIFileIOStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ReadTextAsync)(__x_ABI_CWindows_CStorage_CIFileIOStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** textOperation);
    HRESULT (STDMETHODCALLTYPE* ReadTextWithEncodingAsync)(__x_ABI_CWindows_CStorage_CIFileIOStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        enum __x_ABI_CWindows_CStorage_CStreams_CUnicodeEncoding encoding,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** textOperation);
    HRESULT (STDMETHODCALLTYPE* WriteTextAsync)(__x_ABI_CWindows_CStorage_CIFileIOStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        HSTRING contents,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** textOperation);
    HRESULT (STDMETHODCALLTYPE* WriteTextWithEncodingAsync)(__x_ABI_CWindows_CStorage_CIFileIOStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        HSTRING contents,
        enum __x_ABI_CWindows_CStorage_CStreams_CUnicodeEncoding encoding,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** textOperation);
    HRESULT (STDMETHODCALLTYPE* AppendTextAsync)(__x_ABI_CWindows_CStorage_CIFileIOStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        HSTRING contents,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** textOperation);
    HRESULT (STDMETHODCALLTYPE* AppendTextWithEncodingAsync)(__x_ABI_CWindows_CStorage_CIFileIOStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        HSTRING contents,
        enum __x_ABI_CWindows_CStorage_CStreams_CUnicodeEncoding encoding,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** textOperation);
    HRESULT (STDMETHODCALLTYPE* ReadLinesAsync)(__x_ABI_CWindows_CStorage_CIFileIOStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRING** linesOperation);
    HRESULT (STDMETHODCALLTYPE* ReadLinesWithEncodingAsync)(__x_ABI_CWindows_CStorage_CIFileIOStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        enum __x_ABI_CWindows_CStorage_CStreams_CUnicodeEncoding encoding,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRING** linesOperation);
    HRESULT (STDMETHODCALLTYPE* WriteLinesAsync)(__x_ABI_CWindows_CStorage_CIFileIOStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_C__FIIterable_1_HSTRING* lines,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* WriteLinesWithEncodingAsync)(__x_ABI_CWindows_CStorage_CIFileIOStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_C__FIIterable_1_HSTRING* lines,
        enum __x_ABI_CWindows_CStorage_CStreams_CUnicodeEncoding encoding,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* AppendLinesAsync)(__x_ABI_CWindows_CStorage_CIFileIOStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_C__FIIterable_1_HSTRING* lines,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* AppendLinesWithEncodingAsync)(__x_ABI_CWindows_CStorage_CIFileIOStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_C__FIIterable_1_HSTRING* lines,
        enum __x_ABI_CWindows_CStorage_CStreams_CUnicodeEncoding encoding,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* ReadBufferAsync)(__x_ABI_CWindows_CStorage_CIFileIOStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer** operation);
    HRESULT (STDMETHODCALLTYPE* WriteBufferAsync)(__x_ABI_CWindows_CStorage_CIFileIOStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer* buffer,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* WriteBytesAsync)(__x_ABI_CWindows_CStorage_CIFileIOStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        UINT32 bufferLength,
        BYTE* buffer,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIFileIOStaticsVtbl;

    interface __x_ABI_CWindows_CStorage_CIFileIOStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIFileIOStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIFileIOStatics;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIFileIOStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIKnownFoldersCameraRollStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIKnownFoldersCameraRollStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIKnownFoldersCameraRollStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIKnownFoldersCameraRollStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIKnownFoldersCameraRollStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIKnownFoldersCameraRollStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIKnownFoldersCameraRollStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIKnownFoldersCameraRollStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIKnownFoldersCameraRollStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CameraRoll)(__x_ABI_CWindows_CStorage_CIKnownFoldersCameraRollStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIKnownFoldersCameraRollStaticsVtbl;

    interface __x_ABI_CWindows_CStorage_CIKnownFoldersCameraRollStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIKnownFoldersCameraRollStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIKnownFoldersCameraRollStatics;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIKnownFoldersCameraRollStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIKnownFoldersPlaylistsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIKnownFoldersPlaylistsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIKnownFoldersPlaylistsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIKnownFoldersPlaylistsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIKnownFoldersPlaylistsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIKnownFoldersPlaylistsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIKnownFoldersPlaylistsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIKnownFoldersPlaylistsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIKnownFoldersPlaylistsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Playlists)(__x_ABI_CWindows_CStorage_CIKnownFoldersPlaylistsStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIKnownFoldersPlaylistsStaticsVtbl;

    interface __x_ABI_CWindows_CStorage_CIKnownFoldersPlaylistsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIKnownFoldersPlaylistsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIKnownFoldersPlaylistsStatics;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIKnownFoldersPlaylistsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIKnownFoldersSavedPicturesStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SavedPictures)(__x_ABI_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIKnownFoldersSavedPicturesStaticsVtbl;

    interface __x_ABI_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIKnownFoldersSavedPicturesStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIKnownFoldersSavedPicturesStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIKnownFoldersStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIKnownFoldersStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIKnownFoldersStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MusicLibrary)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* get_PicturesLibrary)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* get_VideosLibrary)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* get_DocumentsLibrary)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* get_HomeGroup)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* get_RemovableDevices)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* get_MediaServerDevices)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIKnownFoldersStaticsVtbl;

    interface __x_ABI_CWindows_CStorage_CIKnownFoldersStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIKnownFoldersStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIKnownFoldersStatics;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIKnownFoldersStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIKnownFoldersStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIKnownFoldersStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIKnownFoldersStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Objects3D)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics2* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* get_AppCaptures)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics2* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* get_RecordedCalls)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics2* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIKnownFoldersStatics2Vtbl;

    interface __x_ABI_CWindows_CStorage_CIKnownFoldersStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIKnownFoldersStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIKnownFoldersStatics2;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIKnownFoldersStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIKnownFoldersStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIKnownFoldersStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIKnownFoldersStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetFolderForUserAsync)(__x_ABI_CWindows_CStorage_CIKnownFoldersStatics3* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        enum __x_ABI_CWindows_CStorage_CKnownFolderId folderId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIKnownFoldersStatics3Vtbl;

    interface __x_ABI_CWindows_CStorage_CIKnownFoldersStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIKnownFoldersStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIKnownFoldersStatics3;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIKnownFoldersStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIPathIOStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIPathIOStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIPathIOStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIPathIOStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIPathIOStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIPathIOStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIPathIOStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIPathIOStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIPathIOStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ReadTextAsync)(__x_ABI_CWindows_CStorage_CIPathIOStatics* This,
        HSTRING absolutePath,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** textOperation);
    HRESULT (STDMETHODCALLTYPE* ReadTextWithEncodingAsync)(__x_ABI_CWindows_CStorage_CIPathIOStatics* This,
        HSTRING absolutePath,
        enum __x_ABI_CWindows_CStorage_CStreams_CUnicodeEncoding encoding,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** textOperation);
    HRESULT (STDMETHODCALLTYPE* WriteTextAsync)(__x_ABI_CWindows_CStorage_CIPathIOStatics* This,
        HSTRING absolutePath,
        HSTRING contents,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** textOperation);
    HRESULT (STDMETHODCALLTYPE* WriteTextWithEncodingAsync)(__x_ABI_CWindows_CStorage_CIPathIOStatics* This,
        HSTRING absolutePath,
        HSTRING contents,
        enum __x_ABI_CWindows_CStorage_CStreams_CUnicodeEncoding encoding,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** textOperation);
    HRESULT (STDMETHODCALLTYPE* AppendTextAsync)(__x_ABI_CWindows_CStorage_CIPathIOStatics* This,
        HSTRING absolutePath,
        HSTRING contents,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** textOperation);
    HRESULT (STDMETHODCALLTYPE* AppendTextWithEncodingAsync)(__x_ABI_CWindows_CStorage_CIPathIOStatics* This,
        HSTRING absolutePath,
        HSTRING contents,
        enum __x_ABI_CWindows_CStorage_CStreams_CUnicodeEncoding encoding,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** textOperation);
    HRESULT (STDMETHODCALLTYPE* ReadLinesAsync)(__x_ABI_CWindows_CStorage_CIPathIOStatics* This,
        HSTRING absolutePath,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRING** linesOperation);
    HRESULT (STDMETHODCALLTYPE* ReadLinesWithEncodingAsync)(__x_ABI_CWindows_CStorage_CIPathIOStatics* This,
        HSTRING absolutePath,
        enum __x_ABI_CWindows_CStorage_CStreams_CUnicodeEncoding encoding,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1_HSTRING** linesOperation);
    HRESULT (STDMETHODCALLTYPE* WriteLinesAsync)(__x_ABI_CWindows_CStorage_CIPathIOStatics* This,
        HSTRING absolutePath,
        __x_ABI_C__FIIterable_1_HSTRING* lines,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* WriteLinesWithEncodingAsync)(__x_ABI_CWindows_CStorage_CIPathIOStatics* This,
        HSTRING absolutePath,
        __x_ABI_C__FIIterable_1_HSTRING* lines,
        enum __x_ABI_CWindows_CStorage_CStreams_CUnicodeEncoding encoding,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* AppendLinesAsync)(__x_ABI_CWindows_CStorage_CIPathIOStatics* This,
        HSTRING absolutePath,
        __x_ABI_C__FIIterable_1_HSTRING* lines,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* AppendLinesWithEncodingAsync)(__x_ABI_CWindows_CStorage_CIPathIOStatics* This,
        HSTRING absolutePath,
        __x_ABI_C__FIIterable_1_HSTRING* lines,
        enum __x_ABI_CWindows_CStorage_CStreams_CUnicodeEncoding encoding,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* ReadBufferAsync)(__x_ABI_CWindows_CStorage_CIPathIOStatics* This,
        HSTRING absolutePath,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIBuffer** operation);
    HRESULT (STDMETHODCALLTYPE* WriteBufferAsync)(__x_ABI_CWindows_CStorage_CIPathIOStatics* This,
        HSTRING absolutePath,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer* buffer,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* WriteBytesAsync)(__x_ABI_CWindows_CStorage_CIPathIOStatics* This,
        HSTRING absolutePath,
        UINT32 bufferLength,
        BYTE* buffer,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIPathIOStaticsVtbl;

    interface __x_ABI_CWindows_CStorage_CIPathIOStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIPathIOStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIPathIOStatics;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIPathIOStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CISetVersionDeferral_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CISetVersionDeferral_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CISetVersionDeferralVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CISetVersionDeferral* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CISetVersionDeferral* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CISetVersionDeferral* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CISetVersionDeferral* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CISetVersionDeferral* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CISetVersionDeferral* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Complete)(__x_ABI_CWindows_CStorage_CISetVersionDeferral* This);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CISetVersionDeferralVtbl;

    interface __x_ABI_CWindows_CStorage_CISetVersionDeferral
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CISetVersionDeferralVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CISetVersionDeferral;
#endif /* !defined(____x_ABI_CWindows_CStorage_CISetVersionDeferral_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CISetVersionRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CISetVersionRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CISetVersionRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CISetVersionRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CISetVersionRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CISetVersionRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CISetVersionRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CISetVersionRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CISetVersionRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CurrentVersion)(__x_ABI_CWindows_CStorage_CISetVersionRequest* This,
        UINT32* currentVersion);
    HRESULT (STDMETHODCALLTYPE* get_DesiredVersion)(__x_ABI_CWindows_CStorage_CISetVersionRequest* This,
        UINT32* desiredVersion);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CStorage_CISetVersionRequest* This,
        __x_ABI_CWindows_CStorage_CISetVersionDeferral** deferral);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CISetVersionRequestVtbl;

    interface __x_ABI_CWindows_CStorage_CISetVersionRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CISetVersionRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CISetVersionRequest;
#endif /* !defined(____x_ABI_CWindows_CStorage_CISetVersionRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageFile_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageFile_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageFileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageFile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageFile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageFile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageFile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageFile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageFile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FileType)(__x_ABI_CWindows_CStorage_CIStorageFile* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ContentType)(__x_ABI_CWindows_CStorage_CIStorageFile* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* OpenAsync)(__x_ABI_CWindows_CStorage_CIStorageFile* This,
        enum __x_ABI_CWindows_CStorage_CFileAccessMode accessMode,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream** operation);
    HRESULT (STDMETHODCALLTYPE* OpenTransactedWriteAsync)(__x_ABI_CWindows_CStorage_CIStorageFile* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction** operation);
    HRESULT (STDMETHODCALLTYPE* CopyOverloadDefaultNameAndOptions)(__x_ABI_CWindows_CStorage_CIStorageFile* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder* destinationFolder,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile** operation);
    HRESULT (STDMETHODCALLTYPE* CopyOverloadDefaultOptions)(__x_ABI_CWindows_CStorage_CIStorageFile* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder* destinationFolder,
        HSTRING desiredNewName,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile** operation);
    HRESULT (STDMETHODCALLTYPE* CopyOverload)(__x_ABI_CWindows_CStorage_CIStorageFile* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder* destinationFolder,
        HSTRING desiredNewName,
        enum __x_ABI_CWindows_CStorage_CNameCollisionOption option,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile** operation);
    HRESULT (STDMETHODCALLTYPE* CopyAndReplaceAsync)(__x_ABI_CWindows_CStorage_CIStorageFile* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* fileToReplace,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* MoveOverloadDefaultNameAndOptions)(__x_ABI_CWindows_CStorage_CIStorageFile* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder* destinationFolder,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* MoveOverloadDefaultOptions)(__x_ABI_CWindows_CStorage_CIStorageFile* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder* destinationFolder,
        HSTRING desiredNewName,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* MoveOverload)(__x_ABI_CWindows_CStorage_CIStorageFile* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder* destinationFolder,
        HSTRING desiredNewName,
        enum __x_ABI_CWindows_CStorage_CNameCollisionOption option,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* MoveAndReplaceAsync)(__x_ABI_CWindows_CStorage_CIStorageFile* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* fileToReplace,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageFileVtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageFile
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageFileVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageFile;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageFile_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageFile2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageFile2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageFile2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageFile2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageFile2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageFile2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageFile2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageFile2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageFile2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OpenWithOptionsAsync)(__x_ABI_CWindows_CStorage_CIStorageFile2* This,
        enum __x_ABI_CWindows_CStorage_CFileAccessMode accessMode,
        enum __x_ABI_CWindows_CStorage_CStorageOpenOptions options,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream** operation);
    HRESULT (STDMETHODCALLTYPE* OpenTransactedWriteWithOptionsAsync)(__x_ABI_CWindows_CStorage_CIStorageFile2* This,
        enum __x_ABI_CWindows_CStorage_CStorageOpenOptions options,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageStreamTransaction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageFile2Vtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageFile2
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageFile2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageFile2;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageFile2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageFilePropertiesWithAvailability_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageFilePropertiesWithAvailability_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageFilePropertiesWithAvailabilityVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageFilePropertiesWithAvailability* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageFilePropertiesWithAvailability* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageFilePropertiesWithAvailability* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageFilePropertiesWithAvailability* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageFilePropertiesWithAvailability* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageFilePropertiesWithAvailability* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsAvailable)(__x_ABI_CWindows_CStorage_CIStorageFilePropertiesWithAvailability* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageFilePropertiesWithAvailabilityVtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageFilePropertiesWithAvailability
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageFilePropertiesWithAvailabilityVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageFilePropertiesWithAvailability;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageFilePropertiesWithAvailability_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageFileStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageFileStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageFileStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageFileStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageFileStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageFileStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageFileStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageFileStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageFileStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetFileFromPathAsync)(__x_ABI_CWindows_CStorage_CIStorageFileStatics* This,
        HSTRING path,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile** operation);
    HRESULT (STDMETHODCALLTYPE* GetFileFromApplicationUriAsync)(__x_ABI_CWindows_CStorage_CIStorageFileStatics* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile** operation);
    HRESULT (STDMETHODCALLTYPE* CreateStreamedFileAsync)(__x_ABI_CWindows_CStorage_CIStorageFileStatics* This,
        HSTRING displayNameWithExtension,
        __x_ABI_CWindows_CStorage_CIStreamedFileDataRequestedHandler* dataRequested,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* thumbnail,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile** operation);
    HRESULT (STDMETHODCALLTYPE* ReplaceWithStreamedFileAsync)(__x_ABI_CWindows_CStorage_CIStorageFileStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* fileToReplace,
        __x_ABI_CWindows_CStorage_CIStreamedFileDataRequestedHandler* dataRequested,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* thumbnail,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile** operation);
    HRESULT (STDMETHODCALLTYPE* CreateStreamedFileFromUriAsync)(__x_ABI_CWindows_CStorage_CIStorageFileStatics* This,
        HSTRING displayNameWithExtension,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* thumbnail,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile** operation);
    HRESULT (STDMETHODCALLTYPE* ReplaceWithStreamedFileFromUriAsync)(__x_ABI_CWindows_CStorage_CIStorageFileStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* fileToReplace,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStreamReference* thumbnail,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageFileStaticsVtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageFileStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageFileStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageFileStatics;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageFileStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageFolder_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageFolder_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageFolderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageFolder* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageFolder* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageFolder* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageFolder* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageFolder* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageFolder* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateFileAsyncOverloadDefaultOptions)(__x_ABI_CWindows_CStorage_CIStorageFolder* This,
        HSTRING desiredName,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile** operation);
    HRESULT (STDMETHODCALLTYPE* CreateFileAsync)(__x_ABI_CWindows_CStorage_CIStorageFolder* This,
        HSTRING desiredName,
        enum __x_ABI_CWindows_CStorage_CCreationCollisionOption options,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile** operation);
    HRESULT (STDMETHODCALLTYPE* CreateFolderAsyncOverloadDefaultOptions)(__x_ABI_CWindows_CStorage_CIStorageFolder* This,
        HSTRING desiredName,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder** operation);
    HRESULT (STDMETHODCALLTYPE* CreateFolderAsync)(__x_ABI_CWindows_CStorage_CIStorageFolder* This,
        HSTRING desiredName,
        enum __x_ABI_CWindows_CStorage_CCreationCollisionOption options,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder** operation);
    HRESULT (STDMETHODCALLTYPE* GetFileAsync)(__x_ABI_CWindows_CStorage_CIStorageFolder* This,
        HSTRING name,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFile** operation);
    HRESULT (STDMETHODCALLTYPE* GetFolderAsync)(__x_ABI_CWindows_CStorage_CIStorageFolder* This,
        HSTRING name,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder** operation);
    HRESULT (STDMETHODCALLTYPE* GetItemAsync)(__x_ABI_CWindows_CStorage_CIStorageFolder* This,
        HSTRING name,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem** operation);
    HRESULT (STDMETHODCALLTYPE* GetFilesAsyncOverloadDefaultOptionsStartAndCount)(__x_ABI_CWindows_CStorage_CIStorageFolder* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFile** operation);
    HRESULT (STDMETHODCALLTYPE* GetFoldersAsyncOverloadDefaultOptionsStartAndCount)(__x_ABI_CWindows_CStorage_CIStorageFolder* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageFolder** operation);
    HRESULT (STDMETHODCALLTYPE* GetItemsAsyncOverloadDefaultStartAndCount)(__x_ABI_CWindows_CStorage_CIStorageFolder* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CIStorageItem** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageFolderVtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageFolder
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageFolderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageFolder;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageFolder_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageFolder2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageFolder2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageFolder2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageFolder2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageFolder2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageFolder2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageFolder2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageFolder2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageFolder2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* TryGetItemAsync)(__x_ABI_CWindows_CStorage_CIStorageFolder2* This,
        HSTRING name,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageFolder2Vtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageFolder2
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageFolder2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageFolder2;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageFolder2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageFolder3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageFolder3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageFolder3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageFolder3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageFolder3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageFolder3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageFolder3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageFolder3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageFolder3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* TryGetChangeTracker)(__x_ABI_CWindows_CStorage_CIStorageFolder3* This,
        __x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker** result);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageFolder3Vtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageFolder3
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageFolder3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageFolder3;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageFolder3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageFolderStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageFolderStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageFolderStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageFolderStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageFolderStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageFolderStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageFolderStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageFolderStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageFolderStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetFolderFromPathAsync)(__x_ABI_CWindows_CStorage_CIStorageFolderStatics* This,
        HSTRING path,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageFolderStaticsVtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageFolderStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageFolderStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageFolderStatics;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageFolderStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RenameAsyncOverloadDefaultOptions)(__x_ABI_CWindows_CStorage_CIStorageItem* This,
        HSTRING desiredName,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* RenameAsync)(__x_ABI_CWindows_CStorage_CIStorageItem* This,
        HSTRING desiredName,
        enum __x_ABI_CWindows_CStorage_CNameCollisionOption option,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* DeleteAsyncOverloadDefaultOptions)(__x_ABI_CWindows_CStorage_CIStorageItem* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* DeleteAsync)(__x_ABI_CWindows_CStorage_CIStorageItem* This,
        enum __x_ABI_CWindows_CStorage_CStorageDeleteOption option,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);
    HRESULT (STDMETHODCALLTYPE* GetBasicPropertiesAsync)(__x_ABI_CWindows_CStorage_CIStorageItem* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CBasicProperties** operation);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CStorage_CIStorageItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Path)(__x_ABI_CWindows_CStorage_CIStorageItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Attributes)(__x_ABI_CWindows_CStorage_CIStorageItem* This,
        enum __x_ABI_CWindows_CStorage_CFileAttributes* value);
    HRESULT (STDMETHODCALLTYPE* get_DateCreated)(__x_ABI_CWindows_CStorage_CIStorageItem* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* IsOfType)(__x_ABI_CWindows_CStorage_CIStorageItem* This,
        enum __x_ABI_CWindows_CStorage_CStorageItemTypes type,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageItemVtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageItem;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageItem2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageItem2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageItem2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageItem2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageItem2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageItem2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageItem2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageItem2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageItem2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetParentAsync)(__x_ABI_CWindows_CStorage_CIStorageItem2* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder** operation);
    HRESULT (STDMETHODCALLTYPE* IsEqual)(__x_ABI_CWindows_CStorage_CIStorageItem2* This,
        __x_ABI_CWindows_CStorage_CIStorageItem* item,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageItem2Vtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageItem2
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageItem2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageItem2;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageItem2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageItemProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageItemProperties_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageItemPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageItemProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageItemProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageItemProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageItemProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageItemProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageItemProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetThumbnailAsyncOverloadDefaultSizeDefaultOptions)(__x_ABI_CWindows_CStorage_CIStorageItemProperties* This,
        enum __x_ABI_CWindows_CStorage_CFileProperties_CThumbnailMode mode,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail** operation);
    HRESULT (STDMETHODCALLTYPE* GetThumbnailAsyncOverloadDefaultOptions)(__x_ABI_CWindows_CStorage_CIStorageItemProperties* This,
        enum __x_ABI_CWindows_CStorage_CFileProperties_CThumbnailMode mode,
        UINT32 requestedSize,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail** operation);
    HRESULT (STDMETHODCALLTYPE* GetThumbnailAsync)(__x_ABI_CWindows_CStorage_CIStorageItemProperties* This,
        enum __x_ABI_CWindows_CStorage_CFileProperties_CThumbnailMode mode,
        UINT32 requestedSize,
        enum __x_ABI_CWindows_CStorage_CFileProperties_CThumbnailOptions options,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail** operation);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CStorage_CIStorageItemProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayType)(__x_ABI_CWindows_CStorage_CIStorageItemProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_FolderRelativeId)(__x_ABI_CWindows_CStorage_CIStorageItemProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CStorage_CIStorageItemProperties* This,
        __x_ABI_CWindows_CStorage_CFileProperties_CIStorageItemContentProperties** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageItemPropertiesVtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageItemProperties
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageItemPropertiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageItemProperties;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageItemProperties_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageItemProperties2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageItemProperties2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageItemProperties2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageItemProperties2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageItemProperties2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageItemProperties2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageItemProperties2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageItemProperties2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageItemProperties2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetScaledImageAsThumbnailAsyncOverloadDefaultSizeDefaultOptions)(__x_ABI_CWindows_CStorage_CIStorageItemProperties2* This,
        enum __x_ABI_CWindows_CStorage_CFileProperties_CThumbnailMode mode,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail** operation);
    HRESULT (STDMETHODCALLTYPE* GetScaledImageAsThumbnailAsyncOverloadDefaultOptions)(__x_ABI_CWindows_CStorage_CIStorageItemProperties2* This,
        enum __x_ABI_CWindows_CStorage_CFileProperties_CThumbnailMode mode,
        UINT32 requestedSize,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail** operation);
    HRESULT (STDMETHODCALLTYPE* GetScaledImageAsThumbnailAsync)(__x_ABI_CWindows_CStorage_CIStorageItemProperties2* This,
        enum __x_ABI_CWindows_CStorage_CFileProperties_CThumbnailMode mode,
        UINT32 requestedSize,
        enum __x_ABI_CWindows_CStorage_CFileProperties_CThumbnailOptions options,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CFileProperties__CStorageItemThumbnail** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageItemProperties2Vtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageItemProperties2
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageItemProperties2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageItemProperties2;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageItemProperties2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageItemPropertiesWithProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageItemPropertiesWithProvider_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageItemPropertiesWithProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageItemPropertiesWithProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageItemPropertiesWithProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageItemPropertiesWithProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageItemPropertiesWithProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageItemPropertiesWithProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageItemPropertiesWithProvider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Provider)(__x_ABI_CWindows_CStorage_CIStorageItemPropertiesWithProvider* This,
        __x_ABI_CWindows_CStorage_CIStorageProvider** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageItemPropertiesWithProviderVtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageItemPropertiesWithProvider
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageItemPropertiesWithProviderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageItemPropertiesWithProvider;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageItemPropertiesWithProvider_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageLibrary_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageLibrary_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageLibraryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageLibrary* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageLibrary* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageLibrary* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageLibrary* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageLibrary* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageLibrary* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestAddFolderAsync)(__x_ABI_CWindows_CStorage_CIStorageLibrary* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageFolder** operation);
    HRESULT (STDMETHODCALLTYPE* RequestRemoveFolderAsync)(__x_ABI_CWindows_CStorage_CIStorageLibrary* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder* folder,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* get_Folders)(__x_ABI_CWindows_CStorage_CIStorageLibrary* This,
        __x_ABI_C__FIObservableVector_1___x_ABI_CWindows__CStorage__CStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* get_SaveFolder)(__x_ABI_CWindows_CStorage_CIStorageLibrary* This,
        __x_ABI_CWindows_CStorage_CIStorageFolder** value);
    HRESULT (STDMETHODCALLTYPE* add_DefinitionChanged)(__x_ABI_CWindows_CStorage_CIStorageLibrary* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CStorage__CStorageLibrary_IInspectable* handler,
        EventRegistrationToken* eventCookie);
    HRESULT (STDMETHODCALLTYPE* remove_DefinitionChanged)(__x_ABI_CWindows_CStorage_CIStorageLibrary* This,
        EventRegistrationToken eventCookie);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageLibraryVtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageLibrary
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageLibraryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageLibrary;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageLibrary_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageLibrary2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageLibrary2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageLibrary2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageLibrary2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageLibrary2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageLibrary2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageLibrary2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageLibrary2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageLibrary2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ChangeTracker)(__x_ABI_CWindows_CStorage_CIStorageLibrary2* This,
        __x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageLibrary2Vtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageLibrary2
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageLibrary2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageLibrary2;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageLibrary2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageLibrary3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageLibrary3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageLibrary3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageLibrary3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageLibrary3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageLibrary3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageLibrary3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageLibrary3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageLibrary3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* AreFolderSuggestionsAvailableAsync)(__x_ABI_CWindows_CStorage_CIStorageLibrary3* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageLibrary3Vtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageLibrary3
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageLibrary3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageLibrary3;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageLibrary3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageLibraryChange_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageLibraryChange_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageLibraryChangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageLibraryChange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageLibraryChange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageLibraryChange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageLibraryChange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageLibraryChange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageLibraryChange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ChangeType)(__x_ABI_CWindows_CStorage_CIStorageLibraryChange* This,
        enum __x_ABI_CWindows_CStorage_CStorageLibraryChangeType* value);
    HRESULT (STDMETHODCALLTYPE* get_Path)(__x_ABI_CWindows_CStorage_CIStorageLibraryChange* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PreviousPath)(__x_ABI_CWindows_CStorage_CIStorageLibraryChange* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* IsOfType)(__x_ABI_CWindows_CStorage_CIStorageLibraryChange* This,
        enum __x_ABI_CWindows_CStorage_CStorageItemTypes type,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* GetStorageItemAsync)(__x_ABI_CWindows_CStorage_CIStorageLibraryChange* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CIStorageItem** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageLibraryChangeVtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageLibraryChange
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageLibraryChangeVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageLibraryChange;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageLibraryChange_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageLibraryChangeReader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageLibraryChangeReader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageLibraryChangeReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageLibraryChangeReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageLibraryChangeReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageLibraryChangeReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageLibraryChangeReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageLibraryChangeReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageLibraryChangeReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ReadBatchAsync)(__x_ABI_CWindows_CStorage_CIStorageLibraryChangeReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CStorage__CStorageLibraryChange** operation);
    HRESULT (STDMETHODCALLTYPE* AcceptChangesAsync)(__x_ABI_CWindows_CStorage_CIStorageLibraryChangeReader* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageLibraryChangeReaderVtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageLibraryChangeReader
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageLibraryChangeReaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageLibraryChangeReader;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageLibraryChangeReader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageLibraryChangeTrackerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetChangeReader)(__x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker* This,
        __x_ABI_CWindows_CStorage_CIStorageLibraryChangeReader** value);
    HRESULT (STDMETHODCALLTYPE* Enable)(__x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker* This);
    HRESULT (STDMETHODCALLTYPE* Reset)(__x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker* This);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageLibraryChangeTrackerVtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageLibraryChangeTrackerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageLibraryChangeTracker_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageLibraryStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageLibraryStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageLibraryStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageLibraryStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageLibraryStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageLibraryStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageLibraryStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageLibraryStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageLibraryStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetLibraryAsync)(__x_ABI_CWindows_CStorage_CIStorageLibraryStatics* This,
        enum __x_ABI_CWindows_CStorage_CKnownLibraryId libraryId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibrary** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageLibraryStaticsVtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageLibraryStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageLibraryStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageLibraryStatics;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageLibraryStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageLibraryStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageLibraryStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageLibraryStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageLibraryStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageLibraryStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageLibraryStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageLibraryStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageLibraryStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageLibraryStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetLibraryForUserAsync)(__x_ABI_CWindows_CStorage_CIStorageLibraryStatics2* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        enum __x_ABI_CWindows_CStorage_CKnownLibraryId libraryId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStorageLibrary** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageLibraryStatics2Vtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageLibraryStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageLibraryStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageLibraryStatics2;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageLibraryStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageProvider_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageProvider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CStorage_CIStorageProvider* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CStorage_CIStorageProvider* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageProviderVtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageProvider
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageProviderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageProvider;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageProvider_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageProvider2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageProvider2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageProvider2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageProvider2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageProvider2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageProvider2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageProvider2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageProvider2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageProvider2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* IsPropertySupportedForPartialFileAsync)(__x_ABI_CWindows_CStorage_CIStorageProvider2* This,
        HSTRING propertyCanonicalName,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageProvider2Vtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageProvider2
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageProvider2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageProvider2;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageProvider2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStorageStreamTransaction_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStorageStreamTransaction_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStorageStreamTransactionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStorageStreamTransaction* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStorageStreamTransaction* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStorageStreamTransaction* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStorageStreamTransaction* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStorageStreamTransaction* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStorageStreamTransaction* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Stream)(__x_ABI_CWindows_CStorage_CIStorageStreamTransaction* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream** value);
    HRESULT (STDMETHODCALLTYPE* CommitAsync)(__x_ABI_CWindows_CStorage_CIStorageStreamTransaction* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStorageStreamTransactionVtbl;

    interface __x_ABI_CWindows_CStorage_CIStorageStreamTransaction
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStorageStreamTransactionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStorageStreamTransaction;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStorageStreamTransaction_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIStreamedFileDataRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIStreamedFileDataRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIStreamedFileDataRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIStreamedFileDataRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIStreamedFileDataRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIStreamedFileDataRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIStreamedFileDataRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIStreamedFileDataRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIStreamedFileDataRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FailAndClose)(__x_ABI_CWindows_CStorage_CIStreamedFileDataRequest* This,
        enum __x_ABI_CWindows_CStorage_CStreamedFileFailureMode failureMode);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIStreamedFileDataRequestVtbl;

    interface __x_ABI_CWindows_CStorage_CIStreamedFileDataRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIStreamedFileDataRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIStreamedFileDataRequest;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIStreamedFileDataRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CISystemAudioProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CISystemAudioProperties_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CISystemAudioPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CISystemAudioProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CISystemAudioProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CISystemAudioProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CISystemAudioProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CISystemAudioProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CISystemAudioProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_EncodingBitrate)(__x_ABI_CWindows_CStorage_CISystemAudioProperties* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CISystemAudioPropertiesVtbl;

    interface __x_ABI_CWindows_CStorage_CISystemAudioProperties
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CISystemAudioPropertiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CISystemAudioProperties;
#endif /* !defined(____x_ABI_CWindows_CStorage_CISystemAudioProperties_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CISystemDataPaths_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CISystemDataPaths_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CISystemDataPathsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Fonts)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ProgramData)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Public)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PublicDesktop)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PublicDocuments)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PublicDownloads)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PublicMusic)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PublicPictures)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PublicVideos)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_System)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SystemHost)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SystemX86)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SystemX64)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SystemArm)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_UserProfiles)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Windows)(__x_ABI_CWindows_CStorage_CISystemDataPaths* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CISystemDataPathsVtbl;

    interface __x_ABI_CWindows_CStorage_CISystemDataPaths
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CISystemDataPathsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CISystemDataPaths;
#endif /* !defined(____x_ABI_CWindows_CStorage_CISystemDataPaths_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CISystemDataPathsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CISystemDataPathsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CISystemDataPathsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CISystemDataPathsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CISystemDataPathsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CISystemDataPathsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CISystemDataPathsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CISystemDataPathsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CISystemDataPathsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefault)(__x_ABI_CWindows_CStorage_CISystemDataPathsStatics* This,
        __x_ABI_CWindows_CStorage_CISystemDataPaths** result);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CISystemDataPathsStaticsVtbl;

    interface __x_ABI_CWindows_CStorage_CISystemDataPathsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CISystemDataPathsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CISystemDataPathsStatics;
#endif /* !defined(____x_ABI_CWindows_CStorage_CISystemDataPathsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CISystemGPSProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CISystemGPSProperties_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CISystemGPSPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CISystemGPSProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CISystemGPSProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CISystemGPSProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CISystemGPSProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CISystemGPSProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CISystemGPSProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LatitudeDecimal)(__x_ABI_CWindows_CStorage_CISystemGPSProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_LongitudeDecimal)(__x_ABI_CWindows_CStorage_CISystemGPSProperties* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CISystemGPSPropertiesVtbl;

    interface __x_ABI_CWindows_CStorage_CISystemGPSProperties
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CISystemGPSPropertiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CISystemGPSProperties;
#endif /* !defined(____x_ABI_CWindows_CStorage_CISystemGPSProperties_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CISystemImageProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CISystemImageProperties_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CISystemImagePropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CISystemImageProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CISystemImageProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CISystemImageProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CISystemImageProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CISystemImageProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CISystemImageProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HorizontalSize)(__x_ABI_CWindows_CStorage_CISystemImageProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_VerticalSize)(__x_ABI_CWindows_CStorage_CISystemImageProperties* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CISystemImagePropertiesVtbl;

    interface __x_ABI_CWindows_CStorage_CISystemImageProperties
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CISystemImagePropertiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CISystemImageProperties;
#endif /* !defined(____x_ABI_CWindows_CStorage_CISystemImageProperties_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CISystemMediaProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CISystemMediaProperties_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CISystemMediaPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CISystemMediaProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CISystemMediaProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CISystemMediaProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CISystemMediaProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CISystemMediaProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CISystemMediaProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Duration)(__x_ABI_CWindows_CStorage_CISystemMediaProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Producer)(__x_ABI_CWindows_CStorage_CISystemMediaProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Publisher)(__x_ABI_CWindows_CStorage_CISystemMediaProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SubTitle)(__x_ABI_CWindows_CStorage_CISystemMediaProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Writer)(__x_ABI_CWindows_CStorage_CISystemMediaProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Year)(__x_ABI_CWindows_CStorage_CISystemMediaProperties* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CISystemMediaPropertiesVtbl;

    interface __x_ABI_CWindows_CStorage_CISystemMediaProperties
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CISystemMediaPropertiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CISystemMediaProperties;
#endif /* !defined(____x_ABI_CWindows_CStorage_CISystemMediaProperties_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CISystemMusicProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CISystemMusicProperties_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CISystemMusicPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CISystemMusicProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CISystemMusicProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CISystemMusicProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CISystemMusicProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CISystemMusicProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CISystemMusicProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AlbumArtist)(__x_ABI_CWindows_CStorage_CISystemMusicProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_AlbumTitle)(__x_ABI_CWindows_CStorage_CISystemMusicProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Artist)(__x_ABI_CWindows_CStorage_CISystemMusicProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Composer)(__x_ABI_CWindows_CStorage_CISystemMusicProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Conductor)(__x_ABI_CWindows_CStorage_CISystemMusicProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayArtist)(__x_ABI_CWindows_CStorage_CISystemMusicProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Genre)(__x_ABI_CWindows_CStorage_CISystemMusicProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_TrackNumber)(__x_ABI_CWindows_CStorage_CISystemMusicProperties* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CISystemMusicPropertiesVtbl;

    interface __x_ABI_CWindows_CStorage_CISystemMusicProperties
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CISystemMusicPropertiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CISystemMusicProperties;
#endif /* !defined(____x_ABI_CWindows_CStorage_CISystemMusicProperties_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CISystemPhotoProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CISystemPhotoProperties_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CISystemPhotoPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CISystemPhotoProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CISystemPhotoProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CISystemPhotoProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CISystemPhotoProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CISystemPhotoProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CISystemPhotoProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CameraManufacturer)(__x_ABI_CWindows_CStorage_CISystemPhotoProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_CameraModel)(__x_ABI_CWindows_CStorage_CISystemPhotoProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DateTaken)(__x_ABI_CWindows_CStorage_CISystemPhotoProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(__x_ABI_CWindows_CStorage_CISystemPhotoProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PeopleNames)(__x_ABI_CWindows_CStorage_CISystemPhotoProperties* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CISystemPhotoPropertiesVtbl;

    interface __x_ABI_CWindows_CStorage_CISystemPhotoProperties
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CISystemPhotoPropertiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CISystemPhotoProperties;
#endif /* !defined(____x_ABI_CWindows_CStorage_CISystemPhotoProperties_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CISystemProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CISystemProperties_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CISystemPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CISystemProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CISystemProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CISystemProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CISystemProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CISystemProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CISystemProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Author)(__x_ABI_CWindows_CStorage_CISystemProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Comment)(__x_ABI_CWindows_CStorage_CISystemProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ItemNameDisplay)(__x_ABI_CWindows_CStorage_CISystemProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Keywords)(__x_ABI_CWindows_CStorage_CISystemProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Rating)(__x_ABI_CWindows_CStorage_CISystemProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Title)(__x_ABI_CWindows_CStorage_CISystemProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Audio)(__x_ABI_CWindows_CStorage_CISystemProperties* This,
        __x_ABI_CWindows_CStorage_CISystemAudioProperties** value);
    HRESULT (STDMETHODCALLTYPE* get_GPS)(__x_ABI_CWindows_CStorage_CISystemProperties* This,
        __x_ABI_CWindows_CStorage_CISystemGPSProperties** value);
    HRESULT (STDMETHODCALLTYPE* get_Media)(__x_ABI_CWindows_CStorage_CISystemProperties* This,
        __x_ABI_CWindows_CStorage_CISystemMediaProperties** value);
    HRESULT (STDMETHODCALLTYPE* get_Music)(__x_ABI_CWindows_CStorage_CISystemProperties* This,
        __x_ABI_CWindows_CStorage_CISystemMusicProperties** value);
    HRESULT (STDMETHODCALLTYPE* get_Photo)(__x_ABI_CWindows_CStorage_CISystemProperties* This,
        __x_ABI_CWindows_CStorage_CISystemPhotoProperties** value);
    HRESULT (STDMETHODCALLTYPE* get_Video)(__x_ABI_CWindows_CStorage_CISystemProperties* This,
        __x_ABI_CWindows_CStorage_CISystemVideoProperties** value);
    HRESULT (STDMETHODCALLTYPE* get_Image)(__x_ABI_CWindows_CStorage_CISystemProperties* This,
        __x_ABI_CWindows_CStorage_CISystemImageProperties** value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CISystemPropertiesVtbl;

    interface __x_ABI_CWindows_CStorage_CISystemProperties
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CISystemPropertiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CISystemProperties;
#endif /* !defined(____x_ABI_CWindows_CStorage_CISystemProperties_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CISystemVideoProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CISystemVideoProperties_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CISystemVideoPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CISystemVideoProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CISystemVideoProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CISystemVideoProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CISystemVideoProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CISystemVideoProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CISystemVideoProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Director)(__x_ABI_CWindows_CStorage_CISystemVideoProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_FrameHeight)(__x_ABI_CWindows_CStorage_CISystemVideoProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_FrameWidth)(__x_ABI_CWindows_CStorage_CISystemVideoProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Orientation)(__x_ABI_CWindows_CStorage_CISystemVideoProperties* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_TotalBitrate)(__x_ABI_CWindows_CStorage_CISystemVideoProperties* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CISystemVideoPropertiesVtbl;

    interface __x_ABI_CWindows_CStorage_CISystemVideoProperties
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CISystemVideoPropertiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CISystemVideoProperties;
#endif /* !defined(____x_ABI_CWindows_CStorage_CISystemVideoProperties_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIUserDataPaths_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIUserDataPaths_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIUserDataPathsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CameraRoll)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Cookies)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Desktop)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Documents)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Downloads)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Favorites)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_History)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_InternetCache)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_LocalAppData)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_LocalAppDataLow)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Music)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Pictures)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Profile)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Recent)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_RoamingAppData)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SavedPictures)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Screenshots)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Templates)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Videos)(__x_ABI_CWindows_CStorage_CIUserDataPaths* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIUserDataPathsVtbl;

    interface __x_ABI_CWindows_CStorage_CIUserDataPaths
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIUserDataPathsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIUserDataPaths;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIUserDataPaths_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CStorage_CIUserDataPathsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CStorage_CIUserDataPathsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CStorage_CIUserDataPathsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CStorage_CIUserDataPathsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CStorage_CIUserDataPathsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CStorage_CIUserDataPathsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CStorage_CIUserDataPathsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CStorage_CIUserDataPathsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CStorage_CIUserDataPathsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForUser)(__x_ABI_CWindows_CStorage_CIUserDataPathsStatics* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CStorage_CIUserDataPaths** result);
    HRESULT (STDMETHODCALLTYPE* GetDefault)(__x_ABI_CWindows_CStorage_CIUserDataPathsStatics* This,
        __x_ABI_CWindows_CStorage_CIUserDataPaths** result);

        END_INTERFACE
    } __x_ABI_CWindows_CStorage_CIUserDataPathsStaticsVtbl;

    interface __x_ABI_CWindows_CStorage_CIUserDataPathsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CStorage_CIUserDataPathsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CStorage_CIUserDataPathsStatics;
#endif /* !defined(____x_ABI_CWindows_CStorage_CIUserDataPathsStatics_INTERFACE_DEFINED__) */
    
