// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Microsoft.Graphics.Canvas.h"
#include "Windows.Foundation.Numerics.h"
#include "Windows.Graphics.DirectX.h"
#include "Windows.Graphics.Effects.h"
#include "Windows.UI.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource;

#endif // ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING_IInspectable __x_ABI_C__FIMapView_2_HSTRING_IInspectable;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING_IInspectable __x_ABI_C__FIMapView_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        HSTRING key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** first,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIMap_2_HSTRING_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMap_2_HSTRING_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMap_2_HSTRING_IInspectable __x_ABI_C__FIMap_2_HSTRING_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMap_2_HSTRING_IInspectable;

    typedef struct __x_ABI_C__FIMap_2_HSTRING_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
        HSTRING key,
        IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
        __x_ABI_C__FIMapView_2_HSTRING_IInspectable** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
        HSTRING key,
        IInspectable* value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This,
        HSTRING key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIMap_2_HSTRING_IInspectable* This);

        END_INTERFACE
    } __x_ABI_C__FIMap_2_HSTRING_IInspectableVtbl;

    interface __x_ABI_C__FIMap_2_HSTRING_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FIMap_2_HSTRING_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMap_2_HSTRING_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32 index,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSourceVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasBufferPrecision __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasBufferPrecision;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CCanvasBufferPrecision_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CCanvasBufferPrecision_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CCanvasBufferPrecision __x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CCanvasBufferPrecision;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CCanvasBufferPrecision;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CCanvasBufferPrecisionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CCanvasBufferPrecision* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CCanvasBufferPrecision* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CCanvasBufferPrecision* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CCanvasBufferPrecision* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CCanvasBufferPrecision* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CCanvasBufferPrecision* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CCanvasBufferPrecision* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasBufferPrecision* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CCanvasBufferPrecisionVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CCanvasBufferPrecision
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CCanvasBufferPrecisionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CCanvasBufferPrecision_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementSimpleProfile __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementSimpleProfile;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile __x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementSimpleProfile* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfileVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfileVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasColorSpace __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasColorSpace;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasComposite __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasComposite;

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice_FWD_DEFINED__

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasEdgeBehavior __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasEdgeBehavior;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation;

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasImage_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasImage_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasImage __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasImage;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasImage_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi;

#endif // ____x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 __x_ABI_CWindows_CFoundation_CNumerics_CVector2;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 __x_ABI_CWindows_CFoundation_CNumerics_CVector3;

typedef struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 __x_ABI_CWindows_CFoundation_CNumerics_CVector4;

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

typedef enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat;

#ifndef ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect;

#endif // ____x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementEffectQuality __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementEffectQuality;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementGamma __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementGamma;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementProfileType __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementProfileType;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementRenderingIntent __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementRenderingIntent;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEdgeDetectionEffectMode __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEdgeDetectionEffectMode;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectChannelSelect __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectChannelSelect;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectHueColorSpace __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectHueColorSpace;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectOptimization __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectOptimization;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CExtendedColorSpace __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CExtendedColorSpace;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMorphologyEffectMode __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMorphologyEffectMode;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping;

typedef enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CTurbulenceEffectNoise __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CTurbulenceEffectNoise;

typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMatrix5x4 __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMatrix5x4;

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_Multiply = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_Screen = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_Darken = 2,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_Lighten = 3,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_Dissolve = 4,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_ColorBurn = 5,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_LinearBurn = 6,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_DarkerColor = 7,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_LighterColor = 8,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_ColorDodge = 9,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_LinearDodge = 10,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_Overlay = 11,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_SoftLight = 12,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_HardLight = 13,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_VividLight = 14,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_LinearLight = 15,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_PinLight = 16,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_HardMix = 17,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_Difference = 18,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_Exclusion = 19,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_Hue = 20,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_Saturation = 21,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_Color = 22,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_Luminosity = 23,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_Subtract = 24,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode_Division = 25,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementEffectQuality
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementEffectQuality_Proof = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementEffectQuality_Normal = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementEffectQuality_Best = 2,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementGamma
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementGamma_G22 = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementGamma_G10 = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementGamma_G2084 = 2,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementProfileType
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementProfileType_Icc = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementProfileType_Simple = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementProfileType_Extended = 2,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementRenderingIntent
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementRenderingIntent_Perceptual = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementRenderingIntent_RelativeColorimetric = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementRenderingIntent_Saturation = 2,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementRenderingIntent_AbsoluteColorimetric = 3,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEdgeDetectionEffectMode
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEdgeDetectionEffectMode_Sobel = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEdgeDetectionEffectMode_Prewitt = 1,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode_Soft = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode_Hard = 1,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectChannelSelect
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectChannelSelect_Red = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectChannelSelect_Green = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectChannelSelect_Blue = 2,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectChannelSelect_Alpha = 3,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectHueColorSpace
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectHueColorSpace_Hsv = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectHueColorSpace_Hsl = 1,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectOptimization
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectOptimization_Speed = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectOptimization_Balanced = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectOptimization_Quality = 2,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CExtendedColorSpace
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CExtendedColorSpace_FullG22P709 = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CExtendedColorSpace_FullG10P709 = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CExtendedColorSpace_StudioG22P709 = 2,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CExtendedColorSpace_StudioG22P2020 = 3,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CExtendedColorSpace_FullG2084P2020 = 12,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CExtendedColorSpace_StudioG2084P2020 = 14,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CExtendedColorSpace_FullG22P2020 = 17,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CExtendedColorSpace_Custom = -1,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMorphologyEffectMode
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMorphologyEffectMode_Erode = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMorphologyEffectMode_Dilate = 1,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping_Unknown = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping_OneToOne = 1,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping_Offset = 2,
};

enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CTurbulenceEffectNoise
    {
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CTurbulenceEffectNoise_FractalSum = 0,
    __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CTurbulenceEffectNoise_Turbulence = 1,
};

struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementSimpleProfile
    {
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 RedPrimary;
    struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 GreenPrimary;
    struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 BluePrimary;
    struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 WhitePointXZ;
    enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementGamma Gamma;
};

struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMatrix5x4
    {
        FLOAT M11;
    FLOAT M12;
    FLOAT M13;
    FLOAT M14;
    FLOAT M21;
    FLOAT M22;
    FLOAT M23;
    FLOAT M24;
    FLOAT M31;
    FLOAT M32;
    FLOAT M33;
    FLOAT M34;
    FLOAT M41;
    FLOAT M42;
    FLOAT M43;
    FLOAT M44;
    FLOAT M51;
    FLOAT M52;
    FLOAT M53;
    FLOAT M54;
};

#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* get_AlphaMask)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_AlphaMask)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsSupported)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStaticsVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAlphaMaskEffectStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_MultiplyAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_MultiplyAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source1Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Source1Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source2Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Source2Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source1)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source1)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* get_Source2)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source2)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIArithmeticCompositeEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* get_PaddingRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* put_PaddingRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIAtlasEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Mode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode* value);
    HRESULT (STDMETHODCALLTYPE* put_Mode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CBlendEffectMode value);
    HRESULT (STDMETHODCALLTYPE* get_Background)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Background)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* get_Foreground)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Foreground)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBlendEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ExtendX)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasEdgeBehavior* value);
    HRESULT (STDMETHODCALLTYPE* put_ExtendX)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasEdgeBehavior value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendY)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasEdgeBehavior* value);
    HRESULT (STDMETHODCALLTYPE* put_ExtendY)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasEdgeBehavior value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBorderEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_WhitePoint)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_WhitePoint)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_BlackPoint)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_BlackPoint)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIBrightnessEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CacheOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_CacheOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_BufferPrecision)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
        __x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CCanvasBufferPrecision** value);
    HRESULT (STDMETHODCALLTYPE* put_BufferPrecision)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
        __x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CCanvasBufferPrecision* value);
    HRESULT (STDMETHODCALLTYPE* InvalidateSourceRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi* resourceCreator,
        UINT32 sourceIndex,
        struct __x_ABI_CWindows_CFoundation_CRect invalidRectangle);
    HRESULT (STDMETHODCALLTYPE* GetInvalidRectangles)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi* resourceCreator,
        UINT32* valueElementsLength,
        struct __x_ABI_CWindows_CFoundation_CRect** valueElements);
    HRESULT (STDMETHODCALLTYPE* GetRequiredSourceRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi* resourceCreator,
        struct __x_ABI_CWindows_CFoundation_CRect outputRectangle,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* sourceEffect,
        UINT32 sourceIndex,
        struct __x_ABI_CWindows_CFoundation_CRect sourceBounds,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* GetRequiredSourceRectangles)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi* resourceCreator,
        struct __x_ABI_CWindows_CFoundation_CRect outputRectangle,
        UINT32 sourceEffectsLength,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect** sourceEffects,
        UINT32 sourceIndicesLength,
        UINT32* sourceIndices,
        UINT32 sourceBoundsLength,
        struct __x_ABI_CWindows_CFoundation_CRect* sourceBounds,
        UINT32* valueElementsLength,
        struct __x_ABI_CWindows_CFoundation_CRect** valueElements);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICanvasEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_Tolerance)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Tolerance)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_InvertAlpha)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_InvertAlpha)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Feather)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Feather)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_ColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIChromaKeyEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceColorProfile)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile** value);
    HRESULT (STDMETHODCALLTYPE* put_SourceColorProfile)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* value);
    HRESULT (STDMETHODCALLTYPE* get_SourceRenderingIntent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementRenderingIntent* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceRenderingIntent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementRenderingIntent value);
    HRESULT (STDMETHODCALLTYPE* get_OutputColorProfile)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile** value);
    HRESULT (STDMETHODCALLTYPE* put_OutputColorProfile)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* value);
    HRESULT (STDMETHODCALLTYPE* get_OutputRenderingIntent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementRenderingIntent* value);
    HRESULT (STDMETHODCALLTYPE* put_OutputRenderingIntent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementRenderingIntent value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode value);
    HRESULT (STDMETHODCALLTYPE* get_Quality)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementEffectQuality* value);
    HRESULT (STDMETHODCALLTYPE* put_Quality)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementEffectQuality value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* IsBestQualitySupported)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice* device,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStaticsVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementEffectStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ColorSpace)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasColorSpace* value);
    HRESULT (STDMETHODCALLTYPE* get_IccProfile)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This,
        UINT32* valueElementsLength,
        BYTE** valueElements);
    HRESULT (STDMETHODCALLTYPE* get_Type)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementProfileType* value);
    HRESULT (STDMETHODCALLTYPE* get_SimpleProfile)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This,
        __x_ABI_C__FIReference_1___x_ABI_CMicrosoft__CGraphics__CCanvas__CEffects__CColorManagementSimpleProfile** value);
    HRESULT (STDMETHODCALLTYPE* get_ExtendedColorSpace)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CExtendedColorSpace* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasColorSpace colorSpace,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactoryVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateCustom)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics* This,
        UINT32 iccProfileLength,
        BYTE* iccProfile,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile** result);
    HRESULT (STDMETHODCALLTYPE* CreateSimple)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementSimpleProfile simpleProfile,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile** result);
    HRESULT (STDMETHODCALLTYPE* CreateExtended)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CExtendedColorSpace colorSpace,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfile** result);
    HRESULT (STDMETHODCALLTYPE* IsSupported)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CColorManagementProfileType type,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice* device,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStaticsVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorManagementProfileStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ColorMatrix)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMatrix5x4* value);
    HRESULT (STDMETHODCALLTYPE* put_ColorMatrix)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
        struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMatrix5x4 value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode value);
    HRESULT (STDMETHODCALLTYPE* get_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorMatrixEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_ColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_ColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIColorSourceEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Mode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasComposite* value);
    HRESULT (STDMETHODCALLTYPE* put_Mode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasComposite value);
    HRESULT (STDMETHODCALLTYPE* get_Sources)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CGraphics__CEffects__CIGraphicsEffectSource** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICompositeEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Contrast)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Contrast)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_ClampSource)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ClampSource)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIContrastEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KernelScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_KernelScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_KernelWidth)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_KernelWidth)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_KernelHeight)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_KernelHeight)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_KernelMatrix)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        UINT32* valueElementsLength,
        FLOAT** valueElements);
    HRESULT (STDMETHODCALLTYPE* put_KernelMatrix)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        UINT32 valueElementsLength,
        FLOAT* valueElements);
    HRESULT (STDMETHODCALLTYPE* get_Divisor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Divisor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_KernelOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_KernelOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_PreserveAlpha)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_PreserveAlpha)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* get_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIConvolveMatrixEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* get_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICropEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CrossFade)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_CrossFade)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source2)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source2)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* get_Source1)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source1)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsSupported)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStaticsVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CICrossFadeEffectStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BlurAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlurAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Angle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Angle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Optimization)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectOptimization* value);
    HRESULT (STDMETHODCALLTYPE* put_Optimization)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectOptimization value);
    HRESULT (STDMETHODCALLTYPE* get_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDirectionalBlurEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RedTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        UINT32* valueElementsLength,
        FLOAT** valueElements);
    HRESULT (STDMETHODCALLTYPE* put_RedTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        UINT32 valueElementsLength,
        FLOAT* valueElements);
    HRESULT (STDMETHODCALLTYPE* get_RedDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_RedDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_GreenTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        UINT32* valueElementsLength,
        FLOAT** valueElements);
    HRESULT (STDMETHODCALLTYPE* put_GreenTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        UINT32 valueElementsLength,
        FLOAT* valueElements);
    HRESULT (STDMETHODCALLTYPE* get_GreenDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_GreenDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_BlueTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        UINT32* valueElementsLength,
        FLOAT** valueElements);
    HRESULT (STDMETHODCALLTYPE* put_BlueTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        UINT32 valueElementsLength,
        FLOAT* valueElements);
    HRESULT (STDMETHODCALLTYPE* get_BlueDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_BlueDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        UINT32* valueElementsLength,
        FLOAT** valueElements);
    HRESULT (STDMETHODCALLTYPE* put_AlphaTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        UINT32 valueElementsLength,
        FLOAT* valueElements);
    HRESULT (STDMETHODCALLTYPE* get_AlphaDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDiscreteTransferEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_XChannelSelect)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectChannelSelect* value);
    HRESULT (STDMETHODCALLTYPE* put_XChannelSelect)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectChannelSelect value);
    HRESULT (STDMETHODCALLTYPE* get_YChannelSelect)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectChannelSelect* value);
    HRESULT (STDMETHODCALLTYPE* put_YChannelSelect)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectChannelSelect value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* get_Displacement)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Displacement)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDisplacementMapEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Azimuth)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Azimuth)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Elevation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Elevation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_DiffuseAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_DiffuseAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantDiffuseEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Azimuth)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Azimuth)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Elevation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Elevation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_SpecularExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_SpecularExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_SpecularAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_SpecularAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDistantSpecularEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* get_SourceDpi)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceDpi)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIDpiCompensationEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_BlurAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlurAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Mode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEdgeDetectionEffectMode* value);
    HRESULT (STDMETHODCALLTYPE* put_Mode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEdgeDetectionEffectMode value);
    HRESULT (STDMETHODCALLTYPE* get_OverlayEdges)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_OverlayEdges)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEdgeDetectionEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Device)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateFromColors)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator* resourceCreator,
        UINT32 colorsLength,
        struct __x_ABI_CWindows_CUI_CColor* colors,
        INT32 sizeB,
        INT32 sizeG,
        INT32 sizeR,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D** result);
    HRESULT (STDMETHODCALLTYPE* CreateFromBytes)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator* resourceCreator,
        UINT32 bytesLength,
        BYTE* bytes,
        INT32 sizeB,
        INT32 sizeG,
        INT32 sizeR,
        enum __x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat format,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStaticsVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3DStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Angle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Angle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEmbossEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Exposure)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Exposure)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIExposureEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RedAmplitude)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RedAmplitude)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RedExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RedExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RedOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RedOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RedDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_RedDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_GreenAmplitude)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_GreenAmplitude)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_GreenExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_GreenExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_GreenOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_GreenOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_GreenDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_GreenDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_BlueAmplitude)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlueAmplitude)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_BlueExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlueExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_BlueOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlueOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_BlueDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_BlueDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaAmplitude)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaAmplitude)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGammaTransferEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BlurAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlurAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Optimization)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectOptimization* value);
    HRESULT (STDMETHODCALLTYPE* put_Optimization)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectOptimization value);
    HRESULT (STDMETHODCALLTYPE* get_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGaussianBlurEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIGrayscaleEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Highlights)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Highlights)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Shadows)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Shadows)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Clarity)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Clarity)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_MaskBlurAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_MaskBlurAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_SourceIsLinearGamma)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceIsLinearGamma)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHighlightsAndShadowsEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Angle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Angle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueRotationEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceColorSpace)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectHueColorSpace* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceColorSpace)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectHueColorSpace value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIHueToRgbEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIInvertEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RedOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RedOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RedSlope)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_RedSlope)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_RedDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_RedDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_GreenOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_GreenOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_GreenSlope)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_GreenSlope)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_GreenDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_GreenDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_BlueOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlueOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_BlueSlope)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlueSlope)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_BlueDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_BlueDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaSlope)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaSlope)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILinearTransferEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CILuminanceToAlphaEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Mode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMorphologyEffectMode* value);
    HRESULT (STDMETHODCALLTYPE* put_Mode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CMorphologyEffectMode value);
    HRESULT (STDMETHODCALLTYPE* get_Width)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Width)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Height)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Height)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIMorphologyEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Opacity)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Opacity)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsSupported)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStaticsVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityEffectStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OpaqueRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* put_OpaqueRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIOpacityMetadataEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_C__FIMap_2_HSTRING_IInspectable** value);
    HRESULT (STDMETHODCALLTYPE* get_Source1)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* get_Source2)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* get_Source3)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* get_Source4)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* get_Source5)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* get_Source6)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* get_Source7)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* get_Source8)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source1)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* put_Source2)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* put_Source3)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* put_Source4)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* put_Source5)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* put_Source6)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* put_Source7)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* put_Source8)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);
    HRESULT (STDMETHODCALLTYPE* get_Source1Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping* value);
    HRESULT (STDMETHODCALLTYPE* get_Source2Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping* value);
    HRESULT (STDMETHODCALLTYPE* get_Source3Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping* value);
    HRESULT (STDMETHODCALLTYPE* get_Source4Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping* value);
    HRESULT (STDMETHODCALLTYPE* get_Source5Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping* value);
    HRESULT (STDMETHODCALLTYPE* get_Source6Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping* value);
    HRESULT (STDMETHODCALLTYPE* get_Source7Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping* value);
    HRESULT (STDMETHODCALLTYPE* get_Source8Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping* value);
    HRESULT (STDMETHODCALLTYPE* put_Source1Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping value);
    HRESULT (STDMETHODCALLTYPE* put_Source2Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping value);
    HRESULT (STDMETHODCALLTYPE* put_Source3Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping value);
    HRESULT (STDMETHODCALLTYPE* put_Source4Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping value);
    HRESULT (STDMETHODCALLTYPE* put_Source5Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping value);
    HRESULT (STDMETHODCALLTYPE* put_Source6Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping value);
    HRESULT (STDMETHODCALLTYPE* put_Source7Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping value);
    HRESULT (STDMETHODCALLTYPE* put_Source8Mapping)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CSamplerCoordinateMapping value);
    HRESULT (STDMETHODCALLTYPE* get_Source1BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* get_Source2BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* get_Source3BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* get_Source4BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* get_Source5BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* get_Source6BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* get_Source7BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* get_Source8BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_Source1BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* put_Source2BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* put_Source3BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* put_Source4BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* put_Source5BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* put_Source6BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* put_Source7BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* put_Source8BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* get_MaxSamplerOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_MaxSamplerOffset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Source1Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* get_Source2Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* get_Source3Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* get_Source4Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* get_Source5Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* get_Source6Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* get_Source7Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* get_Source8Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_Source1Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* put_Source2Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* put_Source3Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* put_Source4Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* put_Source5Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* put_Source6Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* put_Source7Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* put_Source8Interpolation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* IsSupported)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasDevice* device,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory* This,
        UINT32 shaderCodeLength,
        BYTE* shaderCode,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffect** effect);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactoryVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPixelShaderEffectFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LightPosition)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_LightPosition)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_DiffuseAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_DiffuseAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointDiffuseEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LightPosition)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_LightPosition)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_SpecularExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_SpecularExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_SpecularAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_SpecularAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPointSpecularEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RedValueCount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_RedValueCount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_GreenValueCount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_GreenValueCount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_BlueValueCount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_BlueValueCount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPosterizeEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIPremultiplyEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_OutputColorSpace)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectHueColorSpace* value);
    HRESULT (STDMETHODCALLTYPE* put_OutputColorSpace)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectHueColorSpace value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIRgbToHueEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Saturation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Saturation)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISaturationEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Scale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Scale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_CenterPoint)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_CenterPoint)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* get_Sharpness)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Sharpness)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIScaleEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Intensity)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Intensity)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISepiaEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_BlurAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_BlurAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_ShadowColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_ShadowColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_Optimization)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectOptimization* value);
    HRESULT (STDMETHODCALLTYPE* put_Optimization)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectOptimization value);
    HRESULT (STDMETHODCALLTYPE* get_ShadowColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_ShadowColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIShadowEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Threshold)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Threshold)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISharpenEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LightPosition)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_LightPosition)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_LightTarget)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_LightTarget)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_Focus)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Focus)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LimitingConeAngle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_LimitingConeAngle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_DiffuseAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_DiffuseAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotDiffuseEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LightPosition)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_LightPosition)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_LightTarget)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3* value);
    HRESULT (STDMETHODCALLTYPE* put_LightTarget)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 value);
    HRESULT (STDMETHODCALLTYPE* get_Focus)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Focus)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LimitingConeAngle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_LimitingConeAngle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_SpecularExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_SpecularExponent)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_SpecularAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_SpecularAmount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapScale)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColor)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapKernelSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_HeightMapInterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_LightColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CISpotSpecularEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Angle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Angle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_MaintainSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_MaintainSize)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIStraightenEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Table)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D** value);
    HRESULT (STDMETHODCALLTYPE* put_Table)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This,
        __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIEffectTransferTable3D* value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasAlphaMode value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransfer3DEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RedTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        UINT32* valueElementsLength,
        FLOAT** valueElements);
    HRESULT (STDMETHODCALLTYPE* put_RedTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        UINT32 valueElementsLength,
        FLOAT* valueElements);
    HRESULT (STDMETHODCALLTYPE* get_RedDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_RedDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_GreenTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        UINT32* valueElementsLength,
        FLOAT** valueElements);
    HRESULT (STDMETHODCALLTYPE* put_GreenTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        UINT32 valueElementsLength,
        FLOAT* valueElements);
    HRESULT (STDMETHODCALLTYPE* get_GreenDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_GreenDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_BlueTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        UINT32* valueElementsLength,
        FLOAT** valueElements);
    HRESULT (STDMETHODCALLTYPE* put_BlueTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        UINT32 valueElementsLength,
        FLOAT* valueElements);
    HRESULT (STDMETHODCALLTYPE* get_BlueDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_BlueDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_AlphaTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        UINT32* valueElementsLength,
        FLOAT** valueElements);
    HRESULT (STDMETHODCALLTYPE* put_AlphaTable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        UINT32 valueElementsLength,
        FLOAT* valueElements);
    HRESULT (STDMETHODCALLTYPE* get_AlphaDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_AlphaDisable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITableTransferEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Temperature)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Temperature)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Tint)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Tint)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITemperatureAndTintEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceRectangle)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITileEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_ClampOutput)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_ColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_ColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsSupported)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStaticsVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITintEffectStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* get_TransformMatrix)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2* value);
    HRESULT (STDMETHODCALLTYPE* put_TransformMatrix)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 value);
    HRESULT (STDMETHODCALLTYPE* get_Sharpness)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Sharpness)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform2DEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation* value);
    HRESULT (STDMETHODCALLTYPE* put_InterpolationMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CCanvasImageInterpolation value);
    HRESULT (STDMETHODCALLTYPE* get_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode* value);
    HRESULT (STDMETHODCALLTYPE* put_BorderMode)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CEffectBorderMode value);
    HRESULT (STDMETHODCALLTYPE* get_TransformMatrix)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4* value);
    HRESULT (STDMETHODCALLTYPE* put_TransformMatrix)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITransform3DEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Offset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Offset)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Size)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Frequency)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2* value);
    HRESULT (STDMETHODCALLTYPE* put_Frequency)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 value);
    HRESULT (STDMETHODCALLTYPE* get_Octaves)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Octaves)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Seed)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Seed)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_Noise)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CTurbulenceEffectNoise* value);
    HRESULT (STDMETHODCALLTYPE* put_Noise)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        enum __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CTurbulenceEffectNoise value);
    HRESULT (STDMETHODCALLTYPE* get_Tileable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Tileable)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CITurbulenceEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIUnPremultiplyEffect_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffectVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Color)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_Color)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Amount)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_Curve)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* put_Curve)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        FLOAT value);
    HRESULT (STDMETHODCALLTYPE* get_ColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4* value);
    HRESULT (STDMETHODCALLTYPE* put_ColorHdr)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        struct __x_ABI_CWindows_CFoundation_CNumerics_CVector4 value);
    HRESULT (STDMETHODCALLTYPE* get_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource** source);
    HRESULT (STDMETHODCALLTYPE* put_Source)(__x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect* This,
        __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource* source);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffectVtbl;

    interface __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffectVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect;
#endif /* !defined(____x_ABI_CMicrosoft_CGraphics_CCanvas_CEffects_CIVignetteEffect_INTERFACE_DEFINED__) */
    
