// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Networking.Connectivity.h"
#include "Windows.Security.Credentials.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter;

#endif // ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter2_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter2 __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter2;

#endif // ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStatics __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStatics;

#endif // ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork;

#endif // ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiConnectionResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiConnectionResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CWiFi_CIWiFiConnectionResult __x_ABI_CWindows_CDevices_CWiFi_CIWiFiConnectionResult;

#endif // ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiConnectionResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReport_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReport_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReport __x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReport;

#endif // ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReport_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResult __x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResult;

#endif // ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResult_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiAccessStatus __x_ABI_CWindows_CDevices_CWiFi_CWiFiAccessStatus;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus* This,
        enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiAccessStatus* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatusVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatusVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
        __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapterVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapterVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult* This,
        __x_ABI_CWindows_CDevices_CWiFi_CIWiFiConnectionResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult* This,
        __x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
        __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapterVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapterVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
        UINT32 index,
        __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
        __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapterVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapterVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapterVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetworkVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This,
        __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetworkVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetworkVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetworkVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetworkVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetworkVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiWpsKind __x_ABI_CWindows_CDevices_CWiFi_CWiFiWpsKind;

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKindVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This,
        enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiWpsKind* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiWpsKind* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKindVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKindVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKindVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKindVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKindVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetworkVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This,
        UINT32 index,
        __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This,
        __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetworkVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetworkVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKindVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This,
        UINT32 index,
        enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiWpsKind* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This,
        enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiWpsKind value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiWpsKind* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKindVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKindVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_IInspectable* This,
        __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_IInspectable_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#ifndef ____x_ABI_CWindows_CNetworking_CConnectivity_CINetworkAdapter_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CConnectivity_CINetworkAdapter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CConnectivity_CINetworkAdapter __x_ABI_CWindows_CNetworking_CConnectivity_CINetworkAdapter;

#endif // ____x_ABI_CWindows_CNetworking_CConnectivity_CINetworkAdapter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CNetworking_CConnectivity_CINetworkSecuritySettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CConnectivity_CINetworkSecuritySettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CConnectivity_CINetworkSecuritySettings __x_ABI_CWindows_CNetworking_CConnectivity_CINetworkSecuritySettings;

#endif // ____x_ABI_CWindows_CNetworking_CConnectivity_CINetworkSecuritySettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential_FWD_DEFINED__
#define ____x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential;

#endif // ____x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiConnectionMethod __x_ABI_CWindows_CDevices_CWiFi_CWiFiConnectionMethod;

typedef enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiConnectionStatus __x_ABI_CWindows_CDevices_CWiFi_CWiFiConnectionStatus;

typedef enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiNetworkKind __x_ABI_CWindows_CDevices_CWiFi_CWiFiNetworkKind;

typedef enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiPhyKind __x_ABI_CWindows_CDevices_CWiFi_CWiFiPhyKind;

typedef enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiReconnectionKind __x_ABI_CWindows_CDevices_CWiFi_CWiFiReconnectionKind;

typedef enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiWpsConfigurationStatus __x_ABI_CWindows_CDevices_CWiFi_CWiFiWpsConfigurationStatus;

enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiAccessStatus
    {
        __x_ABI_CWindows_CDevices_CWiFi_CWiFiAccessStatus_Unspecified = 0,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiAccessStatus_Allowed = 1,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiAccessStatus_DeniedByUser = 2,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiAccessStatus_DeniedBySystem = 3,
};

enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiConnectionMethod
    {
        __x_ABI_CWindows_CDevices_CWiFi_CWiFiConnectionMethod_Default = 0,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiConnectionMethod_WpsPin = 1,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiConnectionMethod_WpsPushButton = 2,
};

enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiConnectionStatus
    {
        __x_ABI_CWindows_CDevices_CWiFi_CWiFiConnectionStatus_UnspecifiedFailure = 0,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiConnectionStatus_Success = 1,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiConnectionStatus_AccessRevoked = 2,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiConnectionStatus_InvalidCredential = 3,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiConnectionStatus_NetworkNotAvailable = 4,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiConnectionStatus_Timeout = 5,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiConnectionStatus_UnsupportedAuthenticationProtocol = 6,
};

enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiNetworkKind
    {
        __x_ABI_CWindows_CDevices_CWiFi_CWiFiNetworkKind_Any = 0,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiNetworkKind_Infrastructure = 1,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiNetworkKind_Adhoc = 2,
};

enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiPhyKind
    {
        __x_ABI_CWindows_CDevices_CWiFi_CWiFiPhyKind_Unknown = 0,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiPhyKind_Fhss = 1,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiPhyKind_Dsss = 2,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiPhyKind_IRBaseband = 3,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiPhyKind_Ofdm = 4,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiPhyKind_Hrdsss = 5,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiPhyKind_Erp = 6,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiPhyKind_HT = 7,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiPhyKind_Vht = 8,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiPhyKind_Dmg = 9,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiPhyKind_HE = 10,
};

enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiReconnectionKind
    {
        __x_ABI_CWindows_CDevices_CWiFi_CWiFiReconnectionKind_Automatic = 0,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiReconnectionKind_Manual = 1,
};

enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiWpsConfigurationStatus
    {
        __x_ABI_CWindows_CDevices_CWiFi_CWiFiWpsConfigurationStatus_UnspecifiedFailure = 0,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiWpsConfigurationStatus_Success = 1,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiWpsConfigurationStatus_Timeout = 2,
};

enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiWpsKind
    {
        __x_ABI_CWindows_CDevices_CWiFi_CWiFiWpsKind_Unknown = 0,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiWpsKind_Pin = 1,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiWpsKind_PushButton = 2,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiWpsKind_Nfc = 3,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiWpsKind_Ethernet = 4,
    __x_ABI_CWindows_CDevices_CWiFi_CWiFiWpsKind_Usb = 5,
};

#if !defined(____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_NetworkAdapter)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter* This,
        __x_ABI_CWindows_CNetworking_CConnectivity_CINetworkAdapter** value);
    HRESULT (STDMETHODCALLTYPE* ScanAsync)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** value);
    HRESULT (STDMETHODCALLTYPE* get_NetworkReport)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter* This,
        __x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReport** value);
    HRESULT (STDMETHODCALLTYPE* add_AvailableNetworksChanged)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter_IInspectable* args,
        EventRegistrationToken* eventCookie);
    HRESULT (STDMETHODCALLTYPE* remove_AvailableNetworksChanged)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter* This,
        EventRegistrationToken eventCookie);
    HRESULT (STDMETHODCALLTYPE* ConnectAsync)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter* This,
        __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* availableNetwork,
        enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiReconnectionKind reconnectionKind,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult** value);
    HRESULT (STDMETHODCALLTYPE* ConnectWithPasswordCredentialAsync)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter* This,
        __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* availableNetwork,
        enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiReconnectionKind reconnectionKind,
        __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential* passwordCredential,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult** value);
    HRESULT (STDMETHODCALLTYPE* ConnectWithPasswordCredentialAndSsidAsync)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter* This,
        __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* availableNetwork,
        enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiReconnectionKind reconnectionKind,
        __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential* passwordCredential,
        HSTRING ssid,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult** value);
    HRESULT (STDMETHODCALLTYPE* Disconnect)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter* This);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterVtbl;

    interface __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter;
#endif /* !defined(____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetWpsConfigurationAsync)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter2* This,
        __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* availableNetwork,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsConfigurationResult** operation);
    HRESULT (STDMETHODCALLTYPE* ConnectWithPasswordCredentialAndSsidAndConnectionMethodAsync)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter2* This,
        __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* availableNetwork,
        enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiReconnectionKind reconnectionKind,
        __x_ABI_CWindows_CSecurity_CCredentials_CIPasswordCredential* passwordCredential,
        HSTRING ssid,
        enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiConnectionMethod connectionMethod,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiConnectionResult** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter2Vtbl;

    interface __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter2
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter2;
#endif /* !defined(____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapter2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FindAllAdaptersAsync)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter** value);
    HRESULT (STDMETHODCALLTYPE* GetDeviceSelector)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStatics* This,
        HSTRING* deviceSelector);
    HRESULT (STDMETHODCALLTYPE* FromIdAsync)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStatics* This,
        HSTRING deviceId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAdapter** asyncOp);
    HRESULT (STDMETHODCALLTYPE* RequestAccessAsync)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAccessStatus** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStaticsVtbl;

    interface __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStatics;
#endif /* !defined(____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAdapterStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetworkVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uptime)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_Ssid)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Bssid)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ChannelCenterFrequencyInKilohertz)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* get_NetworkRssiInDecibelMilliwatts)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_SignalBars)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* This,
        BYTE* value);
    HRESULT (STDMETHODCALLTYPE* get_NetworkKind)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* This,
        enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiNetworkKind* value);
    HRESULT (STDMETHODCALLTYPE* get_PhyKind)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* This,
        enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiPhyKind* value);
    HRESULT (STDMETHODCALLTYPE* get_SecuritySettings)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* This,
        __x_ABI_CWindows_CNetworking_CConnectivity_CINetworkSecuritySettings** value);
    HRESULT (STDMETHODCALLTYPE* get_BeaconInterval)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_IsWiFiDirect)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetworkVtbl;

    interface __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetworkVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork;
#endif /* !defined(____x_ABI_CWindows_CDevices_CWiFi_CIWiFiAvailableNetwork_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CWiFi_CIWiFiConnectionResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiConnectionResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CWiFi_CIWiFiConnectionResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiConnectionResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiConnectionResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiConnectionResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiConnectionResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiConnectionResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiConnectionResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ConnectionStatus)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiConnectionResult* This,
        enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiConnectionStatus* value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CWiFi_CIWiFiConnectionResultVtbl;

    interface __x_ABI_CWindows_CDevices_CWiFi_CIWiFiConnectionResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CWiFi_CIWiFiConnectionResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CWiFi_CIWiFiConnectionResult;
#endif /* !defined(____x_ABI_CWindows_CDevices_CWiFi_CIWiFiConnectionResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReport_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReport_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReportVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReport* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReport* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReport* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReport* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReport* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReport* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Timestamp)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReport* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_AvailableNetworks)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReport* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiAvailableNetwork** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReportVtbl;

    interface __x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReport
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReportVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReport;
#endif /* !defined(____x_ABI_CWindows_CDevices_CWiFi_CIWiFiNetworkReport_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResult* This,
        enum __x_ABI_CWindows_CDevices_CWiFi_CWiFiWpsConfigurationStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_SupportedWpsKinds)(__x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResult* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CDevices__CWiFi__CWiFiWpsKind** value);

        END_INTERFACE
    } __x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResultVtbl;

    interface __x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResult;
#endif /* !defined(____x_ABI_CWindows_CDevices_CWiFi_CIWiFiWpsConfigurationResult_INTERFACE_DEFINED__) */
    
