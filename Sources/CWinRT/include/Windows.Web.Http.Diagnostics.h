// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.System.Diagnostics.h"
#include "Windows.Web.Http.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This,
        __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocationVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocationVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This,
        UINT32 index,
        __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This,
        __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocationVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocationVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestResponseCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestResponseCompletedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestResponseCompletedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestResponseCompletedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestResponseCompletedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestResponseCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestResponseCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestResponseCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestResponseCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestResponseCompletedEventArgs* This,
        __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* sender,
        __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestResponseCompletedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestResponseCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestResponseCompletedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestResponseCompletedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestSentEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestSentEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestSentEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestSentEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestSentEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestSentEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestSentEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestSentEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestSentEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestSentEventArgs* This,
        __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* sender,
        __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestSentEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestSentEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestSentEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestSentEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderResponseReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderResponseReceivedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderResponseReceivedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderResponseReceivedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderResponseReceivedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderResponseReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderResponseReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderResponseReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderResponseReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderResponseReceivedEventArgs* This,
        __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* sender,
        __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderResponseReceivedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderResponseReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderResponseReceivedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderResponseReceivedEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo;

#endif // ____x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage_FWD_DEFINED__
#define ____x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage __x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage;

#endif // ____x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator;

enum __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator
    {
        __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_ParsedElement = 0,
    __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Script = 1,
    __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Image = 2,
    __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Link = 3,
    __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Style = 4,
    __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_XmlHttpRequest = 5,
    __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Media = 6,
    __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_HtmlDownload = 7,
    __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Prefetch = 8,
    __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Other = 9,
    __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_CrossOriginPreFlight = 10,
    __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Fetch = 11,
    __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator_Beacon = 12,
};

#if !defined(____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Start)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* This);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* This);
    HRESULT (STDMETHODCALLTYPE* add_RequestSent)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestSentEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RequestSent)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ResponseReceived)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderResponseReceivedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ResponseReceived)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_RequestResponseCompleted)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProvider___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticProviderRequestResponseCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RequestResponseCompleted)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ActivityId)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_Timestamps)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* This,
        __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps** value);
    HRESULT (STDMETHODCALLTYPE* get_RequestedUri)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_ProcessId)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ThreadId)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Initiator)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* This,
        enum __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator* value);
    HRESULT (STDMETHODCALLTYPE* get_SourceLocations)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation** value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseCompletedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestampsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CacheCheckedTimestamp)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* get_ConnectionInitiatedTimestamp)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* get_NameResolvedTimestamp)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* get_SslNegotiatedTimestamp)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* get_ConnectionCompletedTimestamp)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* get_RequestSentTimestamp)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* get_RequestCompletedTimestamp)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* get_ResponseReceivedTimestamp)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* get_ResponseCompletedTimestamp)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestampsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestampsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestResponseTimestamps_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Timestamp)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_ActivityId)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_Message)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* This,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpRequestMessage** value);
    HRESULT (STDMETHODCALLTYPE* get_ProcessId)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ThreadId)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Initiator)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* This,
        enum __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CHttpDiagnosticRequestInitiator* value);
    HRESULT (STDMETHODCALLTYPE* get_SourceLocations)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CWeb__CHttp__CDiagnostics__CHttpDiagnosticSourceLocation** value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderRequestSentEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Timestamp)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_ActivityId)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_Message)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs* This,
        __x_ABI_CWindows_CWeb_CHttp_CIHttpResponseMessage** value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderResponseReceivedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateFromProcessDiagnosticInfo)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics* This,
        __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiagnosticInfo* processDiagnosticInfo,
        __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProvider** value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStaticsVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticProviderStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceUri)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_LineNumber)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_ColumnNumber)(__x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation* This,
        UINT64* value);

        END_INTERFACE
    } __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocationVtbl;

    interface __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation
    {
        CONST_VTBL struct __x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation;
#endif /* !defined(____x_ABI_CWindows_CWeb_CHttp_CDiagnostics_CIHttpDiagnosticSourceLocation_INTERFACE_DEFINED__) */
    
