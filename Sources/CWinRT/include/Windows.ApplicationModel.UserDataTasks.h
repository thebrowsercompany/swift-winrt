// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.System.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskBatch_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskBatch_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskBatch __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskBatch;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskBatch_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperations_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperations_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperations __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperations;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperations_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManager __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManager;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerStatics __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerStatics;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptions_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptions __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptions;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReader_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReader __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReader;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStore_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStore_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStore __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStore;

#endif // ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStore_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

#if !defined(____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_HSTRING __x_ABI_C__FIAsyncOperation_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING* This,
        __x_ABI_C__FIAsyncOperation_1_HSTRING* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_HSTRING_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskBatch** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatchVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatchVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatchVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatchVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStore** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStoreVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStoreVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStoreVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStoreVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
        UINT32 index,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_int_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_int_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_int __x_ABI_C__FIReference_1_int;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_int;

    typedef struct __x_ABI_C__FIReference_1_intVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_int* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_int* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_int* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_int* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_int* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_int* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_int* This,
        INT32* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_intVtbl;

    interface __x_ABI_C__FIReference_1_int
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_intVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_int_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskDaysOfWeek __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskDaysOfWeek;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskDaysOfWeek_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskDaysOfWeek_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskDaysOfWeek __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskDaysOfWeek;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskDaysOfWeek;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskDaysOfWeekVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskDaysOfWeek* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskDaysOfWeek* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskDaysOfWeek* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskDaysOfWeek* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskDaysOfWeek* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskDaysOfWeek* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskDaysOfWeek* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskDaysOfWeek* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskDaysOfWeekVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskDaysOfWeek
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskDaysOfWeekVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskDaysOfWeek_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskWeekOfMonth __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskWeekOfMonth;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskWeekOfMonth_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskWeekOfMonth_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskWeekOfMonth __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskWeekOfMonth;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskWeekOfMonth;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskWeekOfMonthVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskWeekOfMonth* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskWeekOfMonth* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskWeekOfMonth* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskWeekOfMonth* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskWeekOfMonth* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskWeekOfMonth* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskWeekOfMonth* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskWeekOfMonth* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskWeekOfMonthVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskWeekOfMonth
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskWeekOfMonthVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskWeekOfMonth_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListSyncManager_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListSyncManager_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListSyncManager_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListSyncManager_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListSyncManager_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListSyncManager_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListSyncManager_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListSyncManager_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListSyncManager_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListSyncManager_IInspectable* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListSyncManager_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListSyncManager_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListSyncManager_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListSyncManager_IInspectable_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CIUser __x_ABI_CWindows_CSystem_CIUser;

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskDetailsKind __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskDetailsKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskKind __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListOtherAppReadAccess __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListOtherAppReadAccess;

typedef enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListOtherAppWriteAccess __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListOtherAppWriteAccess;

typedef enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListSyncStatus __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListSyncStatus;

typedef enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskPriority __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskPriority;

typedef enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskQueryKind __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskQueryKind;

typedef enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskQuerySortProperty __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskQuerySortProperty;

typedef enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskRecurrenceUnit __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskRecurrenceUnit;

typedef enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskRegenerationUnit __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskRegenerationUnit;

typedef enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskSensitivity __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskSensitivity;

typedef enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskStoreAccessType __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskStoreAccessType;

enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskDaysOfWeek
    {
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskDaysOfWeek_None = 0,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskDaysOfWeek_Sunday = 0x1,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskDaysOfWeek_Monday = 0x2,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskDaysOfWeek_Tuesday = 0x4,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskDaysOfWeek_Wednesday = 0x8,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskDaysOfWeek_Thursday = 0x10,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskDaysOfWeek_Friday = 0x20,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskDaysOfWeek_Saturday = 0x40,
};

enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskDetailsKind
    {
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskDetailsKind_PlainText = 0,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskDetailsKind_Html = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskKind
    {
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskKind_Single = 0,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskKind_Recurring = 1,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskKind_Regenerating = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListOtherAppReadAccess
    {
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListOtherAppReadAccess_Full = 0,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListOtherAppReadAccess_SystemOnly = 1,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListOtherAppReadAccess_None = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListOtherAppWriteAccess
    {
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListOtherAppWriteAccess_Limited = 0,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListOtherAppWriteAccess_None = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListSyncStatus
    {
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListSyncStatus_Idle = 0,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListSyncStatus_Syncing = 1,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListSyncStatus_UpToDate = 2,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListSyncStatus_AuthenticationError = 3,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListSyncStatus_PolicyError = 4,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListSyncStatus_UnknownError = 5,
};

enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskPriority
    {
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskPriority_Normal = 0,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskPriority_Low = -1,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskPriority_High = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskQueryKind
    {
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskQueryKind_All = 0,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskQueryKind_Incomplete = 1,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskQueryKind_Complete = 2,
};

enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskQuerySortProperty
    {
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskQuerySortProperty_DueDate = 0,
};

enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskRecurrenceUnit
    {
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskRecurrenceUnit_Daily = 0,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskRecurrenceUnit_Weekly = 1,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskRecurrenceUnit_Monthly = 2,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskRecurrenceUnit_MonthlyOnDay = 3,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskRecurrenceUnit_Yearly = 4,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskRecurrenceUnit_YearlyOnDay = 5,
};

enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskRegenerationUnit
    {
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskRegenerationUnit_Daily = 0,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskRegenerationUnit_Weekly = 1,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskRegenerationUnit_Monthly = 2,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskRegenerationUnit_Yearly = 4,
};

enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskSensitivity
    {
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskSensitivity_Public = 0,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskSensitivity_Private = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskStoreAccessType
    {
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskStoreAccessType_AppTasksReadWrite = 0,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskStoreAccessType_AllTasksLimitedReadWrite = 1,
};

enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskWeekOfMonth
    {
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskWeekOfMonth_First = 0,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskWeekOfMonth_Second = 1,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskWeekOfMonth_Third = 2,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskWeekOfMonth_Fourth = 3,
    __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskWeekOfMonth_Last = 4,
};

#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ListId)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_RemoteId)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_RemoteId)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_CompletedDate)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_CompletedDate)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_Details)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Details)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_DetailsKind)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskDetailsKind* value);
    HRESULT (STDMETHODCALLTYPE* put_DetailsKind)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskDetailsKind value);
    HRESULT (STDMETHODCALLTYPE* get_DueDate)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_DueDate)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskKind* value);
    HRESULT (STDMETHODCALLTYPE* get_Priority)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskPriority* value);
    HRESULT (STDMETHODCALLTYPE* put_Priority)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskPriority value);
    HRESULT (STDMETHODCALLTYPE* get_RecurrenceProperties)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties** value);
    HRESULT (STDMETHODCALLTYPE* put_RecurrenceProperties)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* value);
    HRESULT (STDMETHODCALLTYPE* get_RegenerationProperties)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties** value);
    HRESULT (STDMETHODCALLTYPE* put_RegenerationProperties)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties* value);
    HRESULT (STDMETHODCALLTYPE* get_Reminder)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_Reminder)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_Sensitivity)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskSensitivity* value);
    HRESULT (STDMETHODCALLTYPE* put_Sensitivity)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskSensitivity value);
    HRESULT (STDMETHODCALLTYPE* get_Subject)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_Subject)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_StartDate)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_StartDate)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskBatch_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskBatch_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskBatchVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskBatch* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskBatch* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskBatch* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskBatch* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskBatch* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskBatch* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Tasks)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskBatch* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskBatchVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskBatch
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskBatchVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskBatch;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskBatch_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_UserDataAccountId)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DisplayName)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_SourceDisplayName)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_OtherAppReadAccess)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListOtherAppReadAccess* value);
    HRESULT (STDMETHODCALLTYPE* put_OtherAppReadAccess)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListOtherAppReadAccess value);
    HRESULT (STDMETHODCALLTYPE* get_OtherAppWriteAccess)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListOtherAppWriteAccess* value);
    HRESULT (STDMETHODCALLTYPE* put_OtherAppWriteAccess)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListOtherAppWriteAccess value);
    HRESULT (STDMETHODCALLTYPE* get_LimitedWriteOperations)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperations** value);
    HRESULT (STDMETHODCALLTYPE* get_SyncManager)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager** value);
    HRESULT (STDMETHODCALLTYPE* RegisterSyncManagerAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* GetTaskReader)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReader** result);
    HRESULT (STDMETHODCALLTYPE* GetTaskReaderWithOptions)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptions* options,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReader** value);
    HRESULT (STDMETHODCALLTYPE* GetTaskAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
        HSTRING userDataTask,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTask** operation);
    HRESULT (STDMETHODCALLTYPE* SaveTaskAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* userDataTask,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** action);
    HRESULT (STDMETHODCALLTYPE* DeleteTaskAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
        HSTRING userDataTaskId,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** action);
    HRESULT (STDMETHODCALLTYPE* DeleteAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncAction);
    HRESULT (STDMETHODCALLTYPE* SaveAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncAction);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskList_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperations_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperations_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperationsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperations* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperations* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperations* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperations* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperations* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperations* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* TryCompleteTaskAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperations* This,
        HSTRING userDataTaskId,
        __x_ABI_C__FIAsyncOperation_1_HSTRING** operation);
    HRESULT (STDMETHODCALLTYPE* TryCreateOrUpdateTaskAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperations* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTask* userDataTask,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TryDeleteTaskAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperations* This,
        HSTRING userDataTaskId,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* TrySkipOccurrenceAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperations* This,
        HSTRING userDataTaskId,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperationsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperations
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperationsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperations;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListLimitedWriteOperations_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_LastAttemptedSyncTime)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_LastAttemptedSyncTime)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_LastSuccessfulSyncTime)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* put_LastSuccessfulSyncTime)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListSyncStatus* value);
    HRESULT (STDMETHODCALLTYPE* put_Status)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskListSyncStatus value);
    HRESULT (STDMETHODCALLTYPE* SyncAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* add_SyncStatusChanged)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskListSyncManager_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_SyncStatusChanged)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManagerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskListSyncManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RequestStoreAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManager* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskStoreAccessType accessType,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskStore** operation);
    HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManager* This,
        __x_ABI_CWindows_CSystem_CIUser** value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManager
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManager;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefault)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerStatics* This,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManager** result);
    HRESULT (STDMETHODCALLTYPE* GetForUser)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerStatics* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManager** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerStaticsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerStatics;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskManagerStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SortProperty)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskQuerySortProperty* value);
    HRESULT (STDMETHODCALLTYPE* put_SortProperty)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskQuerySortProperty value);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskQueryKind* value);
    HRESULT (STDMETHODCALLTYPE* put_Kind)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptions* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskQueryKind value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptionsVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptions
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptions;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskQueryOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ReadBatchAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReader* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskBatch** result);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReaderVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReader
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReader;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskReader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrencePropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Unit)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskRecurrenceUnit* value);
    HRESULT (STDMETHODCALLTYPE* put_Unit)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskRecurrenceUnit value);
    HRESULT (STDMETHODCALLTYPE* get_Occurrences)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_Occurrences)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_Until)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_Until)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_Interval)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Interval)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This,
        INT32 value);
    HRESULT (STDMETHODCALLTYPE* get_DaysOfWeek)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskDaysOfWeek** value);
    HRESULT (STDMETHODCALLTYPE* put_DaysOfWeek)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskDaysOfWeek* value);
    HRESULT (STDMETHODCALLTYPE* get_WeekOfMonth)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskWeekOfMonth** value);
    HRESULT (STDMETHODCALLTYPE* put_WeekOfMonth)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskWeekOfMonth* value);
    HRESULT (STDMETHODCALLTYPE* get_Month)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_Month)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_Day)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_Day)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties* This,
        __x_ABI_C__FIReference_1_int* value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrencePropertiesVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrencePropertiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRecurrenceProperties_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Unit)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskRegenerationUnit* value);
    HRESULT (STDMETHODCALLTYPE* put_Unit)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties* This,
        enum __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CUserDataTaskRegenerationUnit value);
    HRESULT (STDMETHODCALLTYPE* get_Occurrences)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties* This,
        __x_ABI_C__FIReference_1_int** value);
    HRESULT (STDMETHODCALLTYPE* put_Occurrences)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties* This,
        __x_ABI_C__FIReference_1_int* value);
    HRESULT (STDMETHODCALLTYPE* get_Until)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* put_Until)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_Interval)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties* This,
        INT32* value);
    HRESULT (STDMETHODCALLTYPE* put_Interval)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties* This,
        INT32 value);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationPropertiesVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationPropertiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskRegenerationProperties_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStore_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStore_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStoreVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStore* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStore* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStore* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStore* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStore* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStore* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateListAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStore* This,
        HSTRING name,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList** operation);
    HRESULT (STDMETHODCALLTYPE* CreateListInAccountAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStore* This,
        HSTRING name,
        HSTRING userDataAccountId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList** result);
    HRESULT (STDMETHODCALLTYPE* FindListsAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStore* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList** operation);
    HRESULT (STDMETHODCALLTYPE* GetListAsync)(__x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStore* This,
        HSTRING taskListId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CUserDataTasks__CUserDataTaskList** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStoreVtbl;

    interface __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStore
    {
        CONST_VTBL struct __x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStoreVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStore;
#endif /* !defined(____x_ABI_CWindows_CApplicationModel_CUserDataTasks_CIUserDataTaskStore_INTERFACE_DEFINED__) */
    
