// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.UI.Text.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont;

#endif // ____x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup;

#endif // ____x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupFactory __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupFactory;

#endif // ____x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupFactory_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef enum __x_ABI_CWindows_CUI_CText_CFontStretch __x_ABI_CWindows_CUI_CText_CFontStretch;

typedef enum __x_ABI_CWindows_CUI_CText_CFontStyle __x_ABI_CWindows_CUI_CText_CFontStyle;

typedef struct __x_ABI_CWindows_CUI_CText_CFontWeight __x_ABI_CWindows_CUI_CText_CFontWeight;

#if !defined(____x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FontFamily)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_FontWeight)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont* This,
        struct __x_ABI_CWindows_CUI_CText_CFontWeight* weight);
    HRESULT (STDMETHODCALLTYPE* get_FontStretch)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStretch* stretch);
    HRESULT (STDMETHODCALLTYPE* get_FontStyle)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont* This,
        enum __x_ABI_CWindows_CUI_CText_CFontStyle* style);
    HRESULT (STDMETHODCALLTYPE* get_ScaleFactor)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont* This,
        DOUBLE* scale);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontVtbl;

    interface __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_UITextFont)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup* This,
        __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont** value);
    HRESULT (STDMETHODCALLTYPE* get_UIHeadingFont)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup* This,
        __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont** value);
    HRESULT (STDMETHODCALLTYPE* get_UITitleFont)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup* This,
        __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont** value);
    HRESULT (STDMETHODCALLTYPE* get_UICaptionFont)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup* This,
        __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont** value);
    HRESULT (STDMETHODCALLTYPE* get_UINotificationHeadingFont)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup* This,
        __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont** value);
    HRESULT (STDMETHODCALLTYPE* get_TraditionalDocumentFont)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup* This,
        __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont** value);
    HRESULT (STDMETHODCALLTYPE* get_ModernDocumentFont)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup* This,
        __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont** value);
    HRESULT (STDMETHODCALLTYPE* get_DocumentHeadingFont)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup* This,
        __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont** value);
    HRESULT (STDMETHODCALLTYPE* get_FixedWidthTextFont)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup* This,
        __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont** value);
    HRESULT (STDMETHODCALLTYPE* get_DocumentAlternate1Font)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup* This,
        __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont** value);
    HRESULT (STDMETHODCALLTYPE* get_DocumentAlternate2Font)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup* This,
        __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFont** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupVtbl;

    interface __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateLanguageFontGroup)(__x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupFactory* This,
        HSTRING languageTag,
        __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroup** recommendedFonts);

        END_INTERFACE
    } __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupFactoryVtbl;

    interface __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupFactory;
#endif /* !defined(____x_ABI_CWindows_CGlobalization_CFonts_CILanguageFontGroupFactory_INTERFACE_DEFINED__) */
    
