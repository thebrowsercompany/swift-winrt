// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Storage.h"
#include "Windows.Storage.Streams.h"
#include "Windows.UI.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CData_CPdf_CIPdfDocument_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CPdf_CIPdfDocument_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CPdf_CIPdfDocument __x_ABI_CWindows_CData_CPdf_CIPdfDocument;

#endif // ____x_ABI_CWindows_CData_CPdf_CIPdfDocument_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CPdf_CIPdfDocumentStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CPdf_CIPdfDocumentStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CPdf_CIPdfDocumentStatics __x_ABI_CWindows_CData_CPdf_CIPdfDocumentStatics;

#endif // ____x_ABI_CWindows_CData_CPdf_CIPdfDocumentStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CPdf_CIPdfPage_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CPdf_CIPdfPage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CPdf_CIPdfPage __x_ABI_CWindows_CData_CPdf_CIPdfPage;

#endif // ____x_ABI_CWindows_CData_CPdf_CIPdfPage_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions __x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions;

#endif // ____x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions __x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions;

#endif // ____x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CPdf__CPdfDocument __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CPdf__CPdfDocument;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocument_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocument_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocument __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocument;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocument;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocumentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocument* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocument* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocument* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocument* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocument* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocument* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocument* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CPdf__CPdfDocument* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocument* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CPdf__CPdfDocument** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocument* This,
        __x_ABI_CWindows_CData_CPdf_CIPdfDocument** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocumentVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocument
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocumentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocument_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CPdf__CPdfDocument_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CPdf__CPdfDocument_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CPdf__CPdfDocument __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CPdf__CPdfDocument;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CPdf__CPdfDocument;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CPdf__CPdfDocumentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CPdf__CPdfDocument* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CPdf__CPdfDocument* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CPdf__CPdfDocument* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CPdf__CPdfDocument* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocument* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CPdf__CPdfDocumentVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CPdf__CPdfDocument
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CPdf__CPdfDocumentVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CData__CPdf__CPdfDocument_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CRect __x_ABI_CWindows_CFoundation_CRect;

typedef struct __x_ABI_CWindows_CFoundation_CSize __x_ABI_CWindows_CFoundation_CSize;

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFile __x_ABI_CWindows_CStorage_CIStorageFile;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CUI_CColor __x_ABI_CWindows_CUI_CColor;

typedef enum __x_ABI_CWindows_CData_CPdf_CPdfPageRotation __x_ABI_CWindows_CData_CPdf_CPdfPageRotation;

enum __x_ABI_CWindows_CData_CPdf_CPdfPageRotation
    {
        __x_ABI_CWindows_CData_CPdf_CPdfPageRotation_Normal = 0,
    __x_ABI_CWindows_CData_CPdf_CPdfPageRotation_Rotate90 = 1,
    __x_ABI_CWindows_CData_CPdf_CPdfPageRotation_Rotate180 = 2,
    __x_ABI_CWindows_CData_CPdf_CPdfPageRotation_Rotate270 = 3,
};

#if !defined(____x_ABI_CWindows_CData_CPdf_CIPdfDocument_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CPdf_CIPdfDocument_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CPdf_CIPdfDocumentVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CPdf_CIPdfDocument* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CPdf_CIPdfDocument* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CPdf_CIPdfDocument* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CPdf_CIPdfDocument* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CPdf_CIPdfDocument* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CPdf_CIPdfDocument* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetPage)(__x_ABI_CWindows_CData_CPdf_CIPdfDocument* This,
        UINT32 pageIndex,
        __x_ABI_CWindows_CData_CPdf_CIPdfPage** pdfPage);
    HRESULT (STDMETHODCALLTYPE* get_PageCount)(__x_ABI_CWindows_CData_CPdf_CIPdfDocument* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_IsPasswordProtected)(__x_ABI_CWindows_CData_CPdf_CIPdfDocument* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CPdf_CIPdfDocumentVtbl;

    interface __x_ABI_CWindows_CData_CPdf_CIPdfDocument
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CPdf_CIPdfDocumentVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CPdf_CIPdfDocument;
#endif /* !defined(____x_ABI_CWindows_CData_CPdf_CIPdfDocument_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CPdf_CIPdfDocumentStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CPdf_CIPdfDocumentStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CPdf_CIPdfDocumentStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CPdf_CIPdfDocumentStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CPdf_CIPdfDocumentStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CPdf_CIPdfDocumentStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CPdf_CIPdfDocumentStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CPdf_CIPdfDocumentStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CPdf_CIPdfDocumentStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* LoadFromFileAsync)(__x_ABI_CWindows_CData_CPdf_CIPdfDocumentStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocument** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* LoadFromFileWithPasswordAsync)(__x_ABI_CWindows_CData_CPdf_CIPdfDocumentStatics* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        HSTRING password,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocument** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* LoadFromStreamAsync)(__x_ABI_CWindows_CData_CPdf_CIPdfDocumentStatics* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* inputStream,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocument** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* LoadFromStreamWithPasswordAsync)(__x_ABI_CWindows_CData_CPdf_CIPdfDocumentStatics* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* inputStream,
        HSTRING password,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CData__CPdf__CPdfDocument** asyncInfo);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CPdf_CIPdfDocumentStaticsVtbl;

    interface __x_ABI_CWindows_CData_CPdf_CIPdfDocumentStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CPdf_CIPdfDocumentStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CPdf_CIPdfDocumentStatics;
#endif /* !defined(____x_ABI_CWindows_CData_CPdf_CIPdfDocumentStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CPdf_CIPdfPage_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CPdf_CIPdfPage_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CPdf_CIPdfPageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CPdf_CIPdfPage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CPdf_CIPdfPage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CPdf_CIPdfPage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CPdf_CIPdfPage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CPdf_CIPdfPage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CPdf_CIPdfPage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RenderToStreamAsync)(__x_ABI_CWindows_CData_CPdf_CIPdfPage* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* outputStream,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* RenderWithOptionsToStreamAsync)(__x_ABI_CWindows_CData_CPdf_CIPdfPage* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream* outputStream,
        __x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions* options,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* PreparePageAsync)(__x_ABI_CWindows_CData_CPdf_CIPdfPage* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* get_Index)(__x_ABI_CWindows_CData_CPdf_CIPdfPage* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CWindows_CData_CPdf_CIPdfPage* This,
        struct __x_ABI_CWindows_CFoundation_CSize* value);
    HRESULT (STDMETHODCALLTYPE* get_Dimensions)(__x_ABI_CWindows_CData_CPdf_CIPdfPage* This,
        __x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions** value);
    HRESULT (STDMETHODCALLTYPE* get_Rotation)(__x_ABI_CWindows_CData_CPdf_CIPdfPage* This,
        enum __x_ABI_CWindows_CData_CPdf_CPdfPageRotation* value);
    HRESULT (STDMETHODCALLTYPE* get_PreferredZoom)(__x_ABI_CWindows_CData_CPdf_CIPdfPage* This,
        FLOAT* value);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CPdf_CIPdfPageVtbl;

    interface __x_ABI_CWindows_CData_CPdf_CIPdfPage
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CPdf_CIPdfPageVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CPdf_CIPdfPage;
#endif /* !defined(____x_ABI_CWindows_CData_CPdf_CIPdfPage_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CPdf_CIPdfPageDimensionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MediaBox)(__x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* get_CropBox)(__x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* get_BleedBox)(__x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* get_TrimBox)(__x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* get_ArtBox)(__x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CPdf_CIPdfPageDimensionsVtbl;

    interface __x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CPdf_CIPdfPageDimensionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions;
#endif /* !defined(____x_ABI_CWindows_CData_CPdf_CIPdfPageDimensions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SourceRect)(__x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions* This,
        struct __x_ABI_CWindows_CFoundation_CRect* value);
    HRESULT (STDMETHODCALLTYPE* put_SourceRect)(__x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions* This,
        struct __x_ABI_CWindows_CFoundation_CRect value);
    HRESULT (STDMETHODCALLTYPE* get_DestinationWidth)(__x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_DestinationWidth)(__x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_DestinationHeight)(__x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* put_DestinationHeight)(__x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions* This,
        UINT32 value);
    HRESULT (STDMETHODCALLTYPE* get_BackgroundColor)(__x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions* This,
        struct __x_ABI_CWindows_CUI_CColor* value);
    HRESULT (STDMETHODCALLTYPE* put_BackgroundColor)(__x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions* This,
        struct __x_ABI_CWindows_CUI_CColor value);
    HRESULT (STDMETHODCALLTYPE* get_IsIgnoringHighContrast)(__x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsIgnoringHighContrast)(__x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions* This,
        boolean value);
    HRESULT (STDMETHODCALLTYPE* get_BitmapEncoderId)(__x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* put_BitmapEncoderId)(__x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions* This,
        GUID value);

        END_INTERFACE
    } __x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptionsVtbl;

    interface __x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions
    {
        CONST_VTBL struct __x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions;
#endif /* !defined(____x_ABI_CWindows_CData_CPdf_CIPdfPageRenderOptions_INTERFACE_DEFINED__) */
    
