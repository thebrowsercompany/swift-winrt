// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics;

#endif // ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate;

#endif // ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateFactory __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateFactory;

#endif // ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext;

#endif // ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext2 __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext2;

#endif // ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoader_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoader_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoader __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoader;

#endif // ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoader_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderFactory __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderFactory;

#endif // ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderStatics_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderStatics_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderStatics __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderStatics;

#endif // ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderStatics_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager;

#endif // ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager2_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager2_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager2 __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager2;

#endif // ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager2_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerFactory_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerFactory __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerFactory;

#endif // ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap;

#endif // ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap_FWD_DEFINED__

#ifndef ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgs_FWD_DEFINED__
#define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgs __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgs;

#endif // ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgs_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceCandidate_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceCandidate_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceCandidate __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceCandidate;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceCandidate;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceCandidateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceCandidate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceCandidate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceCandidate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceCandidate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceCandidate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceCandidate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceCandidate* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceCandidate* This,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceCandidateVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceCandidate
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceCandidateVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceCandidate_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** first,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMap_2_HSTRING_HSTRING __x_ABI_C__FIMap_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMap_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIMap_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This);

        END_INTERFACE
    } __x_ABI_C__FIMap_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIMap_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMap_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceManager___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceNotFoundEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceManager___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceNotFoundEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceManager___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceNotFoundEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceManager___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceNotFoundEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceManager___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceNotFoundEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceManager___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceNotFoundEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceManager___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceNotFoundEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceManager___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceNotFoundEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceManager___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceNotFoundEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceManager___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceNotFoundEventArgs* This,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager* sender,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceManager___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceNotFoundEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceManager___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceNotFoundEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceManager___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceNotFoundEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceManager___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceNotFoundEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

typedef enum __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CResourceCandidateKind __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CResourceCandidateKind;

enum __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CResourceCandidateKind
    {
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CResourceCandidateKind_Unknown = 0,
    __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CResourceCandidateKind_String = 1,
    __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CResourceCandidateKind_FilePath = 2,
    __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CResourceCandidateKind_EmbeddedData = 3,
};

#if !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Contrast)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Custom)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DeviceFamily)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_HomeRegion)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Language)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_LayoutDirection)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Scale)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_TargetSize)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Theme)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStaticsVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIKnownResourceQualifierNameStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ValueAsString)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ValueAsBytes)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate* This,
        UINT32* valueLength,
        BYTE** value);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate* This,
        enum __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CResourceCandidateKind* value);
    HRESULT (STDMETHODCALLTYPE* get_QualifierValues)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateFactory* This,
        enum __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CResourceCandidateKind kind,
        HSTRING data,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate** value);
    HRESULT (STDMETHODCALLTYPE* CreateInstance2)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateFactory* This,
        UINT32 dataLength,
        BYTE* data,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateFactoryVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidateFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContextVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_QualifierValues)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext* This,
        __x_ABI_C__FIMap_2_HSTRING_HSTRING** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContextVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContextVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext2* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext2Vtbl;

    interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext2;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoader_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetString)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoader* This,
        HSTRING resourceId,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* GetStringForUri)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoader* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* resourceUri,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoader
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoader;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderFactory* This,
        HSTRING fileName,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoader** value);
    HRESULT (STDMETHODCALLTYPE* CreateInstance2)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderFactory* This,
        HSTRING fileName,
        HSTRING resourceMap,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoader** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderFactoryVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefaultResourceFilePath)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderStatics* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderStaticsVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderStatics
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderStatics;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceLoaderStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MainResourceMap)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager* This,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap** value);
    HRESULT (STDMETHODCALLTYPE* CreateResourceContext)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager* This,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext** result);
    HRESULT (STDMETHODCALLTYPE* add_ResourceNotFound)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceManager___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceNotFoundEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ResourceNotFound)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager2_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager2* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager2Vtbl;

    interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager2
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager2;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerFactory* This,
        HSTRING fileName,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManager** value);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerFactoryVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerFactory
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerFactory;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceManagerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMapVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ResourceCount)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* GetSubtree)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap* This,
        HSTRING reference,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap** result);
    HRESULT (STDMETHODCALLTYPE* TryGetSubtree)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap* This,
        HSTRING reference,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap** result);
    HRESULT (STDMETHODCALLTYPE* GetValue)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap* This,
        HSTRING resource,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate** result);
    HRESULT (STDMETHODCALLTYPE* GetValueWithContext)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap* This,
        HSTRING resource,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext* context,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate** result);
    HRESULT (STDMETHODCALLTYPE* GetValueByIndex)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap* This,
        UINT32 index,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceCandidate** result);
    HRESULT (STDMETHODCALLTYPE* GetValueByIndexWithContext)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap* This,
        UINT32 index,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext* context,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CMicrosoft__CWindows__CApplicationModel__CResources__CResourceCandidate** result);
    HRESULT (STDMETHODCALLTYPE* TryGetValue)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap* This,
        HSTRING resource,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate** result);
    HRESULT (STDMETHODCALLTYPE* TryGetValueWithContext)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap* This,
        HSTRING resource,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext* context,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate** result);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMapVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMapVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceMap_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Context)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgs* This,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceContext** value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgs* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* SetResolvedCandidate)(__x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgs* This,
        __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceCandidate* candidate);

        END_INTERFACE
    } __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgsVtbl;

    interface __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgs
    {
        CONST_VTBL struct __x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgs;
#endif /* !defined(____x_ABI_CMicrosoft_CWindows_CApplicationModel_CResources_CIResourceNotFoundEventArgs_INTERFACE_DEFINED__) */
    
