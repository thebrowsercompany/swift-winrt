// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Media.Playback.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventHandler __x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventHandler;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CMedia_CProtection_CIRebootNeededEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CIRebootNeededEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CProtection_CIRebootNeededEventHandler __x_ABI_CWindows_CMedia_CProtection_CIRebootNeededEventHandler;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CIRebootNeededEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventHandler __x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventHandler;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgs __x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CIComponentRenewalStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CIComponentRenewalStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CIComponentRenewalStatics __x_ABI_CWindows_CMedia_CProtection_CIComponentRenewalStatics;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CIComponentRenewalStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CIHdcpSession_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CIHdcpSession_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CIHdcpSession __x_ABI_CWindows_CMedia_CProtection_CIHdcpSession;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CIHdcpSession_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServer_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServer __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServer;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerFactory __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerFactory;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletion_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletion_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletion __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletion;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletion_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CIProtectionCapabilities_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CIProtectionCapabilities_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CIProtectionCapabilities __x_ABI_CWindows_CMedia_CProtection_CIProtectionCapabilities;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CIProtectionCapabilities_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformation_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformation __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformation;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs __x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs2 __x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs2;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs2_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef enum __x_ABI_CWindows_CMedia_CProtection_CHdcpSetProtectionResult __x_ABI_CWindows_CMedia_CProtection_CHdcpSetProtectionResult;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult* This,
        enum __x_ABI_CWindows_CMedia_CProtection_CHdcpSetProtectionResult* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CMedia_CProtection_CRenewalStatus __x_ABI_CWindows_CMedia_CProtection_CRenewalStatus;

typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32 __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32;

typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32 __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32;

#if !defined(____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32 __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32Vtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32 __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32;

    typedef struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* handler);
    HRESULT (STDMETHODCALLTYPE* get_Progress)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* This,
        __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32** result);
    HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* This,
        __x_ABI_C__FIAsyncOperationWithProgressCompletedHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* This,
        enum __x_ABI_CWindows_CMedia_CProtection_CRenewalStatus* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32Vtbl;

    interface __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32 __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32;

    typedef struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* This,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32* asyncInfo,
        UINT32 progressInfo);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32Vtbl;

    interface __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationProgressHandler_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
        __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItemVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItemVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
        __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItemVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
        __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
        __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItemVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CMedia_CProtection_CHdcpProtection __x_ABI_CWindows_CMedia_CProtection_CHdcpProtection;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CProtection__CHdcpProtection_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CProtection__CHdcpProtection_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CProtection__CHdcpProtection __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CProtection__CHdcpProtection;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CProtection__CHdcpProtection;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CProtection__CHdcpProtectionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CProtection__CHdcpProtection* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CProtection__CHdcpProtection* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CProtection__CHdcpProtection* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CProtection__CHdcpProtection* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CProtection__CHdcpProtection* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CProtection__CHdcpProtection* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CProtection__CHdcpProtection* This,
        enum __x_ABI_CWindows_CMedia_CProtection_CHdcpProtection* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CProtection__CHdcpProtectionVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CProtection__CHdcpProtection
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CProtection__CHdcpProtectionVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CProtection__CHdcpProtection_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CHdcpSession_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CHdcpSession_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CHdcpSession_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CHdcpSession_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CHdcpSession_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CHdcpSession_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CHdcpSession_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CHdcpSession_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CHdcpSession_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CHdcpSession_IInspectable* This,
        __x_ABI_CWindows_CMedia_CProtection_CIHdcpSession* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CHdcpSession_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CHdcpSession_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CHdcpSession_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CHdcpSession_IInspectable_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CPlayback_CIMediaPlaybackItem_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CPlayback_CIMediaPlaybackItem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlaybackItem __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlaybackItem;

#endif // ____x_ABI_CWindows_CMedia_CPlayback_CIMediaPlaybackItem_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CMedia_CProtection_CProtectionCapabilityResult __x_ABI_CWindows_CMedia_CProtection_CProtectionCapabilityResult;

typedef enum __x_ABI_CWindows_CMedia_CProtection_CRevocationAndRenewalReasons __x_ABI_CWindows_CMedia_CProtection_CRevocationAndRenewalReasons;

enum __x_ABI_CWindows_CMedia_CProtection_CGraphicsTrustStatus
    {
        __x_ABI_CWindows_CMedia_CProtection_CGraphicsTrustStatus_TrustNotRequired = 0,
    __x_ABI_CWindows_CMedia_CProtection_CGraphicsTrustStatus_TrustEstablished = 1,
    __x_ABI_CWindows_CMedia_CProtection_CGraphicsTrustStatus_EnvironmentNotSupported = 2,
    __x_ABI_CWindows_CMedia_CProtection_CGraphicsTrustStatus_DriverNotSupported = 3,
    __x_ABI_CWindows_CMedia_CProtection_CGraphicsTrustStatus_DriverSigningFailure = 4,
    __x_ABI_CWindows_CMedia_CProtection_CGraphicsTrustStatus_UnknownFailure = 5,
};

enum __x_ABI_CWindows_CMedia_CProtection_CHdcpProtection
    {
        __x_ABI_CWindows_CMedia_CProtection_CHdcpProtection_Off = 0,
    __x_ABI_CWindows_CMedia_CProtection_CHdcpProtection_On = 1,
    __x_ABI_CWindows_CMedia_CProtection_CHdcpProtection_OnWithTypeEnforcement = 2,
};

enum __x_ABI_CWindows_CMedia_CProtection_CHdcpSetProtectionResult
    {
        __x_ABI_CWindows_CMedia_CProtection_CHdcpSetProtectionResult_Success = 0,
    __x_ABI_CWindows_CMedia_CProtection_CHdcpSetProtectionResult_TimedOut = 1,
    __x_ABI_CWindows_CMedia_CProtection_CHdcpSetProtectionResult_NotSupported = 2,
    __x_ABI_CWindows_CMedia_CProtection_CHdcpSetProtectionResult_UnknownFailure = 3,
};

enum __x_ABI_CWindows_CMedia_CProtection_CProtectionCapabilityResult
    {
        __x_ABI_CWindows_CMedia_CProtection_CProtectionCapabilityResult_NotSupported = 0,
    __x_ABI_CWindows_CMedia_CProtection_CProtectionCapabilityResult_Maybe = 1,
    __x_ABI_CWindows_CMedia_CProtection_CProtectionCapabilityResult_Probably = 2,
};

enum __x_ABI_CWindows_CMedia_CProtection_CRenewalStatus
    {
        __x_ABI_CWindows_CMedia_CProtection_CRenewalStatus_NotStarted = 0,
    __x_ABI_CWindows_CMedia_CProtection_CRenewalStatus_UpdatesInProgress = 1,
    __x_ABI_CWindows_CMedia_CProtection_CRenewalStatus_UserCancelled = 2,
    __x_ABI_CWindows_CMedia_CProtection_CRenewalStatus_AppComponentsMayNeedUpdating = 3,
    __x_ABI_CWindows_CMedia_CProtection_CRenewalStatus_NoComponentsFound = 4,
};

enum __x_ABI_CWindows_CMedia_CProtection_CRevocationAndRenewalReasons
    {
        __x_ABI_CWindows_CMedia_CProtection_CRevocationAndRenewalReasons_UserModeComponentLoad = 0x1,
    __x_ABI_CWindows_CMedia_CProtection_CRevocationAndRenewalReasons_KernelModeComponentLoad = 0x2,
    __x_ABI_CWindows_CMedia_CProtection_CRevocationAndRenewalReasons_AppComponent = 0x4,
    __x_ABI_CWindows_CMedia_CProtection_CRevocationAndRenewalReasons_GlobalRevocationListLoadFailed = 0x10,
    __x_ABI_CWindows_CMedia_CProtection_CRevocationAndRenewalReasons_InvalidGlobalRevocationListSignature = 0x20,
    __x_ABI_CWindows_CMedia_CProtection_CRevocationAndRenewalReasons_GlobalRevocationListAbsent = 0x1000,
    __x_ABI_CWindows_CMedia_CProtection_CRevocationAndRenewalReasons_ComponentRevoked = 0x2000,
    __x_ABI_CWindows_CMedia_CProtection_CRevocationAndRenewalReasons_InvalidComponentCertificateExtendedKeyUse = 0x4000,
    __x_ABI_CWindows_CMedia_CProtection_CRevocationAndRenewalReasons_ComponentCertificateRevoked = 0x8000,
    __x_ABI_CWindows_CMedia_CProtection_CRevocationAndRenewalReasons_InvalidComponentCertificateRoot = 0x10000,
    __x_ABI_CWindows_CMedia_CProtection_CRevocationAndRenewalReasons_ComponentHighSecurityCertificateRevoked = 0x20000,
    __x_ABI_CWindows_CMedia_CProtection_CRevocationAndRenewalReasons_ComponentLowSecurityCertificateRevoked = 0x40000,
    __x_ABI_CWindows_CMedia_CProtection_CRevocationAndRenewalReasons_BootDriverVerificationFailed = 0x100000,
    __x_ABI_CWindows_CMedia_CProtection_CRevocationAndRenewalReasons_ComponentSignedWithTestCertificate = 0x1000000,
    __x_ABI_CWindows_CMedia_CProtection_CRevocationAndRenewalReasons_EncryptionFailure = 0x10000000,
};

#if !defined(____x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventHandler* This,
        __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager* sender,
        __x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventHandlerVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CIRebootNeededEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CIRebootNeededEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CIRebootNeededEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CIRebootNeededEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CIRebootNeededEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CIRebootNeededEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CMedia_CProtection_CIRebootNeededEventHandler* This,
        __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager* sender);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CIRebootNeededEventHandlerVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CIRebootNeededEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CIRebootNeededEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CIRebootNeededEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CIRebootNeededEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventHandler* This,
        __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager* sender,
        __x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs* e);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventHandlerVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Information)(__x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgs* This,
        __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformation** value);
    HRESULT (STDMETHODCALLTYPE* get_Completion)(__x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgs* This,
        __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletion** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CIComponentRenewalStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CIComponentRenewalStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CIComponentRenewalStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CIComponentRenewalStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CIComponentRenewalStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CIComponentRenewalStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CIComponentRenewalStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CIComponentRenewalStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CIComponentRenewalStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* RenewSystemComponentsAsync)(__x_ABI_CWindows_CMedia_CProtection_CIComponentRenewalStatics* This,
        __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformation* information,
        __x_ABI_C__FIAsyncOperationWithProgress_2___x_ABI_CWindows__CMedia__CProtection__CRenewalStatus_UINT32** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CIComponentRenewalStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CIComponentRenewalStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CIComponentRenewalStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CIComponentRenewalStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CIComponentRenewalStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CIHdcpSession_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CIHdcpSession_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CIHdcpSessionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CIHdcpSession* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CIHdcpSession* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CIHdcpSession* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CIHdcpSession* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CIHdcpSession* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CIHdcpSession* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* IsEffectiveProtectionAtLeast)(__x_ABI_CWindows_CMedia_CProtection_CIHdcpSession* This,
        enum __x_ABI_CWindows_CMedia_CProtection_CHdcpProtection protection,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* GetEffectiveProtection)(__x_ABI_CWindows_CMedia_CProtection_CIHdcpSession* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CProtection__CHdcpProtection** value);
    HRESULT (STDMETHODCALLTYPE* SetDesiredMinProtectionAsync)(__x_ABI_CWindows_CMedia_CProtection_CIHdcpSession* This,
        enum __x_ABI_CWindows_CMedia_CProtection_CHdcpProtection protection,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CHdcpSetProtectionResult** value);
    HRESULT (STDMETHODCALLTYPE* add_ProtectionChanged)(__x_ABI_CWindows_CMedia_CProtection_CIHdcpSession* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CHdcpSession_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ProtectionChanged)(__x_ABI_CWindows_CMedia_CProtection_CIHdcpSession* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CIHdcpSessionVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CIHdcpSession
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CIHdcpSessionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CIHdcpSession;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CIHdcpSession_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_ServiceRequested)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager* This,
        __x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventHandler* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_ServiceRequested)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_RebootNeeded)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager* This,
        __x_ABI_CWindows_CMedia_CProtection_CIRebootNeededEventHandler* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_RebootNeeded)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* add_ComponentLoadFailed)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager* This,
        __x_ABI_CWindows_CMedia_CProtection_CIComponentLoadFailedEventHandler* handler,
        EventRegistrationToken* cookie);
    HRESULT (STDMETHODCALLTYPE* remove_ComponentLoadFailed)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager* This,
        EventRegistrationToken cookie);
    HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManagerVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManagerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServer_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Properties)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServer* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** ppProperties);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServer
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServer;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreatePMPServer)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerFactory* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* pProperties,
        __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServer** ppObject);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerFactoryVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerFactory;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionPMPServerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletion_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletion_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletion* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletion* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletion* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletion* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletion* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletion* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Complete)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletion* This,
        boolean success);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletionVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletion
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletion;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletion_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ProtectionSystem)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest* This,
        GUID* system);
    HRESULT (STDMETHODCALLTYPE* get_Type)(__x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest* This,
        GUID* type);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequestVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CIProtectionCapabilities_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CIProtectionCapabilities_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CIProtectionCapabilitiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CIProtectionCapabilities* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CIProtectionCapabilities* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CIProtectionCapabilities* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CIProtectionCapabilities* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CIProtectionCapabilities* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CIProtectionCapabilities* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* IsTypeSupported)(__x_ABI_CWindows_CMedia_CProtection_CIProtectionCapabilities* This,
        HSTRING type,
        HSTRING keySystem,
        enum __x_ABI_CWindows_CMedia_CProtection_CProtectionCapabilityResult* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CIProtectionCapabilitiesVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CIProtectionCapabilities
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CIProtectionCapabilitiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CIProtectionCapabilities;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CIProtectionCapabilities_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Items)(__x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformation* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CProtection__CRevocationAndRenewalItem** items);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformationVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformation
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformation;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalInformation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Reasons)(__x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem* This,
        enum __x_ABI_CWindows_CMedia_CProtection_CRevocationAndRenewalReasons* reasons);
    HRESULT (STDMETHODCALLTYPE* get_HeaderHash)(__x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_PublicKeyHash)(__x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem* This,
        HSTRING* name);
    HRESULT (STDMETHODCALLTYPE* get_RenewalId)(__x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItemVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CIRevocationAndRenewalItem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Request)(__x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs* This,
        __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest** value);
    HRESULT (STDMETHODCALLTYPE* get_Completion)(__x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs* This,
        __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceCompletion** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MediaPlaybackItem)(__x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs2* This,
        __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlaybackItem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs2Vtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CIServiceRequestedEventArgs2_INTERFACE_DEFINED__) */
    
