// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgs __x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgs;

#endif // ____x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CUI_CInput_CICameraEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CUI_CInput_CICameraEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CUI_CInput_CICameraEventArgs __x_ABI_CWindows_CPhone_CUI_CInput_CICameraEventArgs;

#endif // ____x_ABI_CWindows_CPhone_CUI_CInput_CICameraEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics __x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics;

#endif // ____x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2 __x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2;

#endif // ____x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if !defined(____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CBackPressedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CBackPressedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CBackPressedEventArgs __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CBackPressedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CBackPressedEventArgs;

    typedef struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CBackPressedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CBackPressedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CBackPressedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CBackPressedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CBackPressedEventArgs* This,
        IInspectable* sender,
        __x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CBackPressedEventArgsVtbl;

    interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CBackPressedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CBackPressedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CBackPressedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CCameraEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CCameraEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CCameraEventArgs __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CCameraEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CCameraEventArgs;

    typedef struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CCameraEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CCameraEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CCameraEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CCameraEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CCameraEventArgs* This,
        IInspectable* sender,
        __x_ABI_CWindows_CPhone_CUI_CInput_CICameraEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CCameraEventArgsVtbl;

    interface __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CCameraEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CCameraEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CCameraEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Handled)(__x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgs* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_Handled)(__x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgs* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgsVtbl;

    interface __x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CPhone_CUI_CInput_CIBackPressedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CUI_CInput_CICameraEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CUI_CInput_CICameraEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CUI_CInput_CICameraEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CUI_CInput_CICameraEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CUI_CInput_CICameraEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CUI_CInput_CICameraEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CUI_CInput_CICameraEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CUI_CInput_CICameraEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CUI_CInput_CICameraEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CUI_CInput_CICameraEventArgsVtbl;

    interface __x_ABI_CWindows_CPhone_CUI_CInput_CICameraEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CUI_CInput_CICameraEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CUI_CInput_CICameraEventArgs;
#endif /* !defined(____x_ABI_CWindows_CPhone_CUI_CInput_CICameraEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_BackPressed)(__x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics* This,
        __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CBackPressedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BackPressed)(__x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStaticsVtbl;

    interface __x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics;
#endif /* !defined(____x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_CameraHalfPressed)(__x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2* This,
        __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CCameraEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CameraHalfPressed)(__x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_CameraPressed)(__x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2* This,
        __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CCameraEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CameraPressed)(__x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_CameraReleased)(__x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2* This,
        __x_ABI_C__FIEventHandler_1___x_ABI_CWindows__CPhone__CUI__CInput__CCameraEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CameraReleased)(__x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2Vtbl;

    interface __x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2;
#endif /* !defined(____x_ABI_CWindows_CPhone_CUI_CInput_CIHardwareButtonsStatics2_INTERFACE_DEFINED__) */
    
