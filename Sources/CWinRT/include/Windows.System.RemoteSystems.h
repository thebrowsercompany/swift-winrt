// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.AppService.h"
#include "Windows.Networking.h"
#include "Windows.Security.Credentials.h"
#include "Windows.System.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStatics __x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStatics;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem2 __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem2;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem3_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem3 __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem3;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem4_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem4 __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem4;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem5_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem5 __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem5;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem6_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem6_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem6 __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem6;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem6_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAddedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAddedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAddedEventArgs __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAddedEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAddedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp2 __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp2;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistration_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistration_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistration __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistration;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistration_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationStatics __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationStatics;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilter_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilter __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilter;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterFactory __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterFactory;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfo __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfo;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoStatics __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoStatics;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest2 __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest2;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest3_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest3 __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest3;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestFactory __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestFactory;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics2 __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics2;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilter_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilter __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilter;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterFactory __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterFactory;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemEnumerationCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemEnumerationCompletedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemEnumerationCompletedEventArgs __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemEnumerationCompletedEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemEnumerationCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemFilter_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemFilter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemFilter __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemFilter;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemFilter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilter_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilter __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilter;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterFactory __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterFactory;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2 __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemRemovedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemRemovedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemRemovedEventArgs __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemRemovedEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemRemovedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionAddedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionAddedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionAddedEventArgs __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionAddedEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionAddedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerFactory __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerFactory;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResult __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResult;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionDisconnectedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionDisconnectedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionDisconnectedEventArgs __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionDisconnectedEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionDisconnectedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitation_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitation __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitation;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListener_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListener_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListener __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListener;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListener_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationReceivedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationReceivedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationReceivedEventArgs __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationReceivedEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationReceivedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequest __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequest;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgs __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResult __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResult;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelFactory __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelFactory;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptions_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptions_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptions __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptions;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptions_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantAddedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantAddedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantAddedEventArgs __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantAddedEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantAddedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantRemovedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantRemovedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantRemovedEventArgs __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantRemovedEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantRemovedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionRemovedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionRemovedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionRemovedEventArgs __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionRemovedEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionRemovedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionStatics __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionStatics;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionUpdatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionUpdatedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionUpdatedEventArgs __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionUpdatedEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionUpdatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgs __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics2 __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics2;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics3 __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics3;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilter_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilter __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilter;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterFactory __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterFactory;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemUpdatedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemUpdatedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemUpdatedEventArgs __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemUpdatedEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemUpdatedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2 __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher3_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher3 __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher3;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherErrorOccurredEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherErrorOccurredEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherErrorOccurredEventArgs __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherErrorOccurredEventArgs;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherErrorOccurredEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilter_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilter_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilter __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilter;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilter_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterFactory __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterFactory;

#endif // ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterFactory_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemAccessStatus __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemAccessStatus;

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus* This,
        enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemAccessStatus* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatusVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatusVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatusVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatusVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        HSTRING* result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CNetworking_CIHostName_FWD_DEFINED__
#define ____x_ABI_CWindows_CNetworking_CIHostName_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CNetworking_CIHostName __x_ABI_CWindows_CNetworking_CIHostName;

#endif // ____x_ABI_CWindows_CNetworking_CIHostName_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CHostName_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CHostName_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CHostName __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CHostName;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CHostName;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CHostNameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CHostName* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CHostName* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CHostName* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CHostName* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CHostName* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CHostName* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CHostName* This,
        __x_ABI_CWindows_CNetworking_CIHostName** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CHostName* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CHostName* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CHostName* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CNetworking_CIHostName** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CHostNameVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CHostName
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CHostNameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CHostName_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CHostName_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CHostName_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CHostName __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CHostName;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CHostName;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CHostNameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CHostName* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CHostName* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CHostName* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CHostName* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CHostName* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CHostName* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CHostName* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CNetworking__CHostName** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CHostNameVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CHostName
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CHostNameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CNetworking__CHostName_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemFilter** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemFilter** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilterVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilterVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilterVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAppVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAppVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAppVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAppVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAppVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAppVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING __x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** first,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMap_2_HSTRING_HSTRING __x_ABI_C__FIMap_2_HSTRING_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMap_2_HSTRING_HSTRING;

    typedef struct __x_ABI_C__FIMap_2_HSTRING_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* Insert)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key,
        HSTRING value,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Remove)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This,
        HSTRING key);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIMap_2_HSTRING_HSTRING* This);

        END_INTERFACE
    } __x_ABI_C__FIMap_2_HSTRING_HSTRINGVtbl;

    interface __x_ABI_C__FIMap_2_HSTRING_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIMap_2_HSTRING_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CHostName_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CHostName_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CHostName __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CHostName;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CHostName;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CHostNameVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CHostName* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CHostName* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CHostName* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CHostName* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CHostName* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CHostName* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CHostName* This,
        UINT32 index,
        __x_ABI_CWindows_CNetworking_CIHostName** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CHostName* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CHostName* This,
        __x_ABI_CWindows_CNetworking_CIHostName* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CHostName* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CNetworking_CIHostName** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CHostNameVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CHostName
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CHostNameVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CHostName_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAppVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This,
        UINT32 index,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAppVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAppVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSession___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionDisconnectedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSession___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionDisconnectedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSession___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionDisconnectedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSession___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionDisconnectedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSession___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionDisconnectedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSession___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionDisconnectedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSession___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionDisconnectedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSession___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionDisconnectedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSession___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionDisconnectedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSession___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionDisconnectedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession* sender,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionDisconnectedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSession___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionDisconnectedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSession___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionDisconnectedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSession___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionDisconnectedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSession___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionDisconnectedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionController___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionController___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinRequestedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionController___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinRequestedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionController___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinRequestedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionController___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinRequestedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionController___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionController___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionController___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionController___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionController___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinRequestedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController* sender,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionController___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinRequestedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionController___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionController___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinRequestedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionController___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinRequestedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationListener___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationListener___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationReceivedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationListener___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationReceivedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationListener___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationReceivedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationListener___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationReceivedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationListener___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationListener___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationListener___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationListener___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationListener___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationReceivedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListener* sender,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationReceivedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationListener___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationReceivedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationListener___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationListener___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationReceivedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationListener___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationReceivedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionMessageChannel___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionValueSetReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionMessageChannel___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionValueSetReceivedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionMessageChannel___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionValueSetReceivedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionMessageChannel___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionValueSetReceivedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionMessageChannel___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionValueSetReceivedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionMessageChannel___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionValueSetReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionMessageChannel___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionValueSetReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionMessageChannel___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionValueSetReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionMessageChannel___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionValueSetReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionMessageChannel___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionValueSetReceivedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel* sender,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionMessageChannel___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionValueSetReceivedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionMessageChannel___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionValueSetReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionMessageChannel___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionValueSetReceivedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionMessageChannel___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionValueSetReceivedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher_IInspectable* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantAddedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantAddedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantAddedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantAddedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantAddedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantAddedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantAddedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantAddedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantAddedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantAddedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher* sender,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantAddedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantAddedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantAddedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantAddedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantAddedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantRemovedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantRemovedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantRemovedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantRemovedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantRemovedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantRemovedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantRemovedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantRemovedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantRemovedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantRemovedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher* sender,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantRemovedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantRemovedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantRemovedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantRemovedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantRemovedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionAddedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionAddedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionAddedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionAddedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionAddedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionAddedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionAddedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionAddedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionAddedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionAddedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher* sender,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionAddedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionAddedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionAddedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionAddedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionAddedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionRemovedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionRemovedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionRemovedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionRemovedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionRemovedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionRemovedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionRemovedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionRemovedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionRemovedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionRemovedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher* sender,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionRemovedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionRemovedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionRemovedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionRemovedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionRemovedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionUpdatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionUpdatedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionUpdatedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionUpdatedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionUpdatedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionUpdatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionUpdatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionUpdatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionUpdatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionUpdatedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher* sender,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionUpdatedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionUpdatedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionUpdatedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionUpdatedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionUpdatedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAddedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAddedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAddedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAddedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAddedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAddedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAddedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAddedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAddedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAddedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher* sender,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAddedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAddedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAddedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAddedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAddedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemEnumerationCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemEnumerationCompletedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemEnumerationCompletedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemEnumerationCompletedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemEnumerationCompletedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemEnumerationCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemEnumerationCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemEnumerationCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemEnumerationCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemEnumerationCompletedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher* sender,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemEnumerationCompletedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemEnumerationCompletedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemEnumerationCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemEnumerationCompletedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemEnumerationCompletedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemRemovedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemRemovedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemRemovedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemRemovedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemRemovedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemRemovedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemRemovedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemRemovedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemRemovedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemRemovedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher* sender,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemRemovedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemRemovedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemRemovedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemRemovedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemRemovedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemUpdatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemUpdatedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemUpdatedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemUpdatedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemUpdatedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemUpdatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemUpdatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemUpdatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemUpdatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemUpdatedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher* sender,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemUpdatedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemUpdatedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemUpdatedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemUpdatedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemUpdatedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcherErrorOccurredEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcherErrorOccurredEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcherErrorOccurredEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcherErrorOccurredEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcherErrorOccurredEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcherErrorOccurredEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcherErrorOccurredEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcherErrorOccurredEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcherErrorOccurredEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcherErrorOccurredEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher* sender,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherErrorOccurredEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcherErrorOccurredEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcherErrorOccurredEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcherErrorOccurredEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcherErrorOccurredEventArgs_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection_FWD_DEFINED__
#define ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection;

#endif // ____x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIDeferral __x_ABI_CWindows_CFoundation_CIDeferral;

#endif // ____x_ABI_CWindows_CFoundation_CIDeferral_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIClosable __x_ABI_CWindows_CFoundation_CIClosable;

#endif // ____x_ABI_CWindows_CFoundation_CIClosable_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSecurity_CCredentials_CIWebAccount_FWD_DEFINED__
#define ____x_ABI_CWindows_CSecurity_CCredentials_CIWebAccount_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSecurity_CCredentials_CIWebAccount __x_ABI_CWindows_CSecurity_CCredentials_CIWebAccount;

#endif // ____x_ABI_CWindows_CSecurity_CCredentials_CIWebAccount_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CIUser __x_ABI_CWindows_CSystem_CIUser;

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemAuthorizationKind __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemAuthorizationKind;

typedef enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemDiscoveryType __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemDiscoveryType;

typedef enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemPlatform __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemPlatform;

typedef enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionCreationStatus __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionCreationStatus;

typedef enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionDisconnectedReason __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionDisconnectedReason;

typedef enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionJoinStatus __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionJoinStatus;

typedef enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionMessageChannelReliability __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionMessageChannelReliability;

typedef enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionParticipantWatcherStatus __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionParticipantWatcherStatus;

typedef enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionWatcherStatus __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionWatcherStatus;

typedef enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemStatus __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemStatus;

typedef enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemStatusType __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemStatusType;

typedef enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemWatcherError __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemWatcherError;

enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemAccessStatus
    {
        __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemAccessStatus_Unspecified = 0,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemAccessStatus_Allowed = 1,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemAccessStatus_DeniedByUser = 2,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemAccessStatus_DeniedBySystem = 3,
};

enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemAuthorizationKind
    {
        __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemAuthorizationKind_SameUser = 0,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemAuthorizationKind_Anonymous = 1,
};

enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemDiscoveryType
    {
        __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemDiscoveryType_Any = 0,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemDiscoveryType_Proximal = 1,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemDiscoveryType_Cloud = 2,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemDiscoveryType_SpatiallyProximal = 3,
};

enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemPlatform
    {
        __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemPlatform_Unknown = 0,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemPlatform_Windows = 1,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemPlatform_Android = 2,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemPlatform_Ios = 3,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemPlatform_Linux = 4,
};

enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionCreationStatus
    {
        __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionCreationStatus_Success = 0,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionCreationStatus_SessionLimitsExceeded = 1,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionCreationStatus_OperationAborted = 2,
};

enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionDisconnectedReason
    {
        __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionDisconnectedReason_SessionUnavailable = 0,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionDisconnectedReason_RemovedByController = 1,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionDisconnectedReason_SessionClosed = 2,
};

enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionJoinStatus
    {
        __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionJoinStatus_Success = 0,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionJoinStatus_SessionLimitsExceeded = 1,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionJoinStatus_OperationAborted = 2,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionJoinStatus_SessionUnavailable = 3,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionJoinStatus_RejectedByController = 4,
};

enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionMessageChannelReliability
    {
        __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionMessageChannelReliability_Reliable = 0,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionMessageChannelReliability_Unreliable = 1,
};

enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionParticipantWatcherStatus
    {
        __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionParticipantWatcherStatus_Created = 0,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionParticipantWatcherStatus_Started = 1,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionParticipantWatcherStatus_EnumerationCompleted = 2,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionParticipantWatcherStatus_Stopping = 3,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionParticipantWatcherStatus_Stopped = 4,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionParticipantWatcherStatus_Aborted = 5,
};

enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionWatcherStatus
    {
        __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionWatcherStatus_Created = 0,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionWatcherStatus_Started = 1,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionWatcherStatus_EnumerationCompleted = 2,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionWatcherStatus_Stopping = 3,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionWatcherStatus_Stopped = 4,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionWatcherStatus_Aborted = 5,
};

enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemStatus
    {
        __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemStatus_Unavailable = 0,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemStatus_DiscoveringAvailability = 1,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemStatus_Available = 2,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemStatus_Unknown = 3,
};

enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemStatusType
    {
        __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemStatusType_Any = 0,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemStatusType_Available = 1,
};

enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemWatcherError
    {
        __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemWatcherError_Unknown = 0,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemWatcherError_InternetNotAvailable = 1,
    __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemWatcherError_AuthenticationError = 2,
};

#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AppService)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_LaunchUri)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_RemoteSession)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_SpatialEntity)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStatics* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStaticsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIKnownRemoteSystemCapabilitiesStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Kind)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem* This,
        enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_IsAvailableByProximity)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsAvailableBySpatialProximity)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* GetCapabilitySupportedAsync)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem2* This,
        HSTRING capabilityName,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem2Vtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem2
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ManufacturerDisplayName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem3* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ModelDisplayName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem3* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem3Vtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem3
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem3;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Platform)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem4* This,
        enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemPlatform* value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem4Vtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem4
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem4;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Apps)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem5* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemApp** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem5Vtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem5
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem5;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem6_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem6_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem6Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem6* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem6* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem6* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem6* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem6* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem6* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem6* This,
        __x_ABI_CWindows_CSystem_CIUser** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem6Vtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem6
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem6Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem6;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem6_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAddedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAddedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAddedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAddedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAddedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAddedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAddedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAddedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAddedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RemoteSystem)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAddedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAddedEventArgsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAddedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAddedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAddedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAddedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_IsAvailableByProximity)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsAvailableBySpatialProximity)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_Attributes)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp* This,
        __x_ABI_C__FIMapView_2_HSTRING_HSTRING** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp2* This,
        __x_ABI_CWindows_CSystem_CIUser** value);
    HRESULT (STDMETHODCALLTYPE* get_ConnectionToken)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp2* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp2Vtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp2
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistration_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistration_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistration* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistration* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistration* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistration* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistration* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistration* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistration* This,
        __x_ABI_CWindows_CSystem_CIUser** value);
    HRESULT (STDMETHODCALLTYPE* get_Attributes)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistration* This,
        __x_ABI_C__FIMap_2_HSTRING_HSTRING** value);
    HRESULT (STDMETHODCALLTYPE* SaveAsync)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistration* This,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistration
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistration;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistration_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefault)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationStatics* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistration** result);
    HRESULT (STDMETHODCALLTYPE* GetForUser)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationStatics* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistration** result);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationStaticsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAppRegistrationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RemoteSystemAuthorizationKind)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilter* This,
        enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemAuthorizationKind* value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilter
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilter;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterFactory* This,
        enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemAuthorizationKind remoteSystemAuthorizationKind,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilter** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterFactoryVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterFactory;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemAuthorizationKindFilterFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsProximal)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfo* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfo;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* TryCreateFromAppServiceConnection)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoStatics* This,
        __x_ABI_CWindows_CApplicationModel_CAppService_CIAppServiceConnection* connection,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfo** result);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoStaticsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionInfoStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RemoteSystem)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RemoteSystemApp)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest2* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest2Vtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest2
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ConnectionToken)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest3* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest3Vtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest3
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest3;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestFactory* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem* remoteSystem,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestFactoryVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestFactory;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateForApp)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemApp* remoteSystemApp,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest** result);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStaticsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateFromConnectionToken)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics2* This,
        HSTRING connectionToken,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest** result);
    HRESULT (STDMETHODCALLTYPE* CreateFromConnectionTokenForUser)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics2* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        HSTRING connectionToken,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequest** result);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics2Vtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemConnectionRequestStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RemoteSystemDiscoveryType)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilter* This,
        enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemDiscoveryType* value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilter
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilter;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterFactory* This,
        enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemDiscoveryType discoveryType,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilter** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterFactoryVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterFactory;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemDiscoveryTypeFilterFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemEnumerationCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemEnumerationCompletedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemEnumerationCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemEnumerationCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemEnumerationCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemEnumerationCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemEnumerationCompletedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemEnumerationCompletedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemEnumerationCompletedEventArgs* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemEnumerationCompletedEventArgsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemEnumerationCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemEnumerationCompletedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemEnumerationCompletedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemEnumerationCompletedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemFilter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemFilter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemFilterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemFilter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemFilter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemFilter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemFilter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemFilter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemFilter* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemFilterVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemFilter
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemFilterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemFilter;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemFilter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RemoteSystemKinds)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilter* This,
        __x_ABI_C__FIVectorView_1_HSTRING** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilter
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilter;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterFactory* This,
        __x_ABI_C__FIIterable_1_HSTRING* remoteSystemKinds,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilter** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterFactoryVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterFactory;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindFilterFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Phone)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Hub)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Holographic)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Desktop)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Xbox)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStaticsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Iot)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Tablet)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Laptop)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2Vtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemKindStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemRemovedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemRemovedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemRemovedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemRemovedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemRemovedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemRemovedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemRemovedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemRemovedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemRemovedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RemoteSystemId)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemRemovedEventArgs* This,
        HSTRING* value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemRemovedEventArgsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemRemovedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemRemovedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemRemovedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemRemovedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Id)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ControllerDisplayName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* add_Disconnected)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSession___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionDisconnectedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Disconnected)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* CreateParticipantWatcher)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher** result);
    HRESULT (STDMETHODCALLTYPE* SendInvitationAsync)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem* invitee,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionAddedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionAddedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionAddedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionAddedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionAddedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionAddedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionAddedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionAddedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionAddedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SessionInfo)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionAddedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionAddedEventArgsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionAddedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionAddedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionAddedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionAddedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_JoinRequested)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionController___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinRequestedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_JoinRequested)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* RemoveParticipantAsync)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant* pParticipant,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* CreateSessionAsync)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionCreationResult** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateController)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerFactory* This,
        HSTRING displayName,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController** value);
    HRESULT (STDMETHODCALLTYPE* CreateControllerWithSessionOptions)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerFactory* This,
        HSTRING displayName,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptions* options,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionController** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerFactoryVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerFactory;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionControllerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResult* This,
        enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionCreationStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_Session)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResult* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResultVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResult;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionCreationResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionDisconnectedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionDisconnectedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionDisconnectedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionDisconnectedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionDisconnectedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionDisconnectedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionDisconnectedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionDisconnectedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionDisconnectedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Reason)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionDisconnectedEventArgs* This,
        enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionDisconnectedReason* value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionDisconnectedEventArgsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionDisconnectedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionDisconnectedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionDisconnectedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionDisconnectedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ControllerDisplayName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* JoinAsync)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionJoinResult** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfoVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Sender)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitation* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem** value);
    HRESULT (STDMETHODCALLTYPE* get_SessionInfo)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitation* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitation
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitation;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListener_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListener_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListenerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListener* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListener* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListener* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListener* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListener* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListener* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_InvitationReceived)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListener* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationListener___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionInvitationReceivedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_InvitationReceived)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListener* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListenerVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListener
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListenerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListener;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationListener_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationReceivedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationReceivedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationReceivedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationReceivedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Invitation)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationReceivedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitation** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationReceivedEventArgsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationReceivedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationReceivedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInvitationReceivedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Participant)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequest* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant** value);
    HRESULT (STDMETHODCALLTYPE* Accept)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequest* This);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequest;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_JoinRequest)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequest** value);
    HRESULT (STDMETHODCALLTYPE* GetDeferral)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CIDeferral** result);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinRequestedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResult* This,
        enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionJoinStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_Session)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResult* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResultVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResult;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionJoinResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Session)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession** value);
    HRESULT (STDMETHODCALLTYPE* BroadcastValueSetAsync)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* messageData,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* SendValueSetAsync)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* messageData,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant* participant,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* SendValueSetToParticipantsAsync)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* messageData,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipant* participants,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);
    HRESULT (STDMETHODCALLTYPE* add_ValueSetReceived)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionMessageChannel___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionValueSetReceivedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ValueSetReceived)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelFactory* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession* session,
        HSTRING channelName,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel** value);
    HRESULT (STDMETHODCALLTYPE* CreateWithReliability)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelFactory* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSession* session,
        HSTRING channelName,
        enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionMessageChannelReliability reliability,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannel** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelFactoryVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelFactory;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionMessageChannelFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptions_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptions_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptionsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptions* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptions* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptions* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptions* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptions* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptions* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsInviteOnly)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptions* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* put_IsInviteOnly)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptions* This,
        boolean value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptionsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptions
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptionsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptions;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionOptions_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RemoteSystem)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem** value);
    HRESULT (STDMETHODCALLTYPE* GetHostNames)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CNetworking__CHostName** result);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantAddedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantAddedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantAddedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantAddedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantAddedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantAddedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantAddedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantAddedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantAddedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Participant)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantAddedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantAddedEventArgsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantAddedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantAddedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantAddedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantAddedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantRemovedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantRemovedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantRemovedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantRemovedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantRemovedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantRemovedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantRemovedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantRemovedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantRemovedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Participant)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantRemovedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantRemovedEventArgsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantRemovedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantRemovedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantRemovedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantRemovedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcherVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Start)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher* This);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher* This);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher* This,
        enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionParticipantWatcherStatus* value);
    HRESULT (STDMETHODCALLTYPE* add_Added)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantAddedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Added)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Removed)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantRemovedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Removed)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_EnumerationCompleted)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionParticipantWatcher_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_EnumerationCompleted)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcherVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcherVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipantWatcher_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionRemovedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionRemovedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionRemovedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionRemovedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionRemovedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionRemovedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionRemovedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionRemovedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionRemovedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SessionInfo)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionRemovedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionRemovedEventArgsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionRemovedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionRemovedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionRemovedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionRemovedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateWatcher)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionStatics* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher** result);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionStaticsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionUpdatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionUpdatedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionUpdatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionUpdatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionUpdatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionUpdatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionUpdatedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionUpdatedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionUpdatedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SessionInfo)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionUpdatedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionInfo** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionUpdatedEventArgsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionUpdatedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionUpdatedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionUpdatedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionUpdatedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Sender)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionParticipant** value);
    HRESULT (STDMETHODCALLTYPE* get_Message)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgs* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionValueSetReceivedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcherVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Start)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher* This);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher* This);
    HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher* This,
        enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemSessionWatcherStatus* value);
    HRESULT (STDMETHODCALLTYPE* add_Added)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionAddedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Added)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Updated)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionUpdatedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Updated)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_Removed)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemSessionRemovedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_Removed)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcherVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcherVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemSessionWatcher_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* FindByHostNameAsync)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics* This,
        __x_ABI_CWindows_CNetworking_CIHostName* hostName,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystem** operation);
    HRESULT (STDMETHODCALLTYPE* CreateWatcher)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher** result);
    HRESULT (STDMETHODCALLTYPE* CreateWatcherWithFilters)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics* This,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter* filters,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher** result);
    HRESULT (STDMETHODCALLTYPE* RequestAccessAsync)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAccessStatus** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStaticsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* IsAuthorizationKindEnabled)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics2* This,
        enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemAuthorizationKind kind,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics2Vtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateWatcherForUser)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics3* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher** result);
    HRESULT (STDMETHODCALLTYPE* CreateWatcherWithFiltersForUser)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics3* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CSystem__CRemoteSystems__CIRemoteSystemFilter* filters,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher** result);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics3Vtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics3;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RemoteSystemStatusType)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilter* This,
        enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemStatusType* value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilter
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilter;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterFactory* This,
        enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemStatusType remoteSystemStatusType,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilter** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterFactoryVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterFactory;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemStatusTypeFilterFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemUpdatedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemUpdatedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemUpdatedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemUpdatedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemUpdatedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemUpdatedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemUpdatedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemUpdatedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemUpdatedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RemoteSystem)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemUpdatedEventArgs* This,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystem** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemUpdatedEventArgsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemUpdatedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemUpdatedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemUpdatedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemUpdatedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Start)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher* This);
    HRESULT (STDMETHODCALLTYPE* Stop)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher* This);
    HRESULT (STDMETHODCALLTYPE* add_RemoteSystemAdded)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemAddedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RemoteSystemAdded)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_RemoteSystemUpdated)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemUpdatedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RemoteSystemUpdated)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_RemoteSystemRemoved)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemRemovedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RemoteSystemRemoved)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_EnumerationCompleted)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemEnumerationCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_EnumerationCompleted)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ErrorOccurred)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcher___x_ABI_CWindows__CSystem__CRemoteSystems__CRemoteSystemWatcherErrorOccurredEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ErrorOccurred)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2Vtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher3* This,
        __x_ABI_CWindows_CSystem_CIUser** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher3Vtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher3
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher3;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcher3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherErrorOccurredEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherErrorOccurredEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherErrorOccurredEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherErrorOccurredEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherErrorOccurredEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherErrorOccurredEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherErrorOccurredEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherErrorOccurredEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherErrorOccurredEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Error)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherErrorOccurredEventArgs* This,
        enum __x_ABI_CWindows_CSystem_CRemoteSystems_CRemoteSystemWatcherError* value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherErrorOccurredEventArgsVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherErrorOccurredEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherErrorOccurredEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherErrorOccurredEventArgs;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWatcherErrorOccurredEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilter_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilter_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilter* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilter* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilter* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilter* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilter* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilter* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Account)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilter* This,
        __x_ABI_CWindows_CSecurity_CCredentials_CIWebAccount** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilter
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilter;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilter_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Create)(__x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterFactory* This,
        __x_ABI_CWindows_CSecurity_CCredentials_CIWebAccount* account,
        __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilter** value);

        END_INTERFACE
    } __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterFactoryVtbl;

    interface __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterFactory;
#endif /* !defined(____x_ABI_CWindows_CSystem_CRemoteSystems_CIRemoteSystemWebAccountFilterFactory_INTERFACE_DEFINED__) */
    
