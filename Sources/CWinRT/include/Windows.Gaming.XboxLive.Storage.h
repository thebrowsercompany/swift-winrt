// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Storage.Streams.h"
#include "Windows.System.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResult __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResult;

#endif // ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo;

#endif // ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResult __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResult;

#endif // ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQuery_FWD_DEFINED__
#define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQuery_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQuery __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQuery;

#endif // ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQuery_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer_FWD_DEFINED__
#define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer;

#endif // ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo;

#endif // ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResult __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResult;

#endif // ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQuery_FWD_DEFINED__
#define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQuery_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQuery __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQuery;

#endif // ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQuery_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveOperationResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveOperationResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveOperationResult __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveOperationResult;

#endif // ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveOperationResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider_FWD_DEFINED__
#define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider;

#endif // ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResult __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResult;

#endif // ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderStatics __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderStatics;

#endif // ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___z__zint64 __x_ABI_C__FIAsyncOperationCompletedHandler_1___z__zint64;

#if !defined(____x_ABI_C__FIAsyncOperation_1___z__zint64_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___z__zint64_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___z__zint64 __x_ABI_C__FIAsyncOperation_1___z__zint64;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___z__zint64;

    typedef struct __x_ABI_C__FIAsyncOperation_1___z__zint64Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___z__zint64* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___z__zint64* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___z__zint64* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___z__zint64* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___z__zint64* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___z__zint64* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___z__zint64* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___z__zint64* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___z__zint64* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___z__zint64** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___z__zint64* This,
        INT64* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___z__zint64Vtbl;

    interface __x_ABI_C__FIAsyncOperation_1___z__zint64
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___z__zint64Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___z__zint64_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___z__zint64_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___z__zint64_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___z__zint64 __x_ABI_C__FIAsyncOperationCompletedHandler_1___z__zint64;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___z__zint64;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___z__zint64Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___z__zint64* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___z__zint64* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___z__zint64* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___z__zint64* This,
        __x_ABI_C__FIAsyncOperation_1___z__zint64* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___z__zint64Vtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___z__zint64
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___z__zint64Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___z__zint64_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32 __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32;

#if !defined(____x_ABI_C__FIAsyncOperation_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_UINT32 __x_ABI_C__FIAsyncOperation_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_UINT32;

    typedef struct __x_ABI_C__FIAsyncOperation_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_UINT32* This,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_UINT32Vtbl;

    interface __x_ABI_C__FIAsyncOperation_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_UINT32_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32 __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32* This,
        __x_ABI_C__FIAsyncOperation_1_UINT32* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32Vtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32Vtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_UINT32_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult* This,
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult* This,
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult* This,
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult* This,
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveOperationResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult* This,
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIBuffer __x_ABI_CWindows_CStorage_CStreams_CIBuffer;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIBuffer_FWD_DEFINED__

#if !defined(____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

    typedef struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Key)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** result);

        END_INTERFACE
    } __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl;

    interface __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer
    {
        CONST_VTBL struct __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        UINT32 itemsLength,
        __x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        __x_ABI_C__FIIterator_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_C__FIKeyValuePair_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This,
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This,
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

#if !defined(____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer;

    typedef struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Lookup)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        HSTRING key,
        __x_ABI_CWindows_CStorage_CStreams_CIBuffer** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* HasKey)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        HSTRING key,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* Split)(__x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer** first,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer** second);

        END_INTERFACE
    } __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl;

    interface __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer
    {
        CONST_VTBL struct __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBufferVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This,
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This,
        UINT32 index,
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This,
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
#define ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CSystem_CIUser __x_ABI_CWindows_CSystem_CIUser;

#endif // ____x_ABI_CWindows_CSystem_CIUser_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus;

enum __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus
    {
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus_Ok = 0,
    __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus_Abort = -2147467260,
    __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus_InvalidContainerName = -2138898431,
    __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus_NoAccess = -2138898430,
    __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus_OutOfLocalStorage = -2138898429,
    __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus_UserCanceled = -2138898428,
    __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus_UpdateTooBig = -2138898427,
    __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus_QuotaExceeded = -2138898426,
    __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus_ProvidedBufferTooSmall = -2138898425,
    __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus_BlobNotFound = -2138898424,
    __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus_NoXboxLiveInfo = -2138898423,
    __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus_ContainerNotInSync = -2138898422,
    __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus_ContainerSyncFailed = -2138898421,
    __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus_UserHasNoXboxLiveInfo = -2138898420,
    __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus_ObjectExpired = -2138898419,
};

#if !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResult* This,
        enum __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResult* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResultVtbl;

    interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResult;
#endif /* !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobGetResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoVtbl;

    interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo;
#endif /* !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResult* This,
        enum __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResult* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfo** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResultVtbl;

    interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResult;
#endif /* !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoGetResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQuery_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQuery_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQueryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQuery* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQuery* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQuery* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQuery* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQuery* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQuery* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetBlobInfoAsync)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQuery* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult** operation);
    HRESULT (STDMETHODCALLTYPE* GetBlobInfoWithIndexAndMaxAsync)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQuery* This,
        UINT32 startIndex,
        UINT32 maxNumberOfItems,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobInfoGetResult** operation);
    HRESULT (STDMETHODCALLTYPE* GetItemCountAsync)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQuery* This,
        __x_ABI_C__FIAsyncOperation_1_UINT32** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQueryVtbl;

    interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQuery
    {
        CONST_VTBL struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQueryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQuery;
#endif /* !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQuery_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_Provider)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer* This,
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider** value);
    HRESULT (STDMETHODCALLTYPE* SubmitUpdatesAsync)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* blobsToWrite,
        __x_ABI_C__FIIterable_1_HSTRING* blobsToDelete,
        HSTRING displayName,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult** operation);
    HRESULT (STDMETHODCALLTYPE* ReadAsync)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer* This,
        __x_ABI_C__FIMapView_2_HSTRING___x_ABI_CWindows__CStorage__CStreams__CIBuffer* blobsToRead,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult** action);
    HRESULT (STDMETHODCALLTYPE* GetAsync)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer* This,
        __x_ABI_C__FIIterable_1_HSTRING* blobsToRead,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveBlobGetResult** operation);
    HRESULT (STDMETHODCALLTYPE* SubmitPropertySetUpdatesAsync)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* blobsToWrite,
        __x_ABI_C__FIIterable_1_HSTRING* blobsToDelete,
        HSTRING displayName,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult** operation);
    HRESULT (STDMETHODCALLTYPE* CreateBlobInfoQuery)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer* This,
        HSTRING blobNamePrefix,
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveBlobInfoQuery** query);

        END_INTERFACE
    } __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerVtbl;

    interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer
    {
        CONST_VTBL struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer;
#endif /* !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Name)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_TotalSize)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_DisplayName)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_LastModifiedTime)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_NeedsSync)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoVtbl;

    interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo;
#endif /* !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResult* This,
        enum __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResult* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfo** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResultVtbl;

    interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResult;
#endif /* !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoGetResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQuery_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQuery_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQueryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQuery* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQuery* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQuery* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQuery* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQuery* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQuery* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetContainerInfoAsync)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQuery* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult** operation);
    HRESULT (STDMETHODCALLTYPE* GetContainerInfoWithIndexAndMaxAsync)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQuery* This,
        UINT32 startIndex,
        UINT32 maxNumberOfItems,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveContainerInfoGetResult** operation);
    HRESULT (STDMETHODCALLTYPE* GetItemCountAsync)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQuery* This,
        __x_ABI_C__FIAsyncOperation_1_UINT32** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQueryVtbl;

    interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQuery
    {
        CONST_VTBL struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQueryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQuery;
#endif /* !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQuery_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveOperationResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveOperationResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveOperationResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveOperationResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveOperationResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveOperationResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveOperationResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveOperationResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveOperationResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveOperationResult* This,
        enum __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveOperationResultVtbl;

    interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveOperationResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveOperationResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveOperationResult;
#endif /* !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveOperationResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_User)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider* This,
        __x_ABI_CWindows_CSystem_CIUser** value);
    HRESULT (STDMETHODCALLTYPE* CreateContainer)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider* This,
        HSTRING name,
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainer** result);
    HRESULT (STDMETHODCALLTYPE* DeleteContainerAsync)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider* This,
        HSTRING name,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveOperationResult** action);
    HRESULT (STDMETHODCALLTYPE* CreateContainerInfoQuery)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider* This,
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQuery** query);
    HRESULT (STDMETHODCALLTYPE* CreateContainerInfoQueryWithName)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider* This,
        HSTRING containerNamePrefix,
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveContainerInfoQuery** query);
    HRESULT (STDMETHODCALLTYPE* GetRemainingBytesInQuotaAsync)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider* This,
        __x_ABI_C__FIAsyncOperation_1___z__zint64** operation);
    HRESULT (STDMETHODCALLTYPE* get_ContainersChangedSinceLastSync)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider* This,
        __x_ABI_C__FIVectorView_1_HSTRING** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderVtbl;

    interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider
    {
        CONST_VTBL struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider;
#endif /* !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Status)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResult* This,
        enum __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CGameSaveErrorStatus* value);
    HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResult* This,
        __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProvider** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResultVtbl;

    interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResult;
#endif /* !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderGetResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForUserAsync)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderStatics* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        HSTRING serviceConfigId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult** operation);
    HRESULT (STDMETHODCALLTYPE* GetSyncOnDemandForUserAsync)(__x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderStatics* This,
        __x_ABI_CWindows_CSystem_CIUser* user,
        HSTRING serviceConfigId,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CGaming__CXboxLive__CStorage__CGameSaveProviderGetResult** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderStaticsVtbl;

    interface __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderStatics;
#endif /* !defined(____x_ABI_CWindows_CGaming_CXboxLive_CStorage_CIGameSaveProviderStatics_INTERFACE_DEFINED__) */
    
