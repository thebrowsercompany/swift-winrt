// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Media.Core.h"
#include "Windows.Media.Protection.h"
#include "Windows.Storage.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientFactory __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientFactory;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgs __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataFactory __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataFactory;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchCompletedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchCompletedEventArgs __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchCompletedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorFactory __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorFactory;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchResult __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchResult;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDProximityDetectionCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDProximityDetectionCompletedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDProximityDetectionCompletedEventArgs __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDProximityDetectionCompletedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDProximityDetectionCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgs __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgs;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDSendResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDSendResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDSendResult __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDSendResult;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDSendResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStartResult_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStartResult_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStartResult __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStartResult;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStartResult_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStorageFileHelper_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStorageFileHelper_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStorageFileHelper __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStorageFileHelper;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStorageFileHelper_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifier_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifier_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifier __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifier;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifier_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTCPMessengerFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTCPMessengerFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTCPMessengerFactory __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTCPMessengerFactory;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTCPMessengerFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader2 __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader2;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory2 __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory2;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentResolver_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentResolver_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentResolver __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentResolver;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentResolver_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainIterableFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainIterableFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainIterableFactory __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainIterableFactory;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainIterableFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequest __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequest;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyITADataGenerator_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyITADataGenerator_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyITADataGenerator __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyITADataGenerator;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyITADataGenerator_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyIndividualizationServiceRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyIndividualizationServiceRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyIndividualizationServiceRequest __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyIndividualizationServiceRequest;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyIndividualizationServiceRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2 __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest2 __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest2;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest3 __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest3;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseIterableFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseIterableFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseIterableFactory __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseIterableFactory;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseIterableFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseManagement_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseManagement_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseManagement __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseManagement;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseManagement_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession2 __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession2;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionFactory __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionFactory;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyMeteringReportServiceRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyMeteringReportServiceRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyMeteringReportServiceRequest __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyMeteringReportServiceRequest;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyMeteringReportServiceRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyRevocationServiceRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyRevocationServiceRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyRevocationServiceRequest __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyRevocationServiceRequest;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyRevocationServiceRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopIterableFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopIterableFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopIterableFactory __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopIterableFactory;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopIterableFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestFactory_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestFactory_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestFactory __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestFactory;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestFactory_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessage_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessage_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessage __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessage;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessage_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics2_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics2 __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics2;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics3_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics3 __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics3;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics4_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics4 __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics4;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5 __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDSendResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult_INTERFACE_DEFINED__
    
typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStartResult** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResultVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResultVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResultVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1_HSTRING __x_ABI_C__FIIterator_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1_HSTRING;

    typedef struct __x_ABI_C__FIIterator_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1_HSTRING* This,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1_HSTRING* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterator_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1_HSTRING __x_ABI_C__FIIterable_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1_HSTRING;

    typedef struct __x_ABI_C__FIIterable_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1_HSTRING* This,
        __x_ABI_C__FIIterator_1_HSTRING** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1_HSTRINGVtbl;

    interface __x_ABI_C__FIIterable_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1_HSTRING_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor;

#endif // ____x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor;

#endif // ____x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor_FWD_DEFINED__

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomainVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomainVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomainVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomainVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomainVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomainVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicenseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicenseVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicenseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicenseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicenseVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicenseVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest** result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequestVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequestVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequestVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequestVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1_HSTRING __x_ABI_C__FIVectorView_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1_HSTRING;

    typedef struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVectorView_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor** items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1_HSTRING __x_ABI_C__FIVector_1_HSTRING;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1_HSTRING;

    typedef struct __x_ABI_C__FIVector_1_HSTRINGVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1_HSTRING* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1_HSTRING* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1_HSTRING* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1_HSTRING* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1_HSTRING* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1_HSTRING* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1_HSTRING* This,
        __x_ABI_C__FIVectorView_1_HSTRING** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1_HSTRING* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1_HSTRING* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        HSTRING* items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1_HSTRING* This,
        UINT32 itemsLength,
        HSTRING* items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1_HSTRINGVtbl;

    interface __x_ABI_C__FIVector_1_HSTRING
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1_HSTRINGVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1_HSTRING_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCore_CIAudioStreamDescriptor** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor;

    typedef struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor** result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* GetView)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor** result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor* value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* SetAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor* value);
    HRESULT (STDMETHODCALLTYPE* InsertAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32 index,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAt)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32 index);
    HRESULT (STDMETHODCALLTYPE* Append)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor* value);
    HRESULT (STDMETHODCALLTYPE* RemoveAtEnd)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This);
    HRESULT (STDMETHODCALLTYPE* Clear)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor** items,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* ReplaceAll)(__x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* This,
        UINT32 itemsLength,
        __x_ABI_CWindows_CMedia_CCore_CIVideoStreamDescriptor** items);

        END_INTERFACE
    } __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl;

    interface __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor
    {
        CONST_VTBL struct __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptorVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CFoundation_CDateTime __x_ABI_CWindows_CFoundation_CDateTime;

#if !defined(____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime;

    typedef struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl;

    interface __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient_IInspectable* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDClosedCaptionDataReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDClosedCaptionDataReceivedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDClosedCaptionDataReceivedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDClosedCaptionDataReceivedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDClosedCaptionDataReceivedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDClosedCaptionDataReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDClosedCaptionDataReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDClosedCaptionDataReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDClosedCaptionDataReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDClosedCaptionDataReceivedEventArgs* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* sender,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDClosedCaptionDataReceivedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDClosedCaptionDataReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDClosedCaptionDataReceivedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDClosedCaptionDataReceivedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchCompletedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchCompletedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchCompletedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchCompletedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchCompletedEventArgs* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* sender,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchCompletedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchCompletedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchCompletedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchCompletedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDProximityDetectionCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDProximityDetectionCompletedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDProximityDetectionCompletedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDProximityDetectionCompletedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDProximityDetectionCompletedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDProximityDetectionCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDProximityDetectionCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDProximityDetectionCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDProximityDetectionCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDProximityDetectionCompletedEventArgs* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* sender,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDProximityDetectionCompletedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDProximityDetectionCompletedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDProximityDetectionCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDProximityDetectionCompletedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDProximityDetectionCompletedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDRegistrationCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDRegistrationCompletedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDRegistrationCompletedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDRegistrationCompletedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDRegistrationCompletedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDRegistrationCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDRegistrationCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDRegistrationCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDRegistrationCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDRegistrationCompletedEventArgs* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* sender,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDRegistrationCompletedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDRegistrationCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDRegistrationCompletedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDRegistrationCompletedEventArgs_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet;

#endif // ____x_ABI_CWindows_CFoundation_CCollections_CIPropertySet_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncAction __x_ABI_CWindows_CFoundation_CIAsyncAction;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncAction_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CTimeSpan __x_ABI_CWindows_CFoundation_CTimeSpan;

#ifndef ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIUriRuntimeClass __x_ABI_CWindows_CFoundation_CIUriRuntimeClass;

#endif // ____x_ABI_CWindows_CFoundation_CIUriRuntimeClass_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor;

#endif // ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample;

#endif // ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource;

#endif // ____x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionServiceRequest_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager;

#endif // ____x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CIStorageFile __x_ABI_CWindows_CStorage_CIStorageFile;

#endif // ____x_ABI_CWindows_CStorage_CIStorageFile_FWD_DEFINED__

typedef enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateFeature __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateFeature;

typedef enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificatePlatformID __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificatePlatformID;

typedef enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateType __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateType;

typedef enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDClosedCaptionFormat __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDClosedCaptionFormat;

typedef enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDContentIDType __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDContentIDType;

typedef enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDMediaStreamType __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDMediaStreamType;

typedef enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDProximityDetectionType __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDProximityDetectionType;

typedef enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyDecryptorSetup __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyDecryptorSetup;

typedef enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyEncryptionAlgorithm __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyEncryptionAlgorithm;

typedef enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyHardwareDRMFeatures __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyHardwareDRMFeatures;

typedef enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyITADataFormat __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyITADataFormat;

enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateFeature
    {
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateFeature_Transmitter = 1,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateFeature_Receiver = 2,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateFeature_SharedCertificate = 3,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateFeature_SecureClock = 4,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateFeature_AntiRollBackClock = 5,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateFeature_CRLS = 9,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateFeature_PlayReady3Features = 13,
};

enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificatePlatformID
    {
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificatePlatformID_Windows = 0,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificatePlatformID_OSX = 1,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificatePlatformID_WindowsOnARM = 2,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificatePlatformID_WindowsMobile7 = 5,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificatePlatformID_iOSOnARM = 6,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificatePlatformID_XBoxOnPPC = 7,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificatePlatformID_WindowsPhone8OnARM = 8,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificatePlatformID_WindowsPhone8OnX86 = 9,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificatePlatformID_XboxOne = 10,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificatePlatformID_AndroidOnARM = 11,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificatePlatformID_WindowsPhone81OnARM = 12,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificatePlatformID_WindowsPhone81OnX86 = 13,
};

enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateType
    {
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateType_Unknown = 0,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateType_PC = 1,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateType_Device = 2,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateType_Domain = 3,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateType_Issuer = 4,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateType_CrlSigner = 5,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateType_Service = 6,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateType_Silverlight = 7,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateType_Application = 8,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateType_Metering = 9,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateType_KeyFileSigner = 10,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateType_Server = 11,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateType_LicenseSigner = 12,
};

enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDClosedCaptionFormat
    {
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDClosedCaptionFormat_ATSC = 0,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDClosedCaptionFormat_SCTE20 = 1,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDClosedCaptionFormat_Unknown = 2,
};

enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDContentIDType
    {
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDContentIDType_KeyID = 1,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDContentIDType_PlayReadyObject = 2,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDContentIDType_Custom = 3,
};

enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDMediaStreamType
    {
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDMediaStreamType_Audio = 1,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDMediaStreamType_Video = 2,
};

enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDProximityDetectionType
    {
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDProximityDetectionType_UDP = 1,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDProximityDetectionType_TCP = 2,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDProximityDetectionType_TransportAgnostic = 4,
};

enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDStartAsyncOptions
    {
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDStartAsyncOptions_MutualAuthentication = 1,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDStartAsyncOptions_WaitForLicenseDescriptor = 2,
};

enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyDecryptorSetup
    {
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyDecryptorSetup_Uninitialized = 0,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyDecryptorSetup_OnDemand = 1,
};

enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyEncryptionAlgorithm
    {
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyEncryptionAlgorithm_Unprotected = 0,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyEncryptionAlgorithm_Aes128Ctr = 1,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyEncryptionAlgorithm_Cocktail = 4,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyEncryptionAlgorithm_Aes128Cbc = 5,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyEncryptionAlgorithm_Unspecified = 65535,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyEncryptionAlgorithm_Uninitialized = 2147483647,
};

enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyHardwareDRMFeatures
    {
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyHardwareDRMFeatures_HardwareDRM = 1,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyHardwareDRMFeatures_HEVC = 2,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyHardwareDRMFeatures_Aes128Cbc = 3,
};

enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyITADataFormat
    {
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyITADataFormat_SerializedProperties = 0,
    __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyITADataFormat_SerializedProperties_WithContentProtectionWrapper = 1,
};

#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* add_RegistrationCompleted)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDRegistrationCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_RegistrationCompleted)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ProximityDetectionCompleted)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDProximityDetectionCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ProximityDetectionCompleted)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_LicenseFetchCompleted)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchCompletedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LicenseFetchCompleted)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ReRegistrationNeeded)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ReRegistrationNeeded)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_ClosedCaptionDataReceived)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CNDClient___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDClosedCaptionDataReceivedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ClosedCaptionDataReceived)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* StartAsync)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* contentUrl,
        UINT32 startAsyncOptions,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData* registrationCustomData,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor* licenseFetchDescriptor,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDStartResult** result);
    HRESULT (STDMETHODCALLTYPE* LicenseFetchAsync)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor* licenseFetchDescriptor,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDLicenseFetchResult** result);
    HRESULT (STDMETHODCALLTYPE* ReRegistrationAsync)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData* registrationCustomData,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** result);
    HRESULT (STDMETHODCALLTYPE* Close)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient* This);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientFactory* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine* downloadEngine,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser* streamParser,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger* pMessenger,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClient** instance);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientFactoryVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientFactory;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClientFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ClosedCaptionDataFormat)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgs* This,
        enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDClosedCaptionFormat* ccForamt);
    HRESULT (STDMETHODCALLTYPE* get_PresentationTimestamp)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgs* This,
        INT64* presentationTimestamp);
    HRESULT (STDMETHODCALLTYPE* get_ClosedCaptionData)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgs* This,
        UINT32* ccDataBytesLength,
        BYTE** ccDataBytes);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDClosedCaptionDataReceivedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CustomDataTypeID)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData* This,
        UINT32* customDataTypeIDBytesLength,
        BYTE** customDataTypeIDBytes);
    HRESULT (STDMETHODCALLTYPE* get_CustomData)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData* This,
        UINT32* customDataBytesLength,
        BYTE** customDataBytes);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataFactory* This,
        UINT32 customDataTypeIDBytesLength,
        BYTE* customDataTypeIDBytes,
        UINT32 customDataBytesLength,
        BYTE* customDataBytes,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData** instance);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataFactoryVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataFactory;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomDataFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* Open)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* uri,
        UINT32 sessionIDBytesLength,
        BYTE* sessionIDBytes);
    HRESULT (STDMETHODCALLTYPE* Pause)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine* This);
    HRESULT (STDMETHODCALLTYPE* Resume)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine* This);
    HRESULT (STDMETHODCALLTYPE* Close)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine* This);
    HRESULT (STDMETHODCALLTYPE* Seek)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan startPosition);
    HRESULT (STDMETHODCALLTYPE* get_CanSeek)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine* This,
        boolean* canSeek);
    HRESULT (STDMETHODCALLTYPE* get_BufferFullMinThresholdInSamples)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine* This,
        UINT32* bufferFullMinThreshold);
    HRESULT (STDMETHODCALLTYPE* get_BufferFullMaxThresholdInSamples)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine* This,
        UINT32* bufferFullMaxThreshold);
    HRESULT (STDMETHODCALLTYPE* get_Notifier)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier** instance);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngine_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifierVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OnStreamOpened)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier* This);
    HRESULT (STDMETHODCALLTYPE* OnPlayReadyObjectReceived)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier* This,
        UINT32 dataBytesLength,
        BYTE* dataBytes);
    HRESULT (STDMETHODCALLTYPE* OnContentIDReceived)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor* licenseFetchDescriptor);
    HRESULT (STDMETHODCALLTYPE* OnDataReceived)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier* This,
        UINT32 dataBytesLength,
        BYTE* dataBytes,
        UINT32 bytesReceived);
    HRESULT (STDMETHODCALLTYPE* OnEndOfStream)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier* This);
    HRESULT (STDMETHODCALLTYPE* OnNetworkError)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier* This);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifierVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifierVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDDownloadEngineNotifier_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchCompletedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchCompletedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchCompletedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchCompletedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ResponseCustomData)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchCompletedEventArgs* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData** customData);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchCompletedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchCompletedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchCompletedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchCompletedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContentIDType)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor* This,
        enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDContentIDType* contentIDType);
    HRESULT (STDMETHODCALLTYPE* get_ContentID)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor* This,
        UINT32* contentIDBytesLength,
        BYTE** contentIDBytes);
    HRESULT (STDMETHODCALLTYPE* get_LicenseFetchChallengeCustomData)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData** licenseFetchChallengeCustomData);
    HRESULT (STDMETHODCALLTYPE* put_LicenseFetchChallengeCustomData)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData* licenseFetchChallengeCustomData);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorFactory* This,
        enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDContentIDType contentIDType,
        UINT32 contentIDBytesLength,
        BYTE* contentIDBytes,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData* licenseFetchChallengeCustomData,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor** instance);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorFactoryVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorFactory;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptorFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ResponseCustomData)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchResult* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData** customData);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchResultVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchResult;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessengerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* SendRegistrationRequestAsync)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger* This,
        UINT32 sessionIDBytesLength,
        BYTE* sessionIDBytes,
        UINT32 challengeDataBytesLength,
        BYTE* challengeDataBytes,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult** result);
    HRESULT (STDMETHODCALLTYPE* SendProximityDetectionStartAsync)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger* This,
        enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDProximityDetectionType pdType,
        UINT32 transmitterChannelBytesLength,
        BYTE* transmitterChannelBytes,
        UINT32 sessionIDBytesLength,
        BYTE* sessionIDBytes,
        UINT32 challengeDataBytesLength,
        BYTE* challengeDataBytes,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult** result);
    HRESULT (STDMETHODCALLTYPE* SendProximityDetectionResponseAsync)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger* This,
        enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDProximityDetectionType pdType,
        UINT32 transmitterChannelBytesLength,
        BYTE* transmitterChannelBytes,
        UINT32 sessionIDBytesLength,
        BYTE* sessionIDBytes,
        UINT32 responseDataBytesLength,
        BYTE* responseDataBytes,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult** result);
    HRESULT (STDMETHODCALLTYPE* SendLicenseFetchRequestAsync)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger* This,
        UINT32 sessionIDBytesLength,
        BYTE* sessionIDBytes,
        UINT32 challengeDataBytesLength,
        BYTE* challengeDataBytes,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CINDSendResult** result);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessengerVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessengerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDProximityDetectionCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDProximityDetectionCompletedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDProximityDetectionCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDProximityDetectionCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDProximityDetectionCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDProximityDetectionCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDProximityDetectionCompletedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDProximityDetectionCompletedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDProximityDetectionCompletedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ProximityDetectionRetryCount)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDProximityDetectionCompletedEventArgs* This,
        UINT32* retryCount);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDProximityDetectionCompletedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDProximityDetectionCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDProximityDetectionCompletedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDProximityDetectionCompletedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDProximityDetectionCompletedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ResponseCustomData)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgs* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDCustomData** customData);
    HRESULT (STDMETHODCALLTYPE* get_TransmitterProperties)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgs* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties** transmitterProperties);
    HRESULT (STDMETHODCALLTYPE* get_TransmitterCertificateAccepted)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgs* This,
        boolean* acceptpt);
    HRESULT (STDMETHODCALLTYPE* put_TransmitterCertificateAccepted)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgs* This,
        boolean accept);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgsVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDRegistrationCompletedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDSendResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDSendResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDSendResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDSendResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDSendResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDSendResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDSendResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDSendResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDSendResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Response)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDSendResult* This,
        UINT32* responseDataBytesLength,
        BYTE** responseDataBytes);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDSendResultVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDSendResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDSendResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDSendResult;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDSendResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStartResult_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStartResult_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStartResultVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStartResult* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStartResult* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStartResult* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStartResult* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStartResult* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStartResult* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MediaStreamSource)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStartResult* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSource** mediaStreamSource);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStartResultVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStartResult
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStartResultVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStartResult;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStartResult_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStorageFileHelper_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStorageFileHelper_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStorageFileHelperVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStorageFileHelper* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStorageFileHelper* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStorageFileHelper* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStorageFileHelper* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStorageFileHelper* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStorageFileHelper* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetFileURLs)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStorageFileHelper* This,
        __x_ABI_CWindows_CStorage_CIStorageFile* file,
        __x_ABI_C__FIVector_1_HSTRING** fileURLs);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStorageFileHelperVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStorageFileHelper
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStorageFileHelperVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStorageFileHelper;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStorageFileHelper_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ParseData)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser* This,
        UINT32 dataBytesLength,
        BYTE* dataBytes);
    HRESULT (STDMETHODCALLTYPE* GetStreamInformation)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor* descriptor,
        enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDMediaStreamType* streamType,
        UINT32* streamID);
    HRESULT (STDMETHODCALLTYPE* BeginOfStream)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser* This);
    HRESULT (STDMETHODCALLTYPE* EndOfStream)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser* This);
    HRESULT (STDMETHODCALLTYPE* get_Notifier)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifier** instance);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParser_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifier_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifier_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifierVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifier* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifier* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifier* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifier* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifier* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifier* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* OnContentIDReceived)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifier* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDLicenseFetchDescriptor* licenseFetchDescriptor);
    HRESULT (STDMETHODCALLTYPE* OnMediaStreamDescriptorCreated)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifier* This,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CAudioStreamDescriptor* audioStreamDescriptors,
        __x_ABI_C__FIVector_1___x_ABI_CWindows__CMedia__CCore__CVideoStreamDescriptor* videoStreamDescriptors);
    HRESULT (STDMETHODCALLTYPE* OnSampleParsed)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifier* This,
        UINT32 streamID,
        enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDMediaStreamType streamType,
        __x_ABI_CWindows_CMedia_CCore_CIMediaStreamSample* streamSample,
        INT64 pts,
        enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDClosedCaptionFormat ccFormat,
        UINT32 ccDataBytesLength,
        BYTE* ccDataBytes);
    HRESULT (STDMETHODCALLTYPE* OnBeginSetupDecryptor)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifier* This,
        __x_ABI_CWindows_CMedia_CCore_CIMediaStreamDescriptor* descriptor,
        GUID keyID,
        UINT32 proBytesLength,
        BYTE* proBytes);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifierVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifier
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifierVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifier;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDStreamParserNotifier_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTCPMessengerFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTCPMessengerFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTCPMessengerFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTCPMessengerFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTCPMessengerFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTCPMessengerFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTCPMessengerFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTCPMessengerFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTCPMessengerFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTCPMessengerFactory* This,
        HSTRING remoteHostName,
        UINT32 remoteHostPort,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDMessenger** instance);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTCPMessengerFactoryVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTCPMessengerFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTCPMessengerFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTCPMessengerFactory;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTCPMessengerFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterPropertiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CertificateType)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties* This,
        enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateType* type);
    HRESULT (STDMETHODCALLTYPE* get_PlatformIdentifier)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties* This,
        enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificatePlatformID* identifier);
    HRESULT (STDMETHODCALLTYPE* get_SupportedFeatures)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties* This,
        UINT32* featureSetsLength,
        enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CNDCertificateFeature** featureSets);
    HRESULT (STDMETHODCALLTYPE* get_SecurityLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties* This,
        UINT32* level);
    HRESULT (STDMETHODCALLTYPE* get_SecurityVersion)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties* This,
        UINT32* securityVersion);
    HRESULT (STDMETHODCALLTYPE* get_ExpirationDate)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* expirationDate);
    HRESULT (STDMETHODCALLTYPE* get_ClientID)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties* This,
        UINT32* clientIDBytesLength,
        BYTE** clientIDBytes);
    HRESULT (STDMETHODCALLTYPE* get_ModelDigest)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties* This,
        UINT32* modelDigestBytesLength,
        BYTE** modelDigestBytes);
    HRESULT (STDMETHODCALLTYPE* get_ModelManufacturerName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties* This,
        HSTRING* modelManufacturerName);
    HRESULT (STDMETHODCALLTYPE* get_ModelName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties* This,
        HSTRING* modelName);
    HRESULT (STDMETHODCALLTYPE* get_ModelNumber)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties* This,
        HSTRING* modelNumber);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterPropertiesVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterPropertiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CINDTransmitterProperties_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeyId)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_KeyIdString)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_LicenseAcquisitionUrl)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_LicenseAcquisitionUserInterfaceUrl)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* get_DomainServiceId)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_EncryptionType)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* This,
        enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyEncryptionAlgorithm* value);
    HRESULT (STDMETHODCALLTYPE* get_CustomAttributes)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DecryptorSetup)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* This,
        enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyDecryptorSetup* value);
    HRESULT (STDMETHODCALLTYPE* GetSerializedHeader)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* This,
        UINT32* headerBytesLength,
        BYTE** headerBytes);
    HRESULT (STDMETHODCALLTYPE* get_HeaderWithEmbeddedUpdates)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_KeyIds)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader2* This,
        UINT32* contentKeyIdsLength,
        GUID** contentKeyIds);
    HRESULT (STDMETHODCALLTYPE* get_KeyIdStrings)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader2* This,
        UINT32* contentKeyIdStringsLength,
        HSTRING** contentKeyIdStrings);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader2Vtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstanceFromWindowsMediaDrmHeader)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory* This,
        UINT32 headerBytesLength,
        BYTE* headerBytes,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* licenseAcquisitionUrl,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* licenseAcquisitionUserInterfaceUrl,
        HSTRING customAttributes,
        GUID domainServiceId,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader** instance);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceFromComponents)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory* This,
        GUID contentKeyId,
        HSTRING contentKeyIdString,
        enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyEncryptionAlgorithm contentEncryptionAlgorithm,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* licenseAcquisitionUrl,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* licenseAcquisitionUserInterfaceUrl,
        HSTRING customAttributes,
        GUID domainServiceId,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader** instance);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceFromPlayReadyHeader)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory* This,
        UINT32 headerBytesLength,
        BYTE* headerBytes,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader** instance);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactoryVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstanceFromComponents2)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory2* This,
        UINT32 dwFlags,
        UINT32 contentKeyIdsLength,
        GUID* contentKeyIds,
        UINT32 contentKeyIdStringsLength,
        HSTRING* contentKeyIdStrings,
        enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyEncryptionAlgorithm contentEncryptionAlgorithm,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* licenseAcquisitionUrl,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* licenseAcquisitionUserInterfaceUrl,
        HSTRING customAttributes,
        GUID domainServiceId,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader** instance);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory2Vtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeaderFactory2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentResolver_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentResolver_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentResolverVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentResolver* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentResolver* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentResolver* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentResolver* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentResolver* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentResolver* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* ServiceRequest)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentResolver* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* contentHeader,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest** serviceRequest);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentResolverVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentResolver
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentResolverVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentResolver;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentResolver_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_AccountId)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_ServiceId)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_Revision)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_FriendlyName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_DomainJoinUrl)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomain_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainIterableFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainIterableFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainIterableFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainIterableFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainIterableFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainIterableFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainIterableFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainIterableFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainIterableFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainIterableFactory* This,
        GUID domainAccountId,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyDomain** domainIterable);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainIterableFactoryVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainIterableFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainIterableFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainIterableFactory;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainIterableFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DomainAccountId)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* put_DomainAccountId)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest* This,
        GUID value);
    HRESULT (STDMETHODCALLTYPE* get_DomainFriendlyName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_DomainFriendlyName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* get_DomainServiceId)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* put_DomainServiceId)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest* This,
        GUID value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequestVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainJoinServiceRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DomainAccountId)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequest* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* put_DomainAccountId)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequest* This,
        GUID value);
    HRESULT (STDMETHODCALLTYPE* get_DomainServiceId)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequest* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* put_DomainServiceId)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequest* This,
        GUID value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequestVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequest;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyDomainLeaveServiceRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyITADataGenerator_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyITADataGenerator_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyITADataGeneratorVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyITADataGenerator* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyITADataGenerator* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyITADataGenerator* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyITADataGenerator* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyITADataGenerator* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyITADataGenerator* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GenerateData)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyITADataGenerator* This,
        GUID guidCPSystemId,
        UINT32 countOfStreams,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* configuration,
        enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyITADataFormat format,
        UINT32* dataBytesLength,
        BYTE** dataBytes);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyITADataGeneratorVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyITADataGenerator
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyITADataGeneratorVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyITADataGenerator;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyITADataGenerator_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyIndividualizationServiceRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyIndividualizationServiceRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyIndividualizationServiceRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyIndividualizationServiceRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyIndividualizationServiceRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyIndividualizationServiceRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyIndividualizationServiceRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyIndividualizationServiceRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyIndividualizationServiceRequest* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyIndividualizationServiceRequestVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyIndividualizationServiceRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyIndividualizationServiceRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyIndividualizationServiceRequest;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyIndividualizationServiceRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_FullyEvaluated)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_UsableForPlay)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpirationDate)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* get_ExpireAfterFirstPlay)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_DomainAccountID)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_ChainDepth)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* GetKIDAtChainDepth)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense* This,
        UINT32 chainDepth,
        GUID* kid);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SecureStopId)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_SecurityLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_InMemoryOnly)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_ExpiresInRealTime)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2* This,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2Vtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicense2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ContentHeader)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader** value);
    HRESULT (STDMETHODCALLTYPE* put_ContentHeader)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* value);
    HRESULT (STDMETHODCALLTYPE* get_DomainServiceId)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* put_DomainServiceId)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest* This,
        GUID value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequestVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SessionId)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest2* This,
        GUID* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest2Vtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateLicenseIterable)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest3* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* contentHeader,
        boolean fullyEvaluated,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense** result);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest3Vtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest3
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseIterableFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseIterableFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseIterableFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseIterableFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseIterableFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseIterableFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseIterableFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseIterableFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseIterableFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseIterableFactory* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* contentHeader,
        boolean fullyEvaluated,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense** instance);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseIterableFactoryVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseIterableFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseIterableFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseIterableFactory;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseIterableFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseManagement_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseManagement_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseManagementVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseManagement* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseManagement* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseManagement* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseManagement* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseManagement* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseManagement* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* DeleteLicenses)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseManagement* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* contentHeader,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseManagementVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseManagement
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseManagementVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseManagement;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseManagement_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateLAServiceRequest)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseAcquisitionServiceRequest** serviceRequest);
    HRESULT (STDMETHODCALLTYPE* ConfigureMediaProtectionManager)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession* This,
        __x_ABI_CWindows_CMedia_CProtection_CIMediaProtectionManager* mpm);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateLicenseIterable)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession2* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyContentHeader* contentHeader,
        boolean fullyEvaluated,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadyLicense** licenseIterable);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession2Vtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionFactory* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet* configuration,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSession** instance);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionFactoryVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionFactory;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyLicenseSessionFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyMeteringReportServiceRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyMeteringReportServiceRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyMeteringReportServiceRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyMeteringReportServiceRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyMeteringReportServiceRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyMeteringReportServiceRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyMeteringReportServiceRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyMeteringReportServiceRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyMeteringReportServiceRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_MeteringCertificate)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyMeteringReportServiceRequest* This,
        UINT32* meteringCertBytesLength,
        BYTE** meteringCertBytes);
    HRESULT (STDMETHODCALLTYPE* put_MeteringCertificate)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyMeteringReportServiceRequest* This,
        UINT32 meteringCertBytesLength,
        BYTE* meteringCertBytes);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyMeteringReportServiceRequestVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyMeteringReportServiceRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyMeteringReportServiceRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyMeteringReportServiceRequest;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyMeteringReportServiceRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyRevocationServiceRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyRevocationServiceRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyRevocationServiceRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyRevocationServiceRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyRevocationServiceRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyRevocationServiceRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyRevocationServiceRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyRevocationServiceRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyRevocationServiceRequest* This,
            TrustLevel* trustLevel);
    
        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyRevocationServiceRequestVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyRevocationServiceRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyRevocationServiceRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyRevocationServiceRequest;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyRevocationServiceRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopIterableFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopIterableFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopIterableFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopIterableFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopIterableFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopIterableFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopIterableFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopIterableFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopIterableFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopIterableFactory* This,
        UINT32 publisherCertBytesLength,
        BYTE* publisherCertBytes,
        __x_ABI_C__FIIterable_1___x_ABI_CWindows__CMedia__CProtection__CPlayReady__CIPlayReadySecureStopServiceRequest** instance);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopIterableFactoryVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopIterableFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopIterableFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopIterableFactory;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopIterableFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SessionID)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_StartTime)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_UpdateTime)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest* This,
        struct __x_ABI_CWindows_CFoundation_CDateTime* value);
    HRESULT (STDMETHODCALLTYPE* get_Stopped)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_PublisherCertificate)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest* This,
        UINT32* publisherCertBytesLength,
        BYTE** publisherCertBytes);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestFactory_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestFactory_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestFactoryVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestFactory* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestFactory* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestFactory* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestFactory* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestFactory* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestFactory* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateInstance)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestFactory* This,
        UINT32 publisherCertBytesLength,
        BYTE* publisherCertBytes,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest** instance);
    HRESULT (STDMETHODCALLTYPE* CreateInstanceFromSessionID)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestFactory* This,
        GUID sessionID,
        UINT32 publisherCertBytesLength,
        BYTE* publisherCertBytes,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequest** instance);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestFactoryVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestFactory
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestFactoryVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestFactory;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySecureStopServiceRequestFactory_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequestVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** value);
    HRESULT (STDMETHODCALLTYPE* put_Uri)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass* value);
    HRESULT (STDMETHODCALLTYPE* get_ResponseCustomData)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ChallengeCustomData)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* put_ChallengeCustomData)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest* This,
        HSTRING value);
    HRESULT (STDMETHODCALLTYPE* BeginServiceRequest)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest* This,
        __x_ABI_CWindows_CFoundation_CIAsyncAction** action);
    HRESULT (STDMETHODCALLTYPE* NextServiceRequest)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest** serviceRequest);
    HRESULT (STDMETHODCALLTYPE* GenerateManualEnablingChallenge)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest* This,
        __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessage** challengeMessage);
    HRESULT (STDMETHODCALLTYPE* ProcessManualEnablingResponse)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest* This,
        UINT32 responseBytesLength,
        BYTE* responseBytes,
        HRESULT* result);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequestVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequestVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyServiceRequest_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessage_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessage_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessageVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessage* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessage* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessage* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessage* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessage* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessage* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetMessageBody)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessage* This,
        UINT32* messageBodyBytesLength,
        BYTE** messageBodyBytes);
    HRESULT (STDMETHODCALLTYPE* get_MessageHeaders)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessage* This,
        __x_ABI_CWindows_CFoundation_CCollections_CIPropertySet** value);
    HRESULT (STDMETHODCALLTYPE* get_Uri)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessage* This,
        __x_ABI_CWindows_CFoundation_CIUriRuntimeClass** messageUri);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessageVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessage
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessageVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessage;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadySoapMessage_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DomainJoinServiceRequestType)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_DomainLeaveServiceRequestType)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_IndividualizationServiceRequestType)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_LicenseAcquirerServiceRequestType)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_MeteringReportServiceRequestType)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_RevocationServiceRequestType)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_MediaProtectionSystemId)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* get_PlayReadySecurityVersion)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStaticsVtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_PlayReadyCertificateSecurityLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics2* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics2Vtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics2
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics2;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_SecureStopServiceRequestType)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics3* This,
        GUID* value);
    HRESULT (STDMETHODCALLTYPE* CheckSupportedHardware)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics3* This,
        enum __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CPlayReadyHardwareDRMFeatures hwdrmFeature,
        boolean* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics3Vtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics3
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics3;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_InputTrustAuthorityToCreate)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics4* This,
        HSTRING* value);
    HRESULT (STDMETHODCALLTYPE* get_ProtectionSystemId)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics4* This,
        GUID* value);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics4Vtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics4
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics4;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_HardwareDRMDisabledAtTime)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* get_HardwareDRMDisabledUntilTime)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5* This,
        __x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTime** value);
    HRESULT (STDMETHODCALLTYPE* ResetHardwareDRMDisabled)(__x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5* This);

        END_INTERFACE
    } __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5Vtbl;

    interface __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5
    {
        CONST_VTBL struct __x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5;
#endif /* !defined(____x_ABI_CWindows_CMedia_CProtection_CPlayReady_CIPlayReadyStatics5_INTERFACE_DEFINED__) */
    
