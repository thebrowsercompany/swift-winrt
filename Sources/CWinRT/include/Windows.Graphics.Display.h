// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1

#pragma once
// Header files for imported files
#include <inspectable.h>
#include <EventToken.h>
#include <windowscontracts.h>
#include "Windows.Foundation.h"
#include "Windows.Storage.Streams.h"
// Importing Collections header
#include "Windows.Foundation.Collections.h"

/* Forward Declarations */
#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandler_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandler_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandler __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandler;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandler_FWD_DEFINED__

    #ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo __x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStatics __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStatics;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStatics __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStatics;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettings_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettings_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettings __x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettings;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettings_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsStatics __x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsStatics;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilities_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilities_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilities __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilities;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilities_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesChangedEventArgs_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesChangedEventArgs_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesChangedEventArgs __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesChangedEventArgs;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesChangedEventArgs_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideStatics __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideStatics;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation2_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation2_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation2 __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation2;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation2_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation3_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation3_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation3 __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation3;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation3_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation4_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation4_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation4 __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation4;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation4_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5 __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStatics __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStatics;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStatics_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics_FWD_DEFINED__
#define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics;

#endif // ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

#if !defined(____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1_boolean __x_ABI_C__FIAsyncOperation_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1_boolean* This,
        boolean* result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperation_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1_boolean_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean* This,
        __x_ABI_C__FIAsyncOperation_1_boolean* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1_booleanVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1_boolean_INTERFACE_DEFINED__
    
#ifndef ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
#define ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream;

#endif // ____x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream_FWD_DEFINED__

typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

#if !defined(____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    typedef struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* put_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* handler);
    HRESULT (STDMETHODCALLTYPE* get_Completed)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream** result);
    HRESULT (STDMETHODCALLTYPE* GetResults)(__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_CWindows_CStorage_CStreams_CIRandomAccessStream** result);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl;

    interface __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream;

    typedef struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream* asyncInfo,
        enum __x_ABI_CWindows_CFoundation_CAsyncStatus asyncStatus);

        END_INTERFACE
    } __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl;

    interface __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream
    {
        CONST_VTBL struct __x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStreamVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIAsyncOperationCompletedHandler_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream_INTERFACE_DEFINED__
    
typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CNitRange __x_ABI_CWindows_CGraphics_CDisplay_CNitRange;

#if !defined(____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange;

    typedef struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Current)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This,
        struct __x_ABI_CWindows_CGraphics_CDisplay_CNitRange* result);
    HRESULT (STDMETHODCALLTYPE* get_HasCurrent)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* MoveNext)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CGraphics_CDisplay_CNitRange* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRangeVtbl;

    interface __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange
    {
        CONST_VTBL struct __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange;

    typedef struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* First)(__x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This,
        __x_ABI_C__FIIterator_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange** result);

        END_INTERFACE
    } __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRangeVtbl;

    interface __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange
    {
        CONST_VTBL struct __x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIIterable_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange;

    typedef struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRangeVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAt)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This,
        UINT32 index,
        struct __x_ABI_CWindows_CGraphics_CDisplay_CNitRange* result);
    HRESULT (STDMETHODCALLTYPE* get_Size)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This,
        UINT32* result);
    HRESULT (STDMETHODCALLTYPE* IndexOf)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This,
        struct __x_ABI_CWindows_CGraphics_CDisplay_CNitRange value,
        UINT32* index,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* GetMany)(__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange* This,
        UINT32 startIndex,
        UINT32 itemsLength,
        struct __x_ABI_CWindows_CGraphics_CDisplay_CNitRange* items,
        UINT32* result);

        END_INTERFACE
    } __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRangeVtbl;

    interface __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange
    {
        CONST_VTBL struct __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRangeVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FIReference_1_double __x_ABI_C__FIReference_1_double;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FIReference_1_double;

    typedef struct __x_ABI_C__FIReference_1_doubleVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FIReference_1_double* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FIReference_1_double* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FIReference_1_double* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_C__FIReference_1_double* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_C__FIReference_1_double* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_C__FIReference_1_double* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Value)(__x_ABI_C__FIReference_1_double* This,
        DOUBLE* result);

        END_INTERFACE
    } __x_ABI_C__FIReference_1_doubleVtbl;

    interface __x_ABI_C__FIReference_1_double
    {
        CONST_VTBL struct __x_ABI_C__FIReference_1_doubleVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FIReference_1_double_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CBrightnessOverride_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CBrightnessOverride_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CBrightnessOverride_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CBrightnessOverride_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CBrightnessOverride_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CBrightnessOverride_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CBrightnessOverride_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CBrightnessOverride_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CBrightnessOverride_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CBrightnessOverride_IInspectable* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CBrightnessOverride_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CBrightnessOverride_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CBrightnessOverride_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CBrightnessOverride_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride_IInspectable* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride_IInspectable_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverrideCapabilitiesChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverrideCapabilitiesChangedEventArgs_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverrideCapabilitiesChangedEventArgs __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverrideCapabilitiesChangedEventArgs;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverrideCapabilitiesChangedEventArgs;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverrideCapabilitiesChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverrideCapabilitiesChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverrideCapabilitiesChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverrideCapabilitiesChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverrideCapabilitiesChangedEventArgs* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* sender,
        __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesChangedEventArgs* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverrideCapabilitiesChangedEventArgsVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverrideCapabilitiesChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverrideCapabilitiesChangedEventArgsVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverrideCapabilitiesChangedEventArgs_INTERFACE_DEFINED__
    
#if !defined(____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayInformation_IInspectable_INTERFACE_DEFINED__)
    #define ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayInformation_IInspectable_INTERFACE_DEFINED__

    typedef interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayInformation_IInspectable __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayInformation_IInspectable;

    //  Declare the parameterized interface IID.
    EXTERN_C const IID IID___x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayInformation_IInspectable;

    typedef struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayInformation_IInspectableVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayInformation_IInspectable* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayInformation_IInspectable* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayInformation_IInspectable* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayInformation_IInspectable* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* sender,
        IInspectable* args);

        END_INTERFACE
    } __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayInformation_IInspectableVtbl;

    interface __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayInformation_IInspectable
    {
        CONST_VTBL struct __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayInformation_IInspectableVtbl* lpVtbl;
    };

    
    #endif // ____x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayInformation_IInspectable_INTERFACE_DEFINED__
    
typedef enum __x_ABI_CWindows_CFoundation_CAsyncStatus __x_ABI_CWindows_CFoundation_CAsyncStatus;

#ifndef ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIAsyncInfo __x_ABI_CWindows_CFoundation_CIAsyncInfo;

#endif // ____x_ABI_CWindows_CFoundation_CIAsyncInfo_FWD_DEFINED__

#ifndef ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
#define ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__
    typedef interface __x_ABI_CWindows_CFoundation_CIPropertyValue __x_ABI_CWindows_CFoundation_CIPropertyValue;

#endif // ____x_ABI_CWindows_CFoundation_CIPropertyValue_FWD_DEFINED__

typedef struct __x_ABI_CWindows_CFoundation_CPoint __x_ABI_CWindows_CFoundation_CPoint;

typedef enum __x_ABI_CWindows_CGraphics_CDisplay_CAdvancedColorKind __x_ABI_CWindows_CGraphics_CDisplay_CAdvancedColorKind;

typedef enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessOverrideOptions __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessOverrideOptions;

typedef enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessOverrideScenario __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessOverrideScenario;

typedef enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessScenario __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessScenario;

typedef enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayColorOverrideScenario __x_ABI_CWindows_CGraphics_CDisplay_CDisplayColorOverrideScenario;

typedef enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayOrientations __x_ABI_CWindows_CGraphics_CDisplay_CDisplayOrientations;

typedef enum __x_ABI_CWindows_CGraphics_CDisplay_CHdrMetadataFormat __x_ABI_CWindows_CGraphics_CDisplay_CHdrMetadataFormat;

typedef enum __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale;

enum __x_ABI_CWindows_CGraphics_CDisplay_CAdvancedColorKind
    {
        __x_ABI_CWindows_CGraphics_CDisplay_CAdvancedColorKind_StandardDynamicRange = 0,
    __x_ABI_CWindows_CGraphics_CDisplay_CAdvancedColorKind_WideColorGamut = 1,
    __x_ABI_CWindows_CGraphics_CDisplay_CAdvancedColorKind_HighDynamicRange = 2,
};

enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessOverrideOptions
    {
        __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessOverrideOptions_None = 0,
    __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessOverrideOptions_UseDimmedPolicyWhenBatteryIsLow = 0x1,
};

enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessOverrideScenario
    {
        __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessOverrideScenario_IdleBrightness = 0,
    __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessOverrideScenario_BarcodeReadingBrightness = 1,
    __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessOverrideScenario_FullBrightness = 2,
};

enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessScenario
    {
        __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessScenario_DefaultBrightness = 0,
    __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessScenario_IdleBrightness = 1,
    __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessScenario_BarcodeReadingBrightness = 2,
    __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessScenario_FullBrightness = 3,
};

enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayColorOverrideScenario
    {
        __x_ABI_CWindows_CGraphics_CDisplay_CDisplayColorOverrideScenario_Accurate = 0,
};

enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayOrientations
    {
        __x_ABI_CWindows_CGraphics_CDisplay_CDisplayOrientations_None = 0,
    __x_ABI_CWindows_CGraphics_CDisplay_CDisplayOrientations_Landscape = 0x1,
    __x_ABI_CWindows_CGraphics_CDisplay_CDisplayOrientations_Portrait = 0x2,
    __x_ABI_CWindows_CGraphics_CDisplay_CDisplayOrientations_LandscapeFlipped = 0x4,
    __x_ABI_CWindows_CGraphics_CDisplay_CDisplayOrientations_PortraitFlipped = 0x8,
};

enum __x_ABI_CWindows_CGraphics_CDisplay_CHdrMetadataFormat
    {
        __x_ABI_CWindows_CGraphics_CDisplay_CHdrMetadataFormat_Hdr10 = 0,
    __x_ABI_CWindows_CGraphics_CDisplay_CHdrMetadataFormat_Hdr10Plus = 1,
};

enum __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale
    {
        __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale_Invalid = 0,
    __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale_Scale100Percent = 100,
    __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale_Scale120Percent = 120,
    __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale_Scale125Percent = 125,
    __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale_Scale140Percent = 140,
    __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale_Scale150Percent = 150,
    __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale_Scale160Percent = 160,
    __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale_Scale175Percent = 175,
    __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale_Scale180Percent = 180,
    __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale_Scale200Percent = 200,
    __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale_Scale225Percent = 225,
    __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale_Scale250Percent = 250,
    __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale_Scale300Percent = 300,
    __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale_Scale350Percent = 350,
    __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale_Scale400Percent = 400,
    __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale_Scale450Percent = 450,
    __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale_Scale500Percent = 500,
};

struct __x_ABI_CWindows_CGraphics_CDisplay_CNitRange
    {
        FLOAT MinNits;
    FLOAT MaxNits;
    FLOAT StepSizeNits;
};

#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandler_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandler_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandlerVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandler* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandler* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandler* This);
        HRESULT (STDMETHODCALLTYPE* Invoke)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandler* This,
        IInspectable* sender);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandlerVtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandler
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandlerVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandler;
    #endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandler_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfoVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CurrentAdvancedColorKind)(__x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo* This,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CAdvancedColorKind* value);
    HRESULT (STDMETHODCALLTYPE* get_RedPrimary)(__x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* get_GreenPrimary)(__x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* get_BluePrimary)(__x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* get_WhitePoint)(__x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo* This,
        struct __x_ABI_CWindows_CFoundation_CPoint* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxLuminanceInNits)(__x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_MinLuminanceInNits)(__x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_MaxAverageFullFrameLuminanceInNits)(__x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_SdrWhiteLevelInNits)(__x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* IsHdrMetadataFormatCurrentlySupported)(__x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo* This,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CHdrMetadataFormat format,
        boolean* result);
    HRESULT (STDMETHODCALLTYPE* IsAdvancedColorKindAvailable)(__x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo* This,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CAdvancedColorKind kind,
        boolean* result);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfoVtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfoVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsSupported)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsOverrideActive)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_BrightnessLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* This,
        DOUBLE* level);
    HRESULT (STDMETHODCALLTYPE* SetBrightnessLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* This,
        DOUBLE brightnessLevel,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessOverrideOptions options);
    HRESULT (STDMETHODCALLTYPE* SetBrightnessScenario)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* This,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessScenario scenario,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessOverrideOptions options);
    HRESULT (STDMETHODCALLTYPE* GetLevelForScenario)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* This,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessScenario scenario,
        DOUBLE* brightnessLevel);
    HRESULT (STDMETHODCALLTYPE* StartOverride)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* This);
    HRESULT (STDMETHODCALLTYPE* StopOverride)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* This);
    HRESULT (STDMETHODCALLTYPE* add_IsSupportedChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CBrightnessOverride_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_IsSupportedChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_IsOverrideActiveChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CBrightnessOverride_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_IsOverrideActiveChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_BrightnessLevelChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CBrightnessOverride_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_BrightnessLevelChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideVtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DesiredLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings* This,
        DOUBLE* value);
    HRESULT (STDMETHODCALLTYPE* get_DesiredNits)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings* This,
        FLOAT* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsVtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateFromLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStatics* This,
        DOUBLE level,
        __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings** result);
    HRESULT (STDMETHODCALLTYPE* CreateFromNits)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStatics* This,
        FLOAT nits,
        __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings** result);
    HRESULT (STDMETHODCALLTYPE* CreateFromDisplayBrightnessOverrideScenario)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStatics* This,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayBrightnessOverrideScenario overrideScenario,
        __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStaticsVtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStatics;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettingsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetDefaultForSystem)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStatics* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride** value);
    HRESULT (STDMETHODCALLTYPE* GetForCurrentView)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStatics* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride** value);
    HRESULT (STDMETHODCALLTYPE* SaveForSystemAsync)(__x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStatics* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverride* value,
        __x_ABI_C__FIAsyncOperation_1_boolean** operation);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStaticsVtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStatics;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettings_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettings_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettings* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettings* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettings* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettings* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettings* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettings* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DesiredDisplayColorOverrideScenario)(__x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettings* This,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayColorOverrideScenario* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsVtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettings
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettings;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettings_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* CreateFromDisplayColorOverrideScenario)(__x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsStatics* This,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayColorOverrideScenario overrideScenario,
        __x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettings** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsStaticsVtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsStatics;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettingsStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ColorOverrideSettings)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettings** value);
    HRESULT (STDMETHODCALLTYPE* put_ColorOverrideSettings)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CIColorOverrideSettings* value);
    HRESULT (STDMETHODCALLTYPE* get_BrightnessOverrideSettings)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings** value);
    HRESULT (STDMETHODCALLTYPE* put_BrightnessOverrideSettings)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CIBrightnessOverrideSettings* value);
    HRESULT (STDMETHODCALLTYPE* get_CanOverride)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsOverrideActive)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* GetCurrentDisplayEnhancementOverrideCapabilities)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilities** value);
    HRESULT (STDMETHODCALLTYPE* RequestOverride)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* This);
    HRESULT (STDMETHODCALLTYPE* StopOverride)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* This);
    HRESULT (STDMETHODCALLTYPE* add_CanOverrideChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_CanOverrideChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_IsOverrideActiveChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_IsOverrideActiveChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DisplayEnhancementOverrideCapabilitiesChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverride___x_ABI_CWindows__CGraphics__CDisplay__CDisplayEnhancementOverrideCapabilitiesChangedEventArgs* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DisplayEnhancementOverrideCapabilitiesChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideVtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilities_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilities_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilities* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilities* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilities* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilities* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilities* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilities* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_IsBrightnessControlSupported)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* get_IsBrightnessNitsControlSupported)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilities* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* GetSupportedNitRanges)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilities* This,
        __x_ABI_C__FIVectorView_1___x_ABI_CWindows__CGraphics__CDisplay__CNitRange** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesVtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilities
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilities;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilities_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesChangedEventArgs_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesChangedEventArgs_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesChangedEventArgsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesChangedEventArgs* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesChangedEventArgs* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesChangedEventArgs* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesChangedEventArgs* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesChangedEventArgs* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesChangedEventArgs* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_Capabilities)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesChangedEventArgs* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilities** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesChangedEventArgsVtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesChangedEventArgs
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesChangedEventArgsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesChangedEventArgs;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideCapabilitiesChangedEventArgs_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForCurrentView)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideStatics* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverride** result);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideStaticsVtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideStatics;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayEnhancementOverrideStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CurrentOrientation)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayOrientations* value);
    HRESULT (STDMETHODCALLTYPE* get_NativeOrientation)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayOrientations* value);
    HRESULT (STDMETHODCALLTYPE* add_OrientationChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayInformation_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_OrientationChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_ResolutionScale)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale* value);
    HRESULT (STDMETHODCALLTYPE* get_LogicalDpi)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_RawDpiX)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* get_RawDpiY)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* add_DpiChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayInformation_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DpiChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_StereoEnabled)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_StereoEnabledChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayInformation_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StereoEnabledChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* GetColorProfileAsync)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* add_ColorProfileChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayInformation_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ColorProfileChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationVtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation2_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation2_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation2Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation2* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation2* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation2* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation2* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation2* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation2* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_RawPixelsPerViewPixel)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation2* This,
        DOUBLE* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation2Vtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation2
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation2Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation2;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation2_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation3_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation3_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation3Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation3* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation3* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation3* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation3* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation3* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation3* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_DiagonalSizeInInches)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation3* This,
        __x_ABI_C__FIReference_1_double** value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation3Vtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation3
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation3Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation3;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation3_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation4_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation4_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation4Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation4* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation4* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation4* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation4* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation4* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation4* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_ScreenWidthInRawPixels)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation4* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_ScreenHeightInRawPixels)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation4* This,
        UINT32* value);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation4Vtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation4
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation4Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation4;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation4_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5Vtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetAdvancedColorInfo)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CIAdvancedColorInfo** value);
    HRESULT (STDMETHODCALLTYPE* add_AdvancedColorInfoChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayInformation_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_AdvancedColorInfoChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5Vtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5Vtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation5_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* GetForCurrentView)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStatics* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformation** current);
    HRESULT (STDMETHODCALLTYPE* get_AutoRotationPreferences)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStatics* This,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayOrientations* value);
    HRESULT (STDMETHODCALLTYPE* put_AutoRotationPreferences)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStatics* This,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayOrientations value);
    HRESULT (STDMETHODCALLTYPE* add_DisplayContentsInvalidated)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStatics* This,
        __x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CGraphics__CDisplay__CDisplayInformation_IInspectable* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DisplayContentsInvalidated)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStatics* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStaticsVtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStatics;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayInformationStatics_INTERFACE_DEFINED__) */
    
#if !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics_INTERFACE_DEFINED__)
    #define ____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics_INTERFACE_DEFINED__
    typedef struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStaticsVtbl
    {
        BEGIN_INTERFACE

        HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
            REFIID riid,
            void** ppvObject);
        ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This);
        ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This);
        HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
            ULONG* iidCount,
            IID** iids);
        HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
            HSTRING* className);
        HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
            TrustLevel* trustLevel);
        HRESULT (STDMETHODCALLTYPE* get_CurrentOrientation)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayOrientations* value);
    HRESULT (STDMETHODCALLTYPE* get_NativeOrientation)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayOrientations* value);
    HRESULT (STDMETHODCALLTYPE* get_AutoRotationPreferences)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayOrientations* value);
    HRESULT (STDMETHODCALLTYPE* put_AutoRotationPreferences)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CDisplayOrientations value);
    HRESULT (STDMETHODCALLTYPE* add_OrientationChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_OrientationChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_ResolutionScale)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
        enum __x_ABI_CWindows_CGraphics_CDisplay_CResolutionScale* value);
    HRESULT (STDMETHODCALLTYPE* get_LogicalDpi)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
        FLOAT* value);
    HRESULT (STDMETHODCALLTYPE* add_LogicalDpiChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_LogicalDpiChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* get_StereoEnabled)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
        boolean* value);
    HRESULT (STDMETHODCALLTYPE* add_StereoEnabledChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_StereoEnabledChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* GetColorProfileAsync)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
        __x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CStorage__CStreams__CIRandomAccessStream** asyncInfo);
    HRESULT (STDMETHODCALLTYPE* add_ColorProfileChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_ColorProfileChanged)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
        EventRegistrationToken token);
    HRESULT (STDMETHODCALLTYPE* add_DisplayContentsInvalidated)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
        __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesEventHandler* handler,
        EventRegistrationToken* token);
    HRESULT (STDMETHODCALLTYPE* remove_DisplayContentsInvalidated)(__x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics* This,
        EventRegistrationToken token);

        END_INTERFACE
    } __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStaticsVtbl;

    interface __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics
    {
        CONST_VTBL struct __x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStaticsVtbl* lpVtbl;
    };

    
    EXTERN_C const IID IID___x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics;
#endif /* !defined(____x_ABI_CWindows_CGraphics_CDisplay_CIDisplayPropertiesStatics_INTERFACE_DEFINED__) */
    
