// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import UWP
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

public enum __IMPL_Microsoft_Graphics_Canvas {
    public enum ICanvasImageBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasImage
        public typealias SwiftABI = __ABI_Microsoft_Graphics_Canvas.ICanvasImage
        public typealias SwiftProjection = AnyICanvasImage
        public static func from(abi: ComPtr<CABI>?) -> SwiftProjection? {
            guard let abi = abi else { return nil }
            return ICanvasImageImpl(abi)
        }

        public static func makeAbi() -> CABI {
            let vtblPtr = withUnsafeMutablePointer(to: &__ABI_Microsoft_Graphics_Canvas.ICanvasImageVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class ICanvasImageImpl: ICanvasImage, WinRTAbiImpl {
        fileprivate typealias Bridge = ICanvasImageBridge
        fileprivate let _default: Bridge.SwiftABI
        fileprivate var thisPtr: WindowsFoundation.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.SwiftABI(fromAbi)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.graphics.canvas.icanvasimage.getbounds)
        fileprivate func getBounds(_ resourceCreator: AnyICanvasResourceCreator!) throws -> WindowsFoundation.Rect {
            try _default.GetBoundsImpl(resourceCreator)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.graphics.canvas.icanvasimage.getbounds)
        fileprivate func getBounds(_ resourceCreator: AnyICanvasResourceCreator!, _ transform: WindowsFoundation.Matrix3x2) throws -> WindowsFoundation.Rect {
            try _default.GetBoundsWithTransformImpl(resourceCreator, transform)
        }

        private lazy var _IGraphicsEffectSource: __ABI_Windows_Graphics_Effects.IGraphicsEffectSource! = getInterfaceForCaching()
        private lazy var _IClosable: __ABI_Windows_Foundation.IClosable! = getInterfaceForCaching()
        /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.graphics.canvas.icanvasimage.close)
        fileprivate func close() throws {
            try _IClosable.CloseImpl()
        }

    }

    public enum ICanvasResourceCreatorBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreator
        public typealias SwiftABI = __ABI_Microsoft_Graphics_Canvas.ICanvasResourceCreator
        public typealias SwiftProjection = AnyICanvasResourceCreator
        public static func from(abi: ComPtr<CABI>?) -> SwiftProjection? {
            guard let abi = abi else { return nil }
            return ICanvasResourceCreatorImpl(abi)
        }

        public static func makeAbi() -> CABI {
            let vtblPtr = withUnsafeMutablePointer(to: &__ABI_Microsoft_Graphics_Canvas.ICanvasResourceCreatorVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class ICanvasResourceCreatorImpl: ICanvasResourceCreator, WinRTAbiImpl {
        fileprivate typealias Bridge = ICanvasResourceCreatorBridge
        fileprivate let _default: Bridge.SwiftABI
        fileprivate var thisPtr: WindowsFoundation.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.SwiftABI(fromAbi)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.graphics.canvas.icanvasresourcecreator.device)
        fileprivate var device : CanvasDevice! {
            get { try! _default.get_DeviceImpl() }
        }

    }

    public enum ICanvasResourceCreatorWithDpiBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CMicrosoft_CGraphics_CCanvas_CICanvasResourceCreatorWithDpi
        public typealias SwiftABI = __ABI_Microsoft_Graphics_Canvas.ICanvasResourceCreatorWithDpi
        public typealias SwiftProjection = AnyICanvasResourceCreatorWithDpi
        public static func from(abi: ComPtr<CABI>?) -> SwiftProjection? {
            guard let abi = abi else { return nil }
            return ICanvasResourceCreatorWithDpiImpl(abi)
        }

        public static func makeAbi() -> CABI {
            let vtblPtr = withUnsafeMutablePointer(to: &__ABI_Microsoft_Graphics_Canvas.ICanvasResourceCreatorWithDpiVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class ICanvasResourceCreatorWithDpiImpl: ICanvasResourceCreatorWithDpi, WinRTAbiImpl {
        fileprivate typealias Bridge = ICanvasResourceCreatorWithDpiBridge
        fileprivate let _default: Bridge.SwiftABI
        fileprivate var thisPtr: WindowsFoundation.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.SwiftABI(fromAbi)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.graphics.canvas.icanvasresourcecreatorwithdpi.convertpixelstodips)
        fileprivate func convertPixelsToDips(_ pixels: Int32) throws -> Float {
            try _default.ConvertPixelsToDipsImpl(pixels)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.graphics.canvas.icanvasresourcecreatorwithdpi.convertdipstopixels)
        fileprivate func convertDipsToPixels(_ dips: Float, _ dpiRounding: CanvasDpiRounding) throws -> Int32 {
            try _default.ConvertDipsToPixelsImpl(dips, dpiRounding)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.graphics.canvas.icanvasresourcecreatorwithdpi.dpi)
        fileprivate var dpi : Float {
            get { try! _default.get_DpiImpl() }
        }

        private lazy var _ICanvasResourceCreator: __ABI_Microsoft_Graphics_Canvas.ICanvasResourceCreator! = getInterfaceForCaching()
        /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.graphics.canvas.icanvasresourcecreatorwithdpi.device)
        fileprivate var device : CanvasDevice! {
            get { try! _ICanvasResourceCreator.get_DeviceImpl() }
        }

    }

}
