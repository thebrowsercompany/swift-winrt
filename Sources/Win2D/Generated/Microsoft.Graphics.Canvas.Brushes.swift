// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.graphics.canvas.brushes.icanvasbrush)
public protocol ICanvasBrush : WindowsFoundation.IClosable {
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.graphics.canvas.brushes.icanvasbrush.device)
    var device: Win2D.CanvasDevice! { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.graphics.canvas.brushes.icanvasbrush.opacity)
    var opacity: Float { get set }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.graphics.canvas.brushes.icanvasbrush.transform)
    var transform: WindowsFoundation.Matrix3x2 { get set }
}

extension ICanvasBrush {
    public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_Microsoft_Graphics_Canvas_Brushes.ICanvasBrushWrapper.IID:
                let wrapper = __ABI_Microsoft_Graphics_Canvas_Brushes.ICanvasBrushWrapper(self)
                return wrapper!.queryInterface(iid)
            case __ABI_Windows_Foundation.IClosableWrapper.IID:
                let wrapper = __ABI_Windows_Foundation.IClosableWrapper(self)
                return wrapper!.queryInterface(iid)
            default: return nil
        }
    }
}
public typealias AnyICanvasBrush = any ICanvasBrush

