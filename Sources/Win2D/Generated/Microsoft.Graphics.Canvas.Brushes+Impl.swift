// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

public enum __IMPL_Microsoft_Graphics_Canvas_Brushes {
    public enum ICanvasBrushBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CMicrosoft_CGraphics_CCanvas_CBrushes_CICanvasBrush
        public typealias SwiftABI = __ABI_Microsoft_Graphics_Canvas_Brushes.ICanvasBrush
        public typealias SwiftProjection = AnyICanvasBrush
        public static func from(abi: ComPtr<CABI>?) -> SwiftProjection? {
            guard let abi = abi else { return nil }
            return ICanvasBrushImpl(abi)
        }

        public static func makeAbi() -> CABI {
            let vtblPtr = withUnsafeMutablePointer(to: &__ABI_Microsoft_Graphics_Canvas_Brushes.ICanvasBrushVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class ICanvasBrushImpl: ICanvasBrush, WinRTAbiImpl {
        fileprivate typealias Bridge = ICanvasBrushBridge
        fileprivate let _default: Bridge.SwiftABI
        fileprivate var thisPtr: WindowsFoundation.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.SwiftABI(fromAbi)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.graphics.canvas.brushes.icanvasbrush.device)
        fileprivate var device : Win2D.CanvasDevice! {
            get { try! _default.get_DeviceImpl() }
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.graphics.canvas.brushes.icanvasbrush.opacity)
        fileprivate var opacity : Float {
            get { try! _default.get_OpacityImpl() }
            set { try! _default.put_OpacityImpl(newValue) }
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.graphics.canvas.brushes.icanvasbrush.transform)
        fileprivate var transform : WindowsFoundation.Matrix3x2 {
            get { try! _default.get_TransformImpl() }
            set { try! _default.put_TransformImpl(newValue) }
        }

        private lazy var _IClosable: __ABI_Windows_Foundation.IClosable! = getInterfaceForCaching()
        /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.graphics.canvas.brushes.icanvasbrush.close)
        fileprivate func close() throws {
            try _IClosable.CloseImpl()
        }

    }

}
