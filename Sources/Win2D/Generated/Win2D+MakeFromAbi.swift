// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

fileprivate func makeICanvasImageFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_Graphics_Canvas.ICanvasImage = try! abi.QueryInterface()
    return __IMPL_Microsoft_Graphics_Canvas.ICanvasImageBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICanvasResourceCreatorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_Graphics_Canvas.ICanvasResourceCreator = try! abi.QueryInterface()
    return __IMPL_Microsoft_Graphics_Canvas.ICanvasResourceCreatorBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICanvasResourceCreatorWithDpiFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_Graphics_Canvas.ICanvasResourceCreatorWithDpi = try! abi.QueryInterface()
    return __IMPL_Microsoft_Graphics_Canvas.ICanvasResourceCreatorWithDpiBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICanvasBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_Graphics_Canvas_Brushes.ICanvasBrush = try! abi.QueryInterface()
    return __IMPL_Microsoft_Graphics_Canvas_Brushes.ICanvasBrushBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICanvasPathReceiverFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_Graphics_Canvas_Geometry.ICanvasPathReceiver = try! abi.QueryInterface()
    return __IMPL_Microsoft_Graphics_Canvas_Geometry.ICanvasPathReceiverBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICanvasSvgAttributeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_Graphics_Canvas_Svg.ICanvasSvgAttribute = try! abi.QueryInterface()
    return __IMPL_Microsoft_Graphics_Canvas_Svg.ICanvasSvgAttributeBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICanvasSvgElementFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_Graphics_Canvas_Svg.ICanvasSvgElement = try! abi.QueryInterface()
    return __IMPL_Microsoft_Graphics_Canvas_Svg.ICanvasSvgElementBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICanvasTextInlineObjectFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_Graphics_Canvas_Text.ICanvasTextInlineObject = try! abi.QueryInterface()
    return __IMPL_Microsoft_Graphics_Canvas_Text.ICanvasTextInlineObjectBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICanvasTextRendererFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_Graphics_Canvas_Text.ICanvasTextRenderer = try! abi.QueryInterface()
    return __IMPL_Microsoft_Graphics_Canvas_Text.ICanvasTextRendererBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeCanvasActiveLayerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasActiveLayer(fromAbi: abi)
}

fileprivate func makeCanvasBitmapFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasBitmap(fromAbi: abi)
}

fileprivate func makeCanvasCommandListFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasCommandList(fromAbi: abi)
}

fileprivate func makeCanvasDeviceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasDevice(fromAbi: abi)
}

fileprivate func makeCanvasDrawingSessionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasDrawingSession(fromAbi: abi)
}

fileprivate func makeCanvasLockFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasLock(fromAbi: abi)
}

fileprivate func makeCanvasRenderTargetFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasRenderTarget(fromAbi: abi)
}

fileprivate func makeCanvasSpriteBatchFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasSpriteBatch(fromAbi: abi)
}

fileprivate func makeCanvasSwapChainFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasSwapChain(fromAbi: abi)
}

fileprivate func makeCanvasVirtualBitmapFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasVirtualBitmap(fromAbi: abi)
}

fileprivate func makeCanvasCachedGeometryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasCachedGeometry(fromAbi: abi)
}

fileprivate func makeCanvasGeometryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasGeometry(fromAbi: abi)
}

fileprivate func makeCanvasGradientMeshFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasGradientMesh(fromAbi: abi)
}

fileprivate func makeCanvasPathBuilderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasPathBuilder(fromAbi: abi)
}

fileprivate func makeCanvasStrokeStyleFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasStrokeStyle(fromAbi: abi)
}

fileprivate func makeCanvasSvgDocumentFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasSvgDocument(fromAbi: abi)
}

fileprivate func makeCanvasSvgNamedElementFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasSvgNamedElement(fromAbi: abi)
}

fileprivate func makeCanvasSvgPaintAttributeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasSvgPaintAttribute(fromAbi: abi)
}

fileprivate func makeCanvasSvgPathAttributeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasSvgPathAttribute(fromAbi: abi)
}

fileprivate func makeCanvasSvgPointsAttributeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasSvgPointsAttribute(fromAbi: abi)
}

fileprivate func makeCanvasSvgStrokeDashArrayAttributeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasSvgStrokeDashArrayAttribute(fromAbi: abi)
}

fileprivate func makeCanvasSvgTextElementFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasSvgTextElement(fromAbi: abi)
}

fileprivate func makeCanvasFontFaceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasFontFace(fromAbi: abi)
}

fileprivate func makeCanvasTextFormatFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasTextFormat(fromAbi: abi)
}

fileprivate func makeCanvasTextLayoutFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasTextLayout(fromAbi: abi)
}

fileprivate func makeCanvasTextRenderingParametersFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasTextRenderingParameters(fromAbi: abi)
}

fileprivate func makeCanvasTypographyFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CanvasTypography(fromAbi: abi)
}

@_spi(__MakeFromAbi_DoNotImport)
public class __MakeFromAbi: MakeFromAbi {
    public static func from(typeName: String, abi: WindowsFoundation.IInspectable) -> Any? {
        switch typeName {
            case "ICanvasImage": return makeICanvasImageFrom(abi: abi)
            case "ICanvasResourceCreator": return makeICanvasResourceCreatorFrom(abi: abi)
            case "ICanvasResourceCreatorWithDpi": return makeICanvasResourceCreatorWithDpiFrom(abi: abi)
            case "ICanvasBrush": return makeICanvasBrushFrom(abi: abi)
            case "ICanvasPathReceiver": return makeICanvasPathReceiverFrom(abi: abi)
            case "ICanvasSvgAttribute": return makeICanvasSvgAttributeFrom(abi: abi)
            case "ICanvasSvgElement": return makeICanvasSvgElementFrom(abi: abi)
            case "ICanvasTextInlineObject": return makeICanvasTextInlineObjectFrom(abi: abi)
            case "ICanvasTextRenderer": return makeICanvasTextRendererFrom(abi: abi)
            case "CanvasActiveLayer": return makeCanvasActiveLayerFrom(abi: abi)
            case "CanvasBitmap": return makeCanvasBitmapFrom(abi: abi)
            case "CanvasCommandList": return makeCanvasCommandListFrom(abi: abi)
            case "CanvasDevice": return makeCanvasDeviceFrom(abi: abi)
            case "CanvasDrawingSession": return makeCanvasDrawingSessionFrom(abi: abi)
            case "CanvasLock": return makeCanvasLockFrom(abi: abi)
            case "CanvasRenderTarget": return makeCanvasRenderTargetFrom(abi: abi)
            case "CanvasSpriteBatch": return makeCanvasSpriteBatchFrom(abi: abi)
            case "CanvasSwapChain": return makeCanvasSwapChainFrom(abi: abi)
            case "CanvasVirtualBitmap": return makeCanvasVirtualBitmapFrom(abi: abi)
            case "CanvasCachedGeometry": return makeCanvasCachedGeometryFrom(abi: abi)
            case "CanvasGeometry": return makeCanvasGeometryFrom(abi: abi)
            case "CanvasGradientMesh": return makeCanvasGradientMeshFrom(abi: abi)
            case "CanvasPathBuilder": return makeCanvasPathBuilderFrom(abi: abi)
            case "CanvasStrokeStyle": return makeCanvasStrokeStyleFrom(abi: abi)
            case "CanvasSvgDocument": return makeCanvasSvgDocumentFrom(abi: abi)
            case "CanvasSvgNamedElement": return makeCanvasSvgNamedElementFrom(abi: abi)
            case "CanvasSvgPaintAttribute": return makeCanvasSvgPaintAttributeFrom(abi: abi)
            case "CanvasSvgPathAttribute": return makeCanvasSvgPathAttributeFrom(abi: abi)
            case "CanvasSvgPointsAttribute": return makeCanvasSvgPointsAttributeFrom(abi: abi)
            case "CanvasSvgStrokeDashArrayAttribute": return makeCanvasSvgStrokeDashArrayAttributeFrom(abi: abi)
            case "CanvasSvgTextElement": return makeCanvasSvgTextElementFrom(abi: abi)
            case "CanvasFontFace": return makeCanvasFontFaceFrom(abi: abi)
            case "CanvasTextFormat": return makeCanvasTextFormatFrom(abi: abi)
            case "CanvasTextLayout": return makeCanvasTextLayoutFrom(abi: abi)
            case "CanvasTextRenderingParameters": return makeCanvasTextRenderingParametersFrom(abi: abi)
            case "CanvasTypography": return makeCanvasTypographyFrom(abi: abi)
            default: return nil
        }
    }
}
