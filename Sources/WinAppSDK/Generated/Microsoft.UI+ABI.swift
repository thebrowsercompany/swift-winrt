// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import UWP
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CMicrosoft_CUI_CIClosableNotifier: WindowsFoundation.IID {
    .init(Data1: 0x2989E93B, Data2: 0xED0F, Data3: 0x5E79, Data4: ( 0x90,0xF2,0xEA,0xC5,0x92,0xFC,0x6E,0x6A ))// 2989E93B-ED0F-5E79-90F2-EAC592FC6E6A
}

private var IID___x_ABI_CMicrosoft_CUI_CIColorHelper: WindowsFoundation.IID {
    .init(Data1: 0x3ADDDCCD, Data2: 0x3949, Data3: 0x585B, Data4: ( 0xA5,0x66,0xCC,0xB8,0x35,0x0D,0xD2,0x21 ))// 3ADDDCCD-3949-585B-A566-CCB8350DD221
}

private var IID___x_ABI_CMicrosoft_CUI_CIColorHelperStatics: WindowsFoundation.IID {
    .init(Data1: 0x1D1D85A1, Data2: 0xEB63, Data3: 0x538A, Data4: ( 0x84,0xF0,0x01,0x92,0x10,0xBC,0x40,0x6B ))// 1D1D85A1-EB63-538A-84F0-019210BC406B
}

private var IID___x_ABI_CMicrosoft_CUI_CIColors: WindowsFoundation.IID {
    .init(Data1: 0x8CF15863, Data2: 0x8411, Data3: 0x5AFD, Data4: ( 0x94,0x6C,0x32,0x8E,0x04,0xDA,0x2F,0x2F ))// 8CF15863-8411-5AFD-946C-328E04DA2F2F
}

private var IID___x_ABI_CMicrosoft_CUI_CIColorsStatics: WindowsFoundation.IID {
    .init(Data1: 0x8620A5B0, Data2: 0x015A, Data3: 0x57AC, Data4: ( 0xA3,0xF3,0x89,0x5D,0x0B,0x12,0x69,0xAE ))// 8620A5B0-015A-57AC-A3F3-895D0B1269AE
}

private var IID___x_ABI_CMicrosoft_CUI_CIClosableNotifierHandler: WindowsFoundation.IID {
    .init(Data1: 0x478CEC68, Data2: 0xEA8E, Data3: 0x52FC, Data4: ( 0x87,0xE2,0xC8,0x19,0xDE,0x00,0x0F,0x92 ))// 478CEC68-EA8E-52FC-87E2-C819DE000F92
}

public enum __ABI_Microsoft_UI {
    public class IClosableNotifier: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CIClosableNotifier }

        open func get_IsClosedImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIClosableNotifier.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsClosed(pThis, &value))
            }
            return .init(from: value)
        }

        open func add_ClosedImpl(_ handler: WinAppSDK.ClosableNotifierHandler?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = __ABI_Microsoft_UI.ClosableNotifierHandlerWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIClosableNotifier.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_Closed(pThis, _handler, &token))
            }
            return token
        }

        open func remove_ClosedImpl(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIClosableNotifier.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_Closed(pThis, token))
            }
        }

        open func add_FrameworkClosedImpl(_ handler: WinAppSDK.ClosableNotifierHandler?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = __ABI_Microsoft_UI.ClosableNotifierHandlerWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIClosableNotifier.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_FrameworkClosed(pThis, _handler, &token))
            }
            return token
        }

        open func remove_FrameworkClosedImpl(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIClosableNotifier.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_FrameworkClosed(pThis, token))
            }
        }

    }

    internal static var IClosableNotifierVTable: __x_ABI_CMicrosoft_CUI_CIClosableNotifierVtbl = .init(
        QueryInterface: { IClosableNotifierWrapper.queryInterface($0, $1, $2) },
        AddRef: { IClosableNotifierWrapper.addRef($0) },
        Release: { IClosableNotifierWrapper.release($0) },
        GetIids: {
            let size = MemoryLayout<WindowsFoundation.IID>.size
            let iids = CoTaskMemAlloc(UInt64(size) * 3).assumingMemoryBound(to: WindowsFoundation.IID.self)
            iids[0] = IUnknown.IID
            iids[1] = IInspectable.IID
            iids[2] = __ABI_Microsoft_UI.IClosableNotifierWrapper.IID
            $1!.pointee = 3
            $2!.pointee = iids
            return S_OK
        },

        GetRuntimeClassName: {
            _ = $0
            let hstring = try! HString("Microsoft.UI.IClosableNotifier").detach()
            $1!.pointee = hstring
            return S_OK
        },

        GetTrustLevel: {
            _ = $0
            $1!.pointee = TrustLevel(rawValue: 0)
            return S_OK
        },

        get_IsClosed: {
            guard let __unwrapped__instance = IClosableNotifierWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let value = __unwrapped__instance.isClosed
            $1?.initialize(to: .init(from: value))
            return S_OK
        },

        add_Closed: {
            guard let __unwrapped__instance = IClosableNotifierWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            guard let handler = __ABI_Microsoft_UI.ClosableNotifierHandlerWrapper.unwrapFrom(abi: ComPtr($1)) else { return E_INVALIDARG }
            let token = __unwrapped__instance.closed.addHandler(handler)
            $2?.initialize(to: .from(swift: token))
            return S_OK
        },

        remove_Closed: {
            guard let __unwrapped__instance = IClosableNotifierWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let token: EventRegistrationToken = $1
            __unwrapped__instance.closed.removeHandler(token)
            return S_OK
        },

        add_FrameworkClosed: {
            guard let __unwrapped__instance = IClosableNotifierWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            guard let handler = __ABI_Microsoft_UI.ClosableNotifierHandlerWrapper.unwrapFrom(abi: ComPtr($1)) else { return E_INVALIDARG }
            let token = __unwrapped__instance.frameworkClosed.addHandler(handler)
            $2?.initialize(to: .from(swift: token))
            return S_OK
        },

        remove_FrameworkClosed: {
            guard let __unwrapped__instance = IClosableNotifierWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let token: EventRegistrationToken = $1
            __unwrapped__instance.frameworkClosed.removeHandler(token)
            return S_OK
        }
    )

    public typealias IClosableNotifierWrapper = InterfaceWrapperBase<__IMPL_Microsoft_UI.IClosableNotifierBridge>
    public class IColorHelper: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CIColorHelper }

    }

    public class IColorHelperStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CIColorHelperStatics }

        internal func FromArgbImpl(_ a: UInt8, _ r: UInt8, _ g: UInt8, _ b: UInt8) throws -> UWP.Color {
            var result: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorHelperStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.FromArgb(pThis, a, r, g, b, &result))
            }
            return .from(abi: result)
        }

    }

    public class IColors: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CIColors }

    }

    public class IColorsStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CIColorsStatics }

        internal func get_AliceBlueImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AliceBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_AntiqueWhiteImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AntiqueWhite(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_AquaImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Aqua(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_AquamarineImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Aquamarine(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_AzureImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Azure(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_BeigeImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Beige(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_BisqueImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Bisque(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_BlackImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Black(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_BlanchedAlmondImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_BlanchedAlmond(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_BlueImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Blue(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_BlueVioletImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_BlueViolet(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_BrownImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Brown(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_BurlyWoodImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_BurlyWood(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_CadetBlueImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_CadetBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_ChartreuseImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Chartreuse(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_ChocolateImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Chocolate(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_CoralImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Coral(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_CornflowerBlueImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_CornflowerBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_CornsilkImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Cornsilk(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_CrimsonImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Crimson(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_CyanImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Cyan(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DarkBlueImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DarkCyanImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkCyan(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DarkGoldenrodImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkGoldenrod(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DarkGrayImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkGray(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DarkGreenImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DarkKhakiImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkKhaki(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DarkMagentaImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkMagenta(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DarkOliveGreenImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkOliveGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DarkOrangeImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkOrange(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DarkOrchidImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkOrchid(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DarkRedImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkRed(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DarkSalmonImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkSalmon(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DarkSeaGreenImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkSeaGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DarkSlateBlueImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkSlateBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DarkSlateGrayImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkSlateGray(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DarkTurquoiseImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkTurquoise(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DarkVioletImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DarkViolet(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DeepPinkImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DeepPink(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DeepSkyBlueImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DeepSkyBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DimGrayImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DimGray(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DodgerBlueImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DodgerBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_FirebrickImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Firebrick(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_FloralWhiteImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_FloralWhite(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_ForestGreenImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ForestGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_FuchsiaImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Fuchsia(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_GainsboroImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Gainsboro(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_GhostWhiteImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_GhostWhite(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_GoldImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Gold(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_GoldenrodImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Goldenrod(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_GrayImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Gray(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_GreenImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Green(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_GreenYellowImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_GreenYellow(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_HoneydewImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Honeydew(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_HotPinkImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_HotPink(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_IndianRedImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IndianRed(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_IndigoImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Indigo(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_IvoryImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Ivory(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_KhakiImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Khaki(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_LavenderImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Lavender(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_LavenderBlushImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LavenderBlush(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_LawnGreenImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LawnGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_LemonChiffonImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LemonChiffon(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_LightBlueImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_LightCoralImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightCoral(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_LightCyanImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightCyan(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_LightGoldenrodYellowImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightGoldenrodYellow(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_LightGreenImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_LightGrayImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightGray(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_LightPinkImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightPink(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_LightSalmonImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightSalmon(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_LightSeaGreenImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightSeaGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_LightSkyBlueImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightSkyBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_LightSlateGrayImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightSlateGray(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_LightSteelBlueImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightSteelBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_LightYellowImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LightYellow(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_LimeImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Lime(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_LimeGreenImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LimeGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_LinenImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Linen(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_MagentaImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Magenta(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_MaroonImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Maroon(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_MediumAquamarineImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumAquamarine(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_MediumBlueImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_MediumOrchidImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumOrchid(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_MediumPurpleImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumPurple(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_MediumSeaGreenImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumSeaGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_MediumSlateBlueImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumSlateBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_MediumSpringGreenImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumSpringGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_MediumTurquoiseImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumTurquoise(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_MediumVioletRedImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediumVioletRed(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_MidnightBlueImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MidnightBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_MintCreamImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MintCream(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_MistyRoseImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MistyRose(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_MoccasinImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Moccasin(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_NavajoWhiteImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_NavajoWhite(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_NavyImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Navy(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_OldLaceImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_OldLace(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_OliveImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Olive(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_OliveDrabImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_OliveDrab(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_OrangeImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Orange(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_OrangeRedImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_OrangeRed(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_OrchidImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Orchid(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_PaleGoldenrodImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PaleGoldenrod(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_PaleGreenImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PaleGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_PaleTurquoiseImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PaleTurquoise(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_PaleVioletRedImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PaleVioletRed(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_PapayaWhipImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PapayaWhip(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_PeachPuffImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PeachPuff(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_PeruImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Peru(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_PinkImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Pink(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_PlumImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Plum(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_PowderBlueImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PowderBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_PurpleImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Purple(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_RedImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Red(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_RosyBrownImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RosyBrown(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_RoyalBlueImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RoyalBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_SaddleBrownImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SaddleBrown(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_SalmonImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Salmon(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_SandyBrownImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SandyBrown(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_SeaGreenImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SeaGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_SeaShellImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SeaShell(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_SiennaImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Sienna(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_SilverImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Silver(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_SkyBlueImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SkyBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_SlateBlueImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SlateBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_SlateGrayImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SlateGray(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_SnowImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Snow(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_SpringGreenImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SpringGreen(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_SteelBlueImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SteelBlue(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_TanImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Tan(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_TealImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Teal(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_ThistleImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Thistle(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_TomatoImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Tomato(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_TransparentImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Transparent(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_TurquoiseImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Turquoise(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_VioletImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Violet(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_WheatImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Wheat(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_WhiteImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_White(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_WhiteSmokeImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_WhiteSmoke(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_YellowImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Yellow(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_YellowGreenImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIColorsStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_YellowGreen(pThis, &value))
            }
            return .from(abi: value)
        }

    }

}
extension __x_ABI_CMicrosoft_CUI_CDisplayId {
        public static func from(swift: WinAppSDK.DisplayId) -> __x_ABI_CMicrosoft_CUI_CDisplayId {
            .init(Value: swift.value)
        }
    }
    extension __x_ABI_CMicrosoft_CUI_CIconId {
        public static func from(swift: WinAppSDK.IconId) -> __x_ABI_CMicrosoft_CUI_CIconId {
            .init(Value: swift.value)
        }
    }
    extension __x_ABI_CMicrosoft_CUI_CWindowId {
        public static func from(swift: WinAppSDK.WindowId) -> __x_ABI_CMicrosoft_CUI_CWindowId {
            .init(Value: swift.value)
        }
    }
    // MARK - ClosableNotifierHandler
extension __ABI_Microsoft_UI {
    public class ClosableNotifierHandler: WindowsFoundation.IUnknown {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CIClosableNotifierHandler }

        open func InvokeImpl() throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CIClosableNotifierHandler.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Invoke(pThis))
            }
        }

    }


    typealias ClosableNotifierHandlerWrapper = InterfaceWrapperBase<__IMPL_Microsoft_UI.ClosableNotifierHandlerBridge>
    internal static var ClosableNotifierHandlerVTable: __x_ABI_CMicrosoft_CUI_CIClosableNotifierHandlerVtbl = .init(
        QueryInterface: { ClosableNotifierHandlerWrapper.queryInterface($0, $1, $2) },
        AddRef: { ClosableNotifierHandlerWrapper.addRef($0) },
        Release: { ClosableNotifierHandlerWrapper.release($0) },
        Invoke: {
            guard let __unwrapped__instance = ClosableNotifierHandlerWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            __unwrapped__instance()
            return S_OK
        }
    )
}
public extension WinRTDelegateBridge where CABI == __x_ABI_CMicrosoft_CUI_CIClosableNotifierHandler {
    static func makeAbi() -> CABI {
        let vtblPtr = withUnsafeMutablePointer(to: &__ABI_Microsoft_UI.ClosableNotifierHandlerVTable) { $0 }
        return .init(lpVtbl:vtblPtr)
    }
}

