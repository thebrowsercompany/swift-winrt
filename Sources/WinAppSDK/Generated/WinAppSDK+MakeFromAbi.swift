// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

fileprivate func makeIClosableNotifierFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI.IClosableNotifier = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI.IClosableNotifierBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIAnimationObjectFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Composition.IAnimationObject = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Composition.IAnimationObjectBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICompositionAnimationBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Composition.ICompositionAnimationBase = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Composition.ICompositionAnimationBaseBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICompositionSupportsSystemBackdropFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Composition.ICompositionSupportsSystemBackdrop = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Composition.ICompositionSupportsSystemBackdropBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICompositionSurfaceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Composition.ICompositionSurface = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Composition.ICompositionSurfaceBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIVisualElementFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Composition.IVisualElement = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Composition.IVisualElementBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIVisualElement2From(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Composition.IVisualElement2 = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Composition.IVisualElement2Bridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICompositionInteractionSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Composition_Interactions.ICompositionInteractionSource = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Composition_Interactions.ICompositionInteractionSourceBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIInteractionTrackerOwnerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerOwner = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Composition_Interactions.IInteractionTrackerOwnerBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeISystemBackdropControllerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Composition_SystemBackdrops.ISystemBackdropController = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Composition_SystemBackdrops.ISystemBackdropControllerBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeISystemBackdropControllerWithTargetsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Composition_SystemBackdrops.ISystemBackdropControllerWithTargets = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Composition_SystemBackdrops.ISystemBackdropControllerWithTargetsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIContentSiteBridgeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Content.IContentSiteBridge = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Content.IContentSiteBridgeBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIPointerPointTransformFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Input.IPointerPointTransform = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Input.IPointerPointTransformBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIResourceContextFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_Windows_ApplicationModel_Resources.IResourceContext = try! abi.QueryInterface()
    return __IMPL_Microsoft_Windows_ApplicationModel_Resources.IResourceContextBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIResourceManagerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_Windows_ApplicationModel_Resources.IResourceManager = try! abi.QueryInterface()
    return __IMPL_Microsoft_Windows_ApplicationModel_Resources.IResourceManagerBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeColorHelperFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ColorHelper(fromAbi: abi)
}

fileprivate func makeColorsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Colors(fromAbi: abi)
}

fileprivate func makeAmbientLightFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AmbientLight(fromAbi: abi)
}

fileprivate func makeAnimationControllerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AnimationController(fromAbi: abi)
}

fileprivate func makeAnimationPropertyInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AnimationPropertyInfo(fromAbi: abi)
}

fileprivate func makeBackEasingFunctionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BackEasingFunction(fromAbi: abi)
}

fileprivate func makeBooleanKeyFrameAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BooleanKeyFrameAnimation(fromAbi: abi)
}

fileprivate func makeBounceEasingFunctionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BounceEasingFunction(fromAbi: abi)
}

fileprivate func makeBounceScalarNaturalMotionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BounceScalarNaturalMotionAnimation(fromAbi: abi)
}

fileprivate func makeBounceVector2NaturalMotionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BounceVector2NaturalMotionAnimation(fromAbi: abi)
}

fileprivate func makeBounceVector3NaturalMotionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BounceVector3NaturalMotionAnimation(fromAbi: abi)
}

fileprivate func makeCircleEasingFunctionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CircleEasingFunction(fromAbi: abi)
}

fileprivate func makeColorKeyFrameAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ColorKeyFrameAnimation(fromAbi: abi)
}

fileprivate func makeCompositionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionAnimation(fromAbi: abi)
}

fileprivate func makeCompositionAnimationGroupFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionAnimationGroup(fromAbi: abi)
}

fileprivate func makeCompositionBackdropBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionBackdropBrush(fromAbi: abi)
}

fileprivate func makeCompositionBatchCompletedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionBatchCompletedEventArgs(fromAbi: abi)
}

fileprivate func makeCompositionBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionBrush(fromAbi: abi)
}

fileprivate func makeCompositionClipFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionClip(fromAbi: abi)
}

fileprivate func makeCompositionColorBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionColorBrush(fromAbi: abi)
}

fileprivate func makeCompositionColorGradientStopFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionColorGradientStop(fromAbi: abi)
}

fileprivate func makeCompositionColorGradientStopCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionColorGradientStopCollection(fromAbi: abi)
}

fileprivate func makeCompositionCommitBatchFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionCommitBatch(fromAbi: abi)
}

fileprivate func makeCompositionContainerShapeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionContainerShape(fromAbi: abi)
}

fileprivate func makeCompositionEasingFunctionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionEasingFunction(fromAbi: abi)
}

fileprivate func makeCompositionEffectBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionEffectBrush(fromAbi: abi)
}

fileprivate func makeCompositionEffectFactoryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionEffectFactory(fromAbi: abi)
}

fileprivate func makeCompositionEllipseGeometryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionEllipseGeometry(fromAbi: abi)
}

fileprivate func makeCompositionGeometricClipFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionGeometricClip(fromAbi: abi)
}

fileprivate func makeCompositionGeometryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionGeometry(fromAbi: abi)
}

fileprivate func makeCompositionGradientBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionGradientBrush(fromAbi: abi)
}

fileprivate func makeCompositionLightFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionLight(fromAbi: abi)
}

fileprivate func makeCompositionLineGeometryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionLineGeometry(fromAbi: abi)
}

fileprivate func makeCompositionLinearGradientBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionLinearGradientBrush(fromAbi: abi)
}

fileprivate func makeCompositionMaskBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionMaskBrush(fromAbi: abi)
}

fileprivate func makeCompositionNineGridBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionNineGridBrush(fromAbi: abi)
}

fileprivate func makeCompositionObjectFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionObject(fromAbi: abi)
}

fileprivate func makeCompositionPathFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionPath(fromAbi: abi)
}

fileprivate func makeCompositionPathGeometryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionPathGeometry(fromAbi: abi)
}

fileprivate func makeCompositionProjectedShadowFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionProjectedShadow(fromAbi: abi)
}

fileprivate func makeCompositionProjectedShadowCasterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionProjectedShadowCaster(fromAbi: abi)
}

fileprivate func makeCompositionProjectedShadowCasterCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionProjectedShadowCasterCollection(fromAbi: abi)
}

fileprivate func makeCompositionProjectedShadowReceiverFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionProjectedShadowReceiver(fromAbi: abi)
}

fileprivate func makeCompositionProjectedShadowReceiverUnorderedCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionProjectedShadowReceiverUnorderedCollection(fromAbi: abi)
}

fileprivate func makeCompositionPropertySetFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionPropertySet(fromAbi: abi)
}

fileprivate func makeCompositionRadialGradientBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionRadialGradientBrush(fromAbi: abi)
}

fileprivate func makeCompositionRectangleGeometryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionRectangleGeometry(fromAbi: abi)
}

fileprivate func makeCompositionRoundedRectangleGeometryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionRoundedRectangleGeometry(fromAbi: abi)
}

fileprivate func makeCompositionScopedBatchFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionScopedBatch(fromAbi: abi)
}

fileprivate func makeCompositionShadowFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionShadow(fromAbi: abi)
}

fileprivate func makeCompositionShapeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionShape(fromAbi: abi)
}

fileprivate func makeCompositionShapeCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionShapeCollection(fromAbi: abi)
}

fileprivate func makeCompositionSpriteShapeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionSpriteShape(fromAbi: abi)
}

fileprivate func makeCompositionStrokeDashArrayFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionStrokeDashArray(fromAbi: abi)
}

fileprivate func makeCompositionSurfaceBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionSurfaceBrush(fromAbi: abi)
}

fileprivate func makeCompositionViewBoxFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionViewBox(fromAbi: abi)
}

fileprivate func makeCompositionVisualSurfaceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionVisualSurface(fromAbi: abi)
}

fileprivate func makeCompositorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Compositor(fromAbi: abi)
}

fileprivate func makeContainerVisualFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContainerVisual(fromAbi: abi)
}

fileprivate func makeCubicBezierEasingFunctionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CubicBezierEasingFunction(fromAbi: abi)
}

fileprivate func makeDistantLightFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DistantLight(fromAbi: abi)
}

fileprivate func makeDropShadowFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DropShadow(fromAbi: abi)
}

fileprivate func makeElasticEasingFunctionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ElasticEasingFunction(fromAbi: abi)
}

fileprivate func makeExponentialEasingFunctionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ExponentialEasingFunction(fromAbi: abi)
}

fileprivate func makeExpressionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ExpressionAnimation(fromAbi: abi)
}

fileprivate func makeImplicitAnimationCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ImplicitAnimationCollection(fromAbi: abi)
}

fileprivate func makeInitialValueExpressionCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InitialValueExpressionCollection(fromAbi: abi)
}

fileprivate func makeInsetClipFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InsetClip(fromAbi: abi)
}

fileprivate func makeKeyFrameAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return KeyFrameAnimation(fromAbi: abi)
}

fileprivate func makeLayerVisualFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LayerVisual(fromAbi: abi)
}

fileprivate func makeLinearEasingFunctionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LinearEasingFunction(fromAbi: abi)
}

fileprivate func makeNaturalMotionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NaturalMotionAnimation(fromAbi: abi)
}

fileprivate func makePathKeyFrameAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PathKeyFrameAnimation(fromAbi: abi)
}

fileprivate func makePointLightFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointLight(fromAbi: abi)
}

fileprivate func makePowerEasingFunctionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PowerEasingFunction(fromAbi: abi)
}

fileprivate func makeQuaternionKeyFrameAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return QuaternionKeyFrameAnimation(fromAbi: abi)
}

fileprivate func makeRectangleClipFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RectangleClip(fromAbi: abi)
}

fileprivate func makeRedirectVisualFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RedirectVisual(fromAbi: abi)
}

fileprivate func makeScalarKeyFrameAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScalarKeyFrameAnimation(fromAbi: abi)
}

fileprivate func makeScalarNaturalMotionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScalarNaturalMotionAnimation(fromAbi: abi)
}

fileprivate func makeShapeVisualFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ShapeVisual(fromAbi: abi)
}

fileprivate func makeSineEasingFunctionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SineEasingFunction(fromAbi: abi)
}

fileprivate func makeSpotLightFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SpotLight(fromAbi: abi)
}

fileprivate func makeSpringScalarNaturalMotionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SpringScalarNaturalMotionAnimation(fromAbi: abi)
}

fileprivate func makeSpringVector2NaturalMotionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SpringVector2NaturalMotionAnimation(fromAbi: abi)
}

fileprivate func makeSpringVector3NaturalMotionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SpringVector3NaturalMotionAnimation(fromAbi: abi)
}

fileprivate func makeSpriteVisualFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SpriteVisual(fromAbi: abi)
}

fileprivate func makeStepEasingFunctionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StepEasingFunction(fromAbi: abi)
}

fileprivate func makeVector2KeyFrameAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Vector2KeyFrameAnimation(fromAbi: abi)
}

fileprivate func makeVector2NaturalMotionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Vector2NaturalMotionAnimation(fromAbi: abi)
}

fileprivate func makeVector3KeyFrameAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Vector3KeyFrameAnimation(fromAbi: abi)
}

fileprivate func makeVector3NaturalMotionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Vector3NaturalMotionAnimation(fromAbi: abi)
}

fileprivate func makeVector4KeyFrameAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Vector4KeyFrameAnimation(fromAbi: abi)
}

fileprivate func makeVisualFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Visual(fromAbi: abi)
}

fileprivate func makeVisualCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VisualCollection(fromAbi: abi)
}

fileprivate func makeVisualUnorderedCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VisualUnorderedCollection(fromAbi: abi)
}

fileprivate func makeCompositionConditionalValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionConditionalValue(fromAbi: abi)
}

fileprivate func makeCompositionInteractionSourceCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionInteractionSourceCollection(fromAbi: abi)
}

fileprivate func makeInteractionSourceConfigurationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InteractionSourceConfiguration(fromAbi: abi)
}

fileprivate func makeInteractionTrackerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InteractionTracker(fromAbi: abi)
}

fileprivate func makeInteractionTrackerCustomAnimationStateEnteredArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InteractionTrackerCustomAnimationStateEnteredArgs(fromAbi: abi)
}

fileprivate func makeInteractionTrackerIdleStateEnteredArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InteractionTrackerIdleStateEnteredArgs(fromAbi: abi)
}

fileprivate func makeInteractionTrackerInertiaModifierFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InteractionTrackerInertiaModifier(fromAbi: abi)
}

fileprivate func makeInteractionTrackerInertiaMotionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InteractionTrackerInertiaMotion(fromAbi: abi)
}

fileprivate func makeInteractionTrackerInertiaNaturalMotionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InteractionTrackerInertiaNaturalMotion(fromAbi: abi)
}

fileprivate func makeInteractionTrackerInertiaRestingValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InteractionTrackerInertiaRestingValue(fromAbi: abi)
}

fileprivate func makeInteractionTrackerInertiaStateEnteredArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InteractionTrackerInertiaStateEnteredArgs(fromAbi: abi)
}

fileprivate func makeInteractionTrackerInteractingStateEnteredArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InteractionTrackerInteractingStateEnteredArgs(fromAbi: abi)
}

fileprivate func makeInteractionTrackerRequestIgnoredArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InteractionTrackerRequestIgnoredArgs(fromAbi: abi)
}

fileprivate func makeInteractionTrackerValuesChangedArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InteractionTrackerValuesChangedArgs(fromAbi: abi)
}

fileprivate func makeInteractionTrackerVector2InertiaModifierFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InteractionTrackerVector2InertiaModifier(fromAbi: abi)
}

fileprivate func makeInteractionTrackerVector2InertiaNaturalMotionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InteractionTrackerVector2InertiaNaturalMotion(fromAbi: abi)
}

fileprivate func makeVisualInteractionSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VisualInteractionSource(fromAbi: abi)
}

fileprivate func makeDesktopAcrylicControllerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DesktopAcrylicController(fromAbi: abi)
}

fileprivate func makeMicaControllerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MicaController(fromAbi: abi)
}

fileprivate func makeSystemBackdropConfigurationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SystemBackdropConfiguration(fromAbi: abi)
}

fileprivate func makeContentCoordinateConverterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentCoordinateConverter(fromAbi: abi)
}

fileprivate func makeContentDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentDeferral(fromAbi: abi)
}

fileprivate func makeContentEnvironmentSettingChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentEnvironmentSettingChangedEventArgs(fromAbi: abi)
}

fileprivate func makeContentEnvironmentStateChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentEnvironmentStateChangedEventArgs(fromAbi: abi)
}

fileprivate func makeContentIslandFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentIsland(fromAbi: abi)
}

fileprivate func makeContentIslandAutomationProviderRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentIslandAutomationProviderRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeContentIslandEnvironmentFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentIslandEnvironment(fromAbi: abi)
}

fileprivate func makeContentIslandStateChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentIslandStateChangedEventArgs(fromAbi: abi)
}

fileprivate func makeContentSiteEnvironmentViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentSiteEnvironmentView(fromAbi: abi)
}

fileprivate func makeContentSiteViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentSiteView(fromAbi: abi)
}

fileprivate func makeDesktopChildSiteBridgeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DesktopChildSiteBridge(fromAbi: abi)
}

fileprivate func makeDesktopSiteBridgeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DesktopSiteBridge(fromAbi: abi)
}

fileprivate func makeDispatcherExitDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DispatcherExitDeferral(fromAbi: abi)
}

fileprivate func makeDispatcherQueueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DispatcherQueue(fromAbi: abi)
}

fileprivate func makeDispatcherQueueControllerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DispatcherQueueController(fromAbi: abi)
}

fileprivate func makeDispatcherQueueShutdownStartingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DispatcherQueueShutdownStartingEventArgs(fromAbi: abi)
}

fileprivate func makeDispatcherQueueTimerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DispatcherQueueTimer(fromAbi: abi)
}

fileprivate func makeCharacterReceivedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CharacterReceivedEventArgs(fromAbi: abi)
}

fileprivate func makeContextMenuKeyEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContextMenuKeyEventArgs(fromAbi: abi)
}

fileprivate func makeCrossSlidingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CrossSlidingEventArgs(fromAbi: abi)
}

fileprivate func makeDraggingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DraggingEventArgs(fromAbi: abi)
}

fileprivate func makeFocusChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FocusChangedEventArgs(fromAbi: abi)
}

fileprivate func makeFocusNavigationRequestFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FocusNavigationRequest(fromAbi: abi)
}

fileprivate func makeFocusNavigationRequestEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FocusNavigationRequestEventArgs(fromAbi: abi)
}

fileprivate func makeGestureRecognizerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return GestureRecognizer(fromAbi: abi)
}

fileprivate func makeHoldingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HoldingEventArgs(fromAbi: abi)
}

fileprivate func makeInputActivationListenerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputActivationListener(fromAbi: abi)
}

fileprivate func makeInputActivationListenerActivationChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputActivationListenerActivationChangedEventArgs(fromAbi: abi)
}

fileprivate func makeInputCursorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputCursor(fromAbi: abi)
}

fileprivate func makeInputCustomCursorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputCustomCursor(fromAbi: abi)
}

fileprivate func makeInputDesktopNamedResourceCursorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputDesktopNamedResourceCursor(fromAbi: abi)
}

fileprivate func makeInputDesktopResourceCursorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputDesktopResourceCursor(fromAbi: abi)
}

fileprivate func makeInputFocusControllerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputFocusController(fromAbi: abi)
}

fileprivate func makeInputFocusNavigationHostFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputFocusNavigationHost(fromAbi: abi)
}

fileprivate func makeInputKeyboardSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputKeyboardSource(fromAbi: abi)
}

fileprivate func makeInputLightDismissActionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputLightDismissAction(fromAbi: abi)
}

fileprivate func makeInputLightDismissEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputLightDismissEventArgs(fromAbi: abi)
}

fileprivate func makeInputNonClientPointerSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputNonClientPointerSource(fromAbi: abi)
}

fileprivate func makeInputObjectFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputObject(fromAbi: abi)
}

fileprivate func makeInputPointerSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputPointerSource(fromAbi: abi)
}

fileprivate func makeInputPreTranslateKeyboardSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputPreTranslateKeyboardSource(fromAbi: abi)
}

fileprivate func makeInputSystemCursorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputSystemCursor(fromAbi: abi)
}

fileprivate func makeKeyEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return KeyEventArgs(fromAbi: abi)
}

fileprivate func makeManipulationCompletedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ManipulationCompletedEventArgs(fromAbi: abi)
}

fileprivate func makeManipulationInertiaStartingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ManipulationInertiaStartingEventArgs(fromAbi: abi)
}

fileprivate func makeManipulationStartedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ManipulationStartedEventArgs(fromAbi: abi)
}

fileprivate func makeManipulationUpdatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ManipulationUpdatedEventArgs(fromAbi: abi)
}

fileprivate func makeMouseWheelParametersFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MouseWheelParameters(fromAbi: abi)
}

fileprivate func makeNonClientCaptionTappedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NonClientCaptionTappedEventArgs(fromAbi: abi)
}

fileprivate func makeNonClientPointerEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NonClientPointerEventArgs(fromAbi: abi)
}

fileprivate func makeNonClientRegionsChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NonClientRegionsChangedEventArgs(fromAbi: abi)
}

fileprivate func makePointerEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointerEventArgs(fromAbi: abi)
}

fileprivate func makePointerPointFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointerPoint(fromAbi: abi)
}

fileprivate func makePointerPointPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointerPointProperties(fromAbi: abi)
}

fileprivate func makePointerPredictorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointerPredictor(fromAbi: abi)
}

fileprivate func makeRightTappedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RightTappedEventArgs(fromAbi: abi)
}

fileprivate func makeTappedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TappedEventArgs(fromAbi: abi)
}

fileprivate func makeAppWindowFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppWindow(fromAbi: abi)
}

fileprivate func makeAppWindowChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppWindowChangedEventArgs(fromAbi: abi)
}

fileprivate func makeAppWindowClosingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppWindowClosingEventArgs(fromAbi: abi)
}

fileprivate func makeAppWindowPresenterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppWindowPresenter(fromAbi: abi)
}

fileprivate func makeAppWindowTitleBarFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppWindowTitleBar(fromAbi: abi)
}

fileprivate func makeDisplayAreaFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DisplayArea(fromAbi: abi)
}

fileprivate func makeDisplayAreaWatcherFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DisplayAreaWatcher(fromAbi: abi)
}

fileprivate func makeFullScreenPresenterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FullScreenPresenter(fromAbi: abi)
}

fileprivate func makeOverlappedPresenterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return OverlappedPresenter(fromAbi: abi)
}

fileprivate func makeAppActivationArgumentsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppActivationArguments(fromAbi: abi)
}

fileprivate func makeAppInstanceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppInstance(fromAbi: abi)
}

fileprivate func makeResourceCandidateFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ResourceCandidate(fromAbi: abi)
}

fileprivate func makeResourceContextFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ResourceContext(fromAbi: abi)
}

fileprivate func makeResourceManagerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ResourceManager(fromAbi: abi)
}

fileprivate func makeResourceMapFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ResourceMap(fromAbi: abi)
}

fileprivate func makeResourceNotFoundEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ResourceNotFoundEventArgs(fromAbi: abi)
}

@_spi(__MakeFromAbi_DoNotImport)
public class __MakeFromAbi: MakeFromAbi {
    public static func from(typeName: String, abi: WindowsFoundation.IInspectable) -> Any? {
        switch typeName {
            case "IClosableNotifier": return makeIClosableNotifierFrom(abi: abi)
            case "IAnimationObject": return makeIAnimationObjectFrom(abi: abi)
            case "ICompositionAnimationBase": return makeICompositionAnimationBaseFrom(abi: abi)
            case "ICompositionSupportsSystemBackdrop": return makeICompositionSupportsSystemBackdropFrom(abi: abi)
            case "ICompositionSurface": return makeICompositionSurfaceFrom(abi: abi)
            case "IVisualElement": return makeIVisualElementFrom(abi: abi)
            case "IVisualElement2": return makeIVisualElement2From(abi: abi)
            case "ICompositionInteractionSource": return makeICompositionInteractionSourceFrom(abi: abi)
            case "IInteractionTrackerOwner": return makeIInteractionTrackerOwnerFrom(abi: abi)
            case "ISystemBackdropController": return makeISystemBackdropControllerFrom(abi: abi)
            case "ISystemBackdropControllerWithTargets": return makeISystemBackdropControllerWithTargetsFrom(abi: abi)
            case "IContentSiteBridge": return makeIContentSiteBridgeFrom(abi: abi)
            case "IPointerPointTransform": return makeIPointerPointTransformFrom(abi: abi)
            case "IResourceContext": return makeIResourceContextFrom(abi: abi)
            case "IResourceManager": return makeIResourceManagerFrom(abi: abi)
            case "ColorHelper": return makeColorHelperFrom(abi: abi)
            case "Colors": return makeColorsFrom(abi: abi)
            case "AmbientLight": return makeAmbientLightFrom(abi: abi)
            case "AnimationController": return makeAnimationControllerFrom(abi: abi)
            case "AnimationPropertyInfo": return makeAnimationPropertyInfoFrom(abi: abi)
            case "BackEasingFunction": return makeBackEasingFunctionFrom(abi: abi)
            case "BooleanKeyFrameAnimation": return makeBooleanKeyFrameAnimationFrom(abi: abi)
            case "BounceEasingFunction": return makeBounceEasingFunctionFrom(abi: abi)
            case "BounceScalarNaturalMotionAnimation": return makeBounceScalarNaturalMotionAnimationFrom(abi: abi)
            case "BounceVector2NaturalMotionAnimation": return makeBounceVector2NaturalMotionAnimationFrom(abi: abi)
            case "BounceVector3NaturalMotionAnimation": return makeBounceVector3NaturalMotionAnimationFrom(abi: abi)
            case "CircleEasingFunction": return makeCircleEasingFunctionFrom(abi: abi)
            case "ColorKeyFrameAnimation": return makeColorKeyFrameAnimationFrom(abi: abi)
            case "CompositionAnimation": return makeCompositionAnimationFrom(abi: abi)
            case "CompositionAnimationGroup": return makeCompositionAnimationGroupFrom(abi: abi)
            case "CompositionBackdropBrush": return makeCompositionBackdropBrushFrom(abi: abi)
            case "CompositionBatchCompletedEventArgs": return makeCompositionBatchCompletedEventArgsFrom(abi: abi)
            case "CompositionBrush": return makeCompositionBrushFrom(abi: abi)
            case "CompositionClip": return makeCompositionClipFrom(abi: abi)
            case "CompositionColorBrush": return makeCompositionColorBrushFrom(abi: abi)
            case "CompositionColorGradientStop": return makeCompositionColorGradientStopFrom(abi: abi)
            case "CompositionColorGradientStopCollection": return makeCompositionColorGradientStopCollectionFrom(abi: abi)
            case "CompositionCommitBatch": return makeCompositionCommitBatchFrom(abi: abi)
            case "CompositionContainerShape": return makeCompositionContainerShapeFrom(abi: abi)
            case "CompositionEasingFunction": return makeCompositionEasingFunctionFrom(abi: abi)
            case "CompositionEffectBrush": return makeCompositionEffectBrushFrom(abi: abi)
            case "CompositionEffectFactory": return makeCompositionEffectFactoryFrom(abi: abi)
            case "CompositionEllipseGeometry": return makeCompositionEllipseGeometryFrom(abi: abi)
            case "CompositionGeometricClip": return makeCompositionGeometricClipFrom(abi: abi)
            case "CompositionGeometry": return makeCompositionGeometryFrom(abi: abi)
            case "CompositionGradientBrush": return makeCompositionGradientBrushFrom(abi: abi)
            case "CompositionLight": return makeCompositionLightFrom(abi: abi)
            case "CompositionLineGeometry": return makeCompositionLineGeometryFrom(abi: abi)
            case "CompositionLinearGradientBrush": return makeCompositionLinearGradientBrushFrom(abi: abi)
            case "CompositionMaskBrush": return makeCompositionMaskBrushFrom(abi: abi)
            case "CompositionNineGridBrush": return makeCompositionNineGridBrushFrom(abi: abi)
            case "CompositionObject": return makeCompositionObjectFrom(abi: abi)
            case "CompositionPath": return makeCompositionPathFrom(abi: abi)
            case "CompositionPathGeometry": return makeCompositionPathGeometryFrom(abi: abi)
            case "CompositionProjectedShadow": return makeCompositionProjectedShadowFrom(abi: abi)
            case "CompositionProjectedShadowCaster": return makeCompositionProjectedShadowCasterFrom(abi: abi)
            case "CompositionProjectedShadowCasterCollection": return makeCompositionProjectedShadowCasterCollectionFrom(abi: abi)
            case "CompositionProjectedShadowReceiver": return makeCompositionProjectedShadowReceiverFrom(abi: abi)
            case "CompositionProjectedShadowReceiverUnorderedCollection": return makeCompositionProjectedShadowReceiverUnorderedCollectionFrom(abi: abi)
            case "CompositionPropertySet": return makeCompositionPropertySetFrom(abi: abi)
            case "CompositionRadialGradientBrush": return makeCompositionRadialGradientBrushFrom(abi: abi)
            case "CompositionRectangleGeometry": return makeCompositionRectangleGeometryFrom(abi: abi)
            case "CompositionRoundedRectangleGeometry": return makeCompositionRoundedRectangleGeometryFrom(abi: abi)
            case "CompositionScopedBatch": return makeCompositionScopedBatchFrom(abi: abi)
            case "CompositionShadow": return makeCompositionShadowFrom(abi: abi)
            case "CompositionShape": return makeCompositionShapeFrom(abi: abi)
            case "CompositionShapeCollection": return makeCompositionShapeCollectionFrom(abi: abi)
            case "CompositionSpriteShape": return makeCompositionSpriteShapeFrom(abi: abi)
            case "CompositionStrokeDashArray": return makeCompositionStrokeDashArrayFrom(abi: abi)
            case "CompositionSurfaceBrush": return makeCompositionSurfaceBrushFrom(abi: abi)
            case "CompositionViewBox": return makeCompositionViewBoxFrom(abi: abi)
            case "CompositionVisualSurface": return makeCompositionVisualSurfaceFrom(abi: abi)
            case "Compositor": return makeCompositorFrom(abi: abi)
            case "ContainerVisual": return makeContainerVisualFrom(abi: abi)
            case "CubicBezierEasingFunction": return makeCubicBezierEasingFunctionFrom(abi: abi)
            case "DistantLight": return makeDistantLightFrom(abi: abi)
            case "DropShadow": return makeDropShadowFrom(abi: abi)
            case "ElasticEasingFunction": return makeElasticEasingFunctionFrom(abi: abi)
            case "ExponentialEasingFunction": return makeExponentialEasingFunctionFrom(abi: abi)
            case "ExpressionAnimation": return makeExpressionAnimationFrom(abi: abi)
            case "ImplicitAnimationCollection": return makeImplicitAnimationCollectionFrom(abi: abi)
            case "InitialValueExpressionCollection": return makeInitialValueExpressionCollectionFrom(abi: abi)
            case "InsetClip": return makeInsetClipFrom(abi: abi)
            case "KeyFrameAnimation": return makeKeyFrameAnimationFrom(abi: abi)
            case "LayerVisual": return makeLayerVisualFrom(abi: abi)
            case "LinearEasingFunction": return makeLinearEasingFunctionFrom(abi: abi)
            case "NaturalMotionAnimation": return makeNaturalMotionAnimationFrom(abi: abi)
            case "PathKeyFrameAnimation": return makePathKeyFrameAnimationFrom(abi: abi)
            case "PointLight": return makePointLightFrom(abi: abi)
            case "PowerEasingFunction": return makePowerEasingFunctionFrom(abi: abi)
            case "QuaternionKeyFrameAnimation": return makeQuaternionKeyFrameAnimationFrom(abi: abi)
            case "RectangleClip": return makeRectangleClipFrom(abi: abi)
            case "RedirectVisual": return makeRedirectVisualFrom(abi: abi)
            case "ScalarKeyFrameAnimation": return makeScalarKeyFrameAnimationFrom(abi: abi)
            case "ScalarNaturalMotionAnimation": return makeScalarNaturalMotionAnimationFrom(abi: abi)
            case "ShapeVisual": return makeShapeVisualFrom(abi: abi)
            case "SineEasingFunction": return makeSineEasingFunctionFrom(abi: abi)
            case "SpotLight": return makeSpotLightFrom(abi: abi)
            case "SpringScalarNaturalMotionAnimation": return makeSpringScalarNaturalMotionAnimationFrom(abi: abi)
            case "SpringVector2NaturalMotionAnimation": return makeSpringVector2NaturalMotionAnimationFrom(abi: abi)
            case "SpringVector3NaturalMotionAnimation": return makeSpringVector3NaturalMotionAnimationFrom(abi: abi)
            case "SpriteVisual": return makeSpriteVisualFrom(abi: abi)
            case "StepEasingFunction": return makeStepEasingFunctionFrom(abi: abi)
            case "Vector2KeyFrameAnimation": return makeVector2KeyFrameAnimationFrom(abi: abi)
            case "Vector2NaturalMotionAnimation": return makeVector2NaturalMotionAnimationFrom(abi: abi)
            case "Vector3KeyFrameAnimation": return makeVector3KeyFrameAnimationFrom(abi: abi)
            case "Vector3NaturalMotionAnimation": return makeVector3NaturalMotionAnimationFrom(abi: abi)
            case "Vector4KeyFrameAnimation": return makeVector4KeyFrameAnimationFrom(abi: abi)
            case "Visual": return makeVisualFrom(abi: abi)
            case "VisualCollection": return makeVisualCollectionFrom(abi: abi)
            case "VisualUnorderedCollection": return makeVisualUnorderedCollectionFrom(abi: abi)
            case "CompositionConditionalValue": return makeCompositionConditionalValueFrom(abi: abi)
            case "CompositionInteractionSourceCollection": return makeCompositionInteractionSourceCollectionFrom(abi: abi)
            case "InteractionSourceConfiguration": return makeInteractionSourceConfigurationFrom(abi: abi)
            case "InteractionTracker": return makeInteractionTrackerFrom(abi: abi)
            case "InteractionTrackerCustomAnimationStateEnteredArgs": return makeInteractionTrackerCustomAnimationStateEnteredArgsFrom(abi: abi)
            case "InteractionTrackerIdleStateEnteredArgs": return makeInteractionTrackerIdleStateEnteredArgsFrom(abi: abi)
            case "InteractionTrackerInertiaModifier": return makeInteractionTrackerInertiaModifierFrom(abi: abi)
            case "InteractionTrackerInertiaMotion": return makeInteractionTrackerInertiaMotionFrom(abi: abi)
            case "InteractionTrackerInertiaNaturalMotion": return makeInteractionTrackerInertiaNaturalMotionFrom(abi: abi)
            case "InteractionTrackerInertiaRestingValue": return makeInteractionTrackerInertiaRestingValueFrom(abi: abi)
            case "InteractionTrackerInertiaStateEnteredArgs": return makeInteractionTrackerInertiaStateEnteredArgsFrom(abi: abi)
            case "InteractionTrackerInteractingStateEnteredArgs": return makeInteractionTrackerInteractingStateEnteredArgsFrom(abi: abi)
            case "InteractionTrackerRequestIgnoredArgs": return makeInteractionTrackerRequestIgnoredArgsFrom(abi: abi)
            case "InteractionTrackerValuesChangedArgs": return makeInteractionTrackerValuesChangedArgsFrom(abi: abi)
            case "InteractionTrackerVector2InertiaModifier": return makeInteractionTrackerVector2InertiaModifierFrom(abi: abi)
            case "InteractionTrackerVector2InertiaNaturalMotion": return makeInteractionTrackerVector2InertiaNaturalMotionFrom(abi: abi)
            case "VisualInteractionSource": return makeVisualInteractionSourceFrom(abi: abi)
            case "DesktopAcrylicController": return makeDesktopAcrylicControllerFrom(abi: abi)
            case "MicaController": return makeMicaControllerFrom(abi: abi)
            case "SystemBackdropConfiguration": return makeSystemBackdropConfigurationFrom(abi: abi)
            case "ContentCoordinateConverter": return makeContentCoordinateConverterFrom(abi: abi)
            case "ContentDeferral": return makeContentDeferralFrom(abi: abi)
            case "ContentEnvironmentSettingChangedEventArgs": return makeContentEnvironmentSettingChangedEventArgsFrom(abi: abi)
            case "ContentEnvironmentStateChangedEventArgs": return makeContentEnvironmentStateChangedEventArgsFrom(abi: abi)
            case "ContentIsland": return makeContentIslandFrom(abi: abi)
            case "ContentIslandAutomationProviderRequestedEventArgs": return makeContentIslandAutomationProviderRequestedEventArgsFrom(abi: abi)
            case "ContentIslandEnvironment": return makeContentIslandEnvironmentFrom(abi: abi)
            case "ContentIslandStateChangedEventArgs": return makeContentIslandStateChangedEventArgsFrom(abi: abi)
            case "ContentSiteEnvironmentView": return makeContentSiteEnvironmentViewFrom(abi: abi)
            case "ContentSiteView": return makeContentSiteViewFrom(abi: abi)
            case "DesktopChildSiteBridge": return makeDesktopChildSiteBridgeFrom(abi: abi)
            case "DesktopSiteBridge": return makeDesktopSiteBridgeFrom(abi: abi)
            case "DispatcherExitDeferral": return makeDispatcherExitDeferralFrom(abi: abi)
            case "DispatcherQueue": return makeDispatcherQueueFrom(abi: abi)
            case "DispatcherQueueController": return makeDispatcherQueueControllerFrom(abi: abi)
            case "DispatcherQueueShutdownStartingEventArgs": return makeDispatcherQueueShutdownStartingEventArgsFrom(abi: abi)
            case "DispatcherQueueTimer": return makeDispatcherQueueTimerFrom(abi: abi)
            case "CharacterReceivedEventArgs": return makeCharacterReceivedEventArgsFrom(abi: abi)
            case "ContextMenuKeyEventArgs": return makeContextMenuKeyEventArgsFrom(abi: abi)
            case "CrossSlidingEventArgs": return makeCrossSlidingEventArgsFrom(abi: abi)
            case "DraggingEventArgs": return makeDraggingEventArgsFrom(abi: abi)
            case "FocusChangedEventArgs": return makeFocusChangedEventArgsFrom(abi: abi)
            case "FocusNavigationRequest": return makeFocusNavigationRequestFrom(abi: abi)
            case "FocusNavigationRequestEventArgs": return makeFocusNavigationRequestEventArgsFrom(abi: abi)
            case "GestureRecognizer": return makeGestureRecognizerFrom(abi: abi)
            case "HoldingEventArgs": return makeHoldingEventArgsFrom(abi: abi)
            case "InputActivationListener": return makeInputActivationListenerFrom(abi: abi)
            case "InputActivationListenerActivationChangedEventArgs": return makeInputActivationListenerActivationChangedEventArgsFrom(abi: abi)
            case "InputCursor": return makeInputCursorFrom(abi: abi)
            case "InputCustomCursor": return makeInputCustomCursorFrom(abi: abi)
            case "InputDesktopNamedResourceCursor": return makeInputDesktopNamedResourceCursorFrom(abi: abi)
            case "InputDesktopResourceCursor": return makeInputDesktopResourceCursorFrom(abi: abi)
            case "InputFocusController": return makeInputFocusControllerFrom(abi: abi)
            case "InputFocusNavigationHost": return makeInputFocusNavigationHostFrom(abi: abi)
            case "InputKeyboardSource": return makeInputKeyboardSourceFrom(abi: abi)
            case "InputLightDismissAction": return makeInputLightDismissActionFrom(abi: abi)
            case "InputLightDismissEventArgs": return makeInputLightDismissEventArgsFrom(abi: abi)
            case "InputNonClientPointerSource": return makeInputNonClientPointerSourceFrom(abi: abi)
            case "InputObject": return makeInputObjectFrom(abi: abi)
            case "InputPointerSource": return makeInputPointerSourceFrom(abi: abi)
            case "InputPreTranslateKeyboardSource": return makeInputPreTranslateKeyboardSourceFrom(abi: abi)
            case "InputSystemCursor": return makeInputSystemCursorFrom(abi: abi)
            case "KeyEventArgs": return makeKeyEventArgsFrom(abi: abi)
            case "ManipulationCompletedEventArgs": return makeManipulationCompletedEventArgsFrom(abi: abi)
            case "ManipulationInertiaStartingEventArgs": return makeManipulationInertiaStartingEventArgsFrom(abi: abi)
            case "ManipulationStartedEventArgs": return makeManipulationStartedEventArgsFrom(abi: abi)
            case "ManipulationUpdatedEventArgs": return makeManipulationUpdatedEventArgsFrom(abi: abi)
            case "MouseWheelParameters": return makeMouseWheelParametersFrom(abi: abi)
            case "NonClientCaptionTappedEventArgs": return makeNonClientCaptionTappedEventArgsFrom(abi: abi)
            case "NonClientPointerEventArgs": return makeNonClientPointerEventArgsFrom(abi: abi)
            case "NonClientRegionsChangedEventArgs": return makeNonClientRegionsChangedEventArgsFrom(abi: abi)
            case "PointerEventArgs": return makePointerEventArgsFrom(abi: abi)
            case "PointerPoint": return makePointerPointFrom(abi: abi)
            case "PointerPointProperties": return makePointerPointPropertiesFrom(abi: abi)
            case "PointerPredictor": return makePointerPredictorFrom(abi: abi)
            case "RightTappedEventArgs": return makeRightTappedEventArgsFrom(abi: abi)
            case "TappedEventArgs": return makeTappedEventArgsFrom(abi: abi)
            case "AppWindow": return makeAppWindowFrom(abi: abi)
            case "AppWindowChangedEventArgs": return makeAppWindowChangedEventArgsFrom(abi: abi)
            case "AppWindowClosingEventArgs": return makeAppWindowClosingEventArgsFrom(abi: abi)
            case "AppWindowPresenter": return makeAppWindowPresenterFrom(abi: abi)
            case "AppWindowTitleBar": return makeAppWindowTitleBarFrom(abi: abi)
            case "DisplayArea": return makeDisplayAreaFrom(abi: abi)
            case "DisplayAreaWatcher": return makeDisplayAreaWatcherFrom(abi: abi)
            case "FullScreenPresenter": return makeFullScreenPresenterFrom(abi: abi)
            case "OverlappedPresenter": return makeOverlappedPresenterFrom(abi: abi)
            case "AppActivationArguments": return makeAppActivationArgumentsFrom(abi: abi)
            case "AppInstance": return makeAppInstanceFrom(abi: abi)
            case "ResourceCandidate": return makeResourceCandidateFrom(abi: abi)
            case "ResourceContext": return makeResourceContextFrom(abi: abi)
            case "ResourceManager": return makeResourceManagerFrom(abi: abi)
            case "ResourceMap": return makeResourceMapFrom(abi: abi)
            case "ResourceNotFoundEventArgs": return makeResourceNotFoundEventArgsFrom(abi: abi)
            default: return nil
        }
    }
}
