// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CICompositionConditionalValue: WindowsFoundation.IID {
    .init(Data1: 0x3743DDA0, Data2: 0xFBE2, Data3: 0x5ECF, Data4: ( 0x9E,0x80,0x46,0x38,0xA0,0x11,0xF7,0x07 ))// 3743DDA0-FBE2-5ECF-9E80-4638A011F707
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CICompositionConditionalValueStatics: WindowsFoundation.IID {
    .init(Data1: 0xDF133C1F, Data2: 0xA185, Data3: 0x536C, Data4: ( 0xB5,0x4B,0x8F,0x36,0x92,0x12,0xA5,0x81 ))// DF133C1F-A185-536C-B54B-8F369212A581
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CICompositionInteractionSource: WindowsFoundation.IID {
    .init(Data1: 0x711C72C0, Data2: 0xC406, Data3: 0x4A12, Data4: ( 0x85,0x9B,0xB4,0x4F,0x65,0x1A,0xF0,0x46 ))// 711C72C0-C406-4A12-859B-B44F651AF046
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CICompositionInteractionSourceCollection: WindowsFoundation.IID {
    .init(Data1: 0x9AA1B86B, Data2: 0xB002, Data3: 0x5E2E, Data4: ( 0xBB,0x2B,0x0E,0x2C,0x54,0x74,0x45,0xE1 ))// 9AA1B86B-B002-5E2E-BB2B-0E2C547445E1
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionSourceConfiguration: WindowsFoundation.IID {
    .init(Data1: 0x099E0124, Data2: 0xDADF, Data3: 0x5BC6, Data4: ( 0xA8,0x95,0x90,0x38,0x76,0x57,0x55,0x0F ))// 099E0124-DADF-5BC6-A895-90387657550F
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker: WindowsFoundation.IID {
    .init(Data1: 0x02D8EC1F, Data2: 0x8F04, Data3: 0x505E, Data4: ( 0xBD,0x1E,0x47,0xB2,0xA2,0x04,0xDE,0x51 ))// 02D8EC1F-8F04-505E-BD1E-47B2A204DE51
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker2: WindowsFoundation.IID {
    .init(Data1: 0x396D7FB1, Data2: 0x2FAD, Data3: 0x5508, Data4: ( 0x85,0x91,0x4F,0xF0,0xDC,0x5A,0x74,0x84 ))// 396D7FB1-2FAD-5508-8591-4FF0DC5A7484
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker3: WindowsFoundation.IID {
    .init(Data1: 0x239752CF, Data2: 0x266C, Data3: 0x5ACB, Data4: ( 0xAC,0xC3,0xB3,0xE3,0xEC,0xAF,0x4D,0x3F ))// 239752CF-266C-5ACB-ACC3-B3E3ECAF4D3F
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker4: WindowsFoundation.IID {
    .init(Data1: 0xA9A9CE02, Data2: 0x53C9, Data3: 0x5690, Data4: ( 0xA5,0x75,0xF3,0x40,0xB7,0xC2,0xFD,0xF2 ))// A9A9CE02-53C9-5690-A575-F340B7C2FDF2
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker5: WindowsFoundation.IID {
    .init(Data1: 0xDBFCD333, Data2: 0xC3BF, Data3: 0x5057, Data4: ( 0xA4,0x5E,0x25,0xED,0xF0,0x6E,0xBD,0x8F ))// DBFCD333-C3BF-5057-A45E-25EDF06EBD8F
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerCustomAnimationStateEnteredArgs: WindowsFoundation.IID {
    .init(Data1: 0x7464035C, Data2: 0xCFCE, Data3: 0x56DA, Data4: ( 0x94,0x72,0x42,0x0F,0x27,0x6B,0xD0,0xA5 ))// 7464035C-CFCE-56DA-9472-420F276BD0A5
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerCustomAnimationStateEnteredArgs2: WindowsFoundation.IID {
    .init(Data1: 0x06B99FBC, Data2: 0xD6A8, Data3: 0x5AE3, Data4: ( 0x88,0xB8,0xE9,0x16,0x21,0xBE,0xCB,0xD6 ))// 06B99FBC-D6A8-5AE3-88B8-E91621BECBD6
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerIdleStateEnteredArgs: WindowsFoundation.IID {
    .init(Data1: 0x199094AB, Data2: 0x15FD, Data3: 0x539C, Data4: ( 0x97,0xB8,0x96,0x4A,0x81,0x96,0xF7,0x77 ))// 199094AB-15FD-539C-97B8-964A8196F777
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerIdleStateEnteredArgs2: WindowsFoundation.IID {
    .init(Data1: 0x4EB213C0, Data2: 0x931C, Data3: 0x5164, Data4: ( 0x89,0x65,0x11,0xC0,0x18,0x6D,0x33,0x90 ))// 4EB213C0-931C-5164-8965-11C0186D3390
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaModifier: WindowsFoundation.IID {
    .init(Data1: 0x4D3A0C6B, Data2: 0xC508, Data3: 0x5029, Data4: ( 0xA4,0x7A,0xCB,0xF6,0x46,0x36,0xF0,0x10 ))// 4D3A0C6B-C508-5029-A47A-CBF64636F010
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaModifierFactory: WindowsFoundation.IID {
    .init(Data1: 0x6DEE5B33, Data2: 0x0B5A, Data3: 0x57B1, Data4: ( 0x85,0x37,0x93,0xD4,0xFD,0x03,0x8F,0x9F ))// 6DEE5B33-0B5A-57B1-8537-93D4FD038F9F
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaMotion: WindowsFoundation.IID {
    .init(Data1: 0x91F662C0, Data2: 0x3141, Data3: 0x5B5E, Data4: ( 0x86,0x2F,0xCF,0xC6,0x0B,0xEE,0x8C,0xD6 ))// 91F662C0-3141-5B5E-862F-CFC60BEE8CD6
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaMotionStatics: WindowsFoundation.IID {
    .init(Data1: 0xB0185A4F, Data2: 0x0059, Data3: 0x52C6, Data4: ( 0xA6,0x60,0x9A,0xED,0x0C,0x44,0xFF,0x7D ))// B0185A4F-0059-52C6-A660-9AED0C44FF7D
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaNaturalMotion: WindowsFoundation.IID {
    .init(Data1: 0x8C7482E0, Data2: 0x185D, Data3: 0x56B1, Data4: ( 0xB6,0x7F,0xFC,0xA4,0xFC,0xD1,0x3C,0xD2 ))// 8C7482E0-185D-56B1-B67F-FCA4FCD13CD2
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaNaturalMotionStatics: WindowsFoundation.IID {
    .init(Data1: 0x860EC143, Data2: 0xF165, Data3: 0x5298, Data4: ( 0xAB,0xF2,0x47,0x36,0x9D,0xD0,0x7F,0x10 ))// 860EC143-F165-5298-ABF2-47369DD07F10
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaRestingValue: WindowsFoundation.IID {
    .init(Data1: 0x1A2B20CD, Data2: 0x3371, Data3: 0x53FF, Data4: ( 0xA5,0x60,0xF4,0x84,0x7B,0x46,0x7D,0x73 ))// 1A2B20CD-3371-53FF-A560-F4847B467D73
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaRestingValueStatics: WindowsFoundation.IID {
    .init(Data1: 0xCF0F0414, Data2: 0x7FDF, Data3: 0x5284, Data4: ( 0xAE,0xEF,0x28,0xB7,0x1B,0x62,0xAA,0x4F ))// CF0F0414-7FDF-5284-AEEF-28B71B62AA4F
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaStateEnteredArgs: WindowsFoundation.IID {
    .init(Data1: 0x5B76C949, Data2: 0xA4D0, Data3: 0x5C9D, Data4: ( 0x92,0x92,0x70,0x13,0xAE,0x96,0x56,0xC7 ))// 5B76C949-A4D0-5C9D-9292-7013AE9656C7
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaStateEnteredArgs2: WindowsFoundation.IID {
    .init(Data1: 0xC42D7E8F, Data2: 0x7199, Data3: 0x57A9, Data4: ( 0x8A,0xEC,0x87,0x27,0x55,0x2B,0x13,0xE6 ))// C42D7E8F-7199-57A9-8AEC-8727552B13E6
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaStateEnteredArgs3: WindowsFoundation.IID {
    .init(Data1: 0xCE726CA0, Data2: 0x1C04, Data3: 0x531B, Data4: ( 0x99,0x51,0x4A,0xEC,0x99,0x69,0x52,0xE4 ))// CE726CA0-1C04-531B-9951-4AEC996952E4
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInteractingStateEnteredArgs: WindowsFoundation.IID {
    .init(Data1: 0x70D29B84, Data2: 0x0931, Data3: 0x5F17, Data4: ( 0xA8,0xA1,0x82,0xF8,0xF8,0x78,0x25,0x32 ))// 70D29B84-0931-5F17-A8A1-82F8F8782532
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInteractingStateEnteredArgs2: WindowsFoundation.IID {
    .init(Data1: 0x2F1FF38D, Data2: 0x2F51, Data3: 0x5CEB, Data4: ( 0x8D,0x09,0xBD,0xA1,0x51,0x9F,0x93,0x42 ))// 2F1FF38D-2F51-5CEB-8D09-BDA1519F9342
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerOwner: WindowsFoundation.IID {
    .init(Data1: 0x8869779D, Data2: 0x1D2A, Data3: 0x5816, Data4: ( 0x83,0x6A,0x68,0xA9,0x10,0x50,0x7D,0x87 ))// 8869779D-1D2A-5816-836A-68A910507D87
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerRequestIgnoredArgs: WindowsFoundation.IID {
    .init(Data1: 0xC276205E, Data2: 0xF7A5, Data3: 0x5BA2, Data4: ( 0xAD,0x45,0xD1,0x2C,0x3C,0x33,0x91,0x49 ))// C276205E-F7A5-5BA2-AD45-D12C3C339149
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerStatics: WindowsFoundation.IID {
    .init(Data1: 0x7AC9867A, Data2: 0xE16E, Data3: 0x56EF, Data4: ( 0x98,0x09,0xF6,0xE4,0x04,0x24,0x0F,0x50 ))// 7AC9867A-E16E-56EF-9809-F6E404240F50
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerStatics2: WindowsFoundation.IID {
    .init(Data1: 0x25658E4C, Data2: 0xB99F, Data3: 0x5108, Data4: ( 0xAA,0xB7,0x1C,0xC4,0x4F,0x11,0x50,0x8B ))// 25658E4C-B99F-5108-AAB7-1CC44F11508B
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerValuesChangedArgs: WindowsFoundation.IID {
    .init(Data1: 0x9B495BED, Data2: 0x1CF7, Data3: 0x55C1, Data4: ( 0x82,0xB9,0x80,0x22,0xCB,0xF3,0xC7,0x66 ))// 9B495BED-1CF7-55C1-82B9-8022CBF3C766
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerVector2InertiaModifier: WindowsFoundation.IID {
    .init(Data1: 0x4B8ED310, Data2: 0xCB61, Data3: 0x5F0A, Data4: ( 0xB9,0x9A,0x94,0x0C,0xDD,0x2C,0x42,0xB1 ))// 4B8ED310-CB61-5F0A-B99A-940CDD2C42B1
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerVector2InertiaModifierFactory: WindowsFoundation.IID {
    .init(Data1: 0x1B3FD240, Data2: 0xBA66, Data3: 0x5296, Data4: ( 0xB8,0x01,0x62,0xA2,0xA3,0x60,0x66,0x13 ))// 1B3FD240-BA66-5296-B801-62A2A3606613
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerVector2InertiaNaturalMotion: WindowsFoundation.IID {
    .init(Data1: 0x097BA1A6, Data2: 0xE077, Data3: 0x52D1, Data4: ( 0x86,0xD3,0x38,0xE3,0xF6,0x61,0x9D,0xDF ))// 097BA1A6-E077-52D1-86D3-38E3F6619DDF
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerVector2InertiaNaturalMotionStatics: WindowsFoundation.IID {
    .init(Data1: 0xCC24AB87, Data2: 0x9131, Data3: 0x5286, Data4: ( 0xB3,0xCE,0x1E,0xF9,0x7E,0x09,0x74,0xE6 ))// CC24AB87-9131-5286-B3CE-1EF97E0974E6
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource: WindowsFoundation.IID {
    .init(Data1: 0xEA595C95, Data2: 0xB9CB, Data3: 0x5CD4, Data4: ( 0xBB,0x9C,0x49,0x34,0xFF,0x32,0x90,0x63 ))// EA595C95-B9CB-5CD4-BB9C-4934FF329063
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource2: WindowsFoundation.IID {
    .init(Data1: 0xFF1132BA, Data2: 0xDC0D, Data3: 0x519E, Data4: ( 0xBE,0x49,0xBE,0x30,0x1E,0x52,0x30,0x6A ))// FF1132BA-DC0D-519E-BE49-BE301E52306A
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource3: WindowsFoundation.IID {
    .init(Data1: 0xD523BD66, Data2: 0xA05D, Data3: 0x5417, Data4: ( 0x8E,0x07,0x84,0xAE,0x3C,0xAF,0x97,0x52 ))// D523BD66-A05D-5417-8E07-84AE3CAF9752
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSourceObjectFactory: WindowsFoundation.IID {
    .init(Data1: 0xFEB73102, Data2: 0x238C, Data3: 0x52AA, Data4: ( 0x8E,0x03,0xB6,0x8D,0x5E,0xCC,0x44,0xB3 ))// FEB73102-238C-52AA-8E03-B68D5ECC44B3
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSourceStatics: WindowsFoundation.IID {
    .init(Data1: 0x5FC9C763, Data2: 0xE2E5, Data3: 0x530E, Data4: ( 0x87,0xCD,0xB9,0x31,0x18,0xAD,0xE8,0xA3 ))// 5FC9C763-E2E5-530E-87CD-B93118ADE8A3
}

private var IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSourceStatics2: WindowsFoundation.IID {
    .init(Data1: 0xA6B494FE, Data2: 0x12A1, Data3: 0x5A73, Data4: ( 0xB8,0x7E,0x4C,0x4E,0xF5,0x8E,0xAC,0x6C ))// A6B494FE-12A1-5A73-B87E-4C4EF58EAC6C
}

public enum __ABI_Microsoft_UI_Composition_Interactions {
    public class ICompositionConditionalValue: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CICompositionConditionalValue }

        internal func get_ConditionImpl() throws -> WinAppSDK.ExpressionAnimation? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CICompositionConditionalValue.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Condition(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_ConditionImpl(_ value: WinAppSDK.ExpressionAnimation?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CICompositionConditionalValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Condition(pThis, RawPointer(value)))
            }
        }

        internal func get_ValueImpl() throws -> WinAppSDK.ExpressionAnimation? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CICompositionConditionalValue.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Value(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_ValueImpl(_ value: WinAppSDK.ExpressionAnimation?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CICompositionConditionalValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Value(pThis, RawPointer(value)))
            }
        }

    }

    public class ICompositionConditionalValueStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CICompositionConditionalValueStatics }

        internal func CreateImpl(_ compositor: WinAppSDK.Compositor?) throws -> WinAppSDK.CompositionConditionalValue? {
            let (result) = try ComPtrs.initialize { resultAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CICompositionConditionalValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, RawPointer(compositor), &resultAbi))
                }
            }
            return .from(abi: result)
        }

    }

    public class ICompositionInteractionSource: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CICompositionInteractionSource }

    }

    internal static var ICompositionInteractionSourceVTable: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CICompositionInteractionSourceVtbl = .init(
        QueryInterface: { ICompositionInteractionSourceWrapper.queryInterface($0, $1, $2) },
        AddRef: { ICompositionInteractionSourceWrapper.addRef($0) },
        Release: { ICompositionInteractionSourceWrapper.release($0) },
        GetIids: {
            let size = MemoryLayout<WindowsFoundation.IID>.size
            let iids = CoTaskMemAlloc(UInt64(size) * 3).assumingMemoryBound(to: WindowsFoundation.IID.self)
            iids[0] = IUnknown.IID
            iids[1] = IInspectable.IID
            iids[2] = __ABI_Microsoft_UI_Composition_Interactions.ICompositionInteractionSourceWrapper.IID
            $1!.pointee = 3
            $2!.pointee = iids
            return S_OK
        },

        GetRuntimeClassName: {
            _ = $0
            let hstring = try! HString("Microsoft.UI.Composition.Interactions.ICompositionInteractionSource").detach()
            $1!.pointee = hstring
            return S_OK
        },

        GetTrustLevel: {
            _ = $0
            $1!.pointee = TrustLevel(rawValue: 0)
            return S_OK
        }
    )

    public typealias ICompositionInteractionSourceWrapper = InterfaceWrapperBase<__IMPL_Microsoft_UI_Composition_Interactions.ICompositionInteractionSourceBridge>
    public class ICompositionInteractionSourceCollection: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CICompositionInteractionSourceCollection }

        internal func get_CountImpl() throws -> Int32 {
            var value: INT32 = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CICompositionInteractionSourceCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Count(pThis, &value))
            }
            return value
        }

        internal func AddImpl(_ value: WinAppSDK.AnyICompositionInteractionSource?) throws {
            let valueWrapper = __ABI_Microsoft_UI_Composition_Interactions.ICompositionInteractionSourceWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CICompositionInteractionSourceCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Add(pThis, _value))
            }
        }

        internal func RemoveImpl(_ value: WinAppSDK.AnyICompositionInteractionSource?) throws {
            let valueWrapper = __ABI_Microsoft_UI_Composition_Interactions.ICompositionInteractionSourceWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CICompositionInteractionSourceCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Remove(pThis, _value))
            }
        }

        internal func RemoveAllImpl() throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CICompositionInteractionSourceCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.RemoveAll(pThis))
            }
        }

    }

    public class IInteractionSourceConfiguration: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionSourceConfiguration }

        internal func get_PositionXSourceModeImpl() throws -> WinAppSDK.InteractionSourceRedirectionMode {
            var value: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionSourceRedirectionMode = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionSourceConfiguration.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PositionXSourceMode(pThis, &value))
            }
            return value
        }

        internal func put_PositionXSourceModeImpl(_ value: WinAppSDK.InteractionSourceRedirectionMode) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionSourceConfiguration.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_PositionXSourceMode(pThis, value))
            }
        }

        internal func get_PositionYSourceModeImpl() throws -> WinAppSDK.InteractionSourceRedirectionMode {
            var value: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionSourceRedirectionMode = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionSourceConfiguration.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PositionYSourceMode(pThis, &value))
            }
            return value
        }

        internal func put_PositionYSourceModeImpl(_ value: WinAppSDK.InteractionSourceRedirectionMode) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionSourceConfiguration.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_PositionYSourceMode(pThis, value))
            }
        }

        internal func get_ScaleSourceModeImpl() throws -> WinAppSDK.InteractionSourceRedirectionMode {
            var value: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionSourceRedirectionMode = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionSourceConfiguration.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ScaleSourceMode(pThis, &value))
            }
            return value
        }

        internal func put_ScaleSourceModeImpl(_ value: WinAppSDK.InteractionSourceRedirectionMode) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionSourceConfiguration.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ScaleSourceMode(pThis, value))
            }
        }

    }

    public class IInteractionTracker: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker }

        internal func get_InteractionSourcesImpl() throws -> WinAppSDK.CompositionInteractionSourceCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_InteractionSources(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_IsPositionRoundingSuggestedImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsPositionRoundingSuggested(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_MaxPositionImpl() throws -> WindowsFoundation.Vector3 {
            var value: __x_ABI_CWindows_CFoundation_CNumerics_CVector3 = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MaxPosition(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_MaxPositionImpl(_ value: WindowsFoundation.Vector3) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_MaxPosition(pThis, .from(swift: value)))
            }
        }

        internal func get_MaxScaleImpl() throws -> Float {
            var value: FLOAT = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MaxScale(pThis, &value))
            }
            return value
        }

        internal func put_MaxScaleImpl(_ value: Float) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_MaxScale(pThis, value))
            }
        }

        internal func get_MinPositionImpl() throws -> WindowsFoundation.Vector3 {
            var value: __x_ABI_CWindows_CFoundation_CNumerics_CVector3 = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MinPosition(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_MinPositionImpl(_ value: WindowsFoundation.Vector3) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_MinPosition(pThis, .from(swift: value)))
            }
        }

        internal func get_MinScaleImpl() throws -> Float {
            var value: FLOAT = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MinScale(pThis, &value))
            }
            return value
        }

        internal func put_MinScaleImpl(_ value: Float) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_MinScale(pThis, value))
            }
        }

        internal func get_NaturalRestingPositionImpl() throws -> WindowsFoundation.Vector3 {
            var value: __x_ABI_CWindows_CFoundation_CNumerics_CVector3 = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_NaturalRestingPosition(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_NaturalRestingScaleImpl() throws -> Float {
            var value: FLOAT = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_NaturalRestingScale(pThis, &value))
            }
            return value
        }

        internal func get_OwnerImpl() throws -> WinAppSDK.AnyIInteractionTrackerOwner? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Owner(pThis, &valueAbi))
                }
            }
            return __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerOwnerWrapper.unwrapFrom(abi: value)
        }

        internal func get_PositionImpl() throws -> WindowsFoundation.Vector3 {
            var value: __x_ABI_CWindows_CFoundation_CNumerics_CVector3 = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Position(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_PositionInertiaDecayRateImpl() throws -> WindowsFoundation.Vector3? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_PositionInertiaDecayRate(pThis, &valueAbi))
                }
            }
            return WinAppSDK.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3Wrapper.unwrapFrom(abi: value)
        }

        internal func put_PositionInertiaDecayRateImpl(_ value: WindowsFoundation.Vector3?) throws {
            let valueWrapper = WinAppSDK.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3Wrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_PositionInertiaDecayRate(pThis, _value))
            }
        }

        internal func get_PositionVelocityInPixelsPerSecondImpl() throws -> WindowsFoundation.Vector3 {
            var value: __x_ABI_CWindows_CFoundation_CNumerics_CVector3 = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PositionVelocityInPixelsPerSecond(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_ScaleImpl() throws -> Float {
            var value: FLOAT = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Scale(pThis, &value))
            }
            return value
        }

        internal func get_ScaleInertiaDecayRateImpl() throws -> Float? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ScaleInertiaDecayRate(pThis, &valueAbi))
                }
            }
            return WinAppSDK.__x_ABI_C__FIReference_1_floatWrapper.unwrapFrom(abi: value)
        }

        internal func put_ScaleInertiaDecayRateImpl(_ value: Float?) throws {
            let valueWrapper = WinAppSDK.__x_ABI_C__FIReference_1_floatWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ScaleInertiaDecayRate(pThis, _value))
            }
        }

        internal func get_ScaleVelocityInPercentPerSecondImpl() throws -> Float {
            var value: FLOAT = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ScaleVelocityInPercentPerSecond(pThis, &value))
            }
            return value
        }

        internal func AdjustPositionXIfGreaterThanThresholdImpl(_ adjustment: Float, _ positionThreshold: Float) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.AdjustPositionXIfGreaterThanThreshold(pThis, adjustment, positionThreshold))
            }
        }

        internal func AdjustPositionYIfGreaterThanThresholdImpl(_ adjustment: Float, _ positionThreshold: Float) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.AdjustPositionYIfGreaterThanThreshold(pThis, adjustment, positionThreshold))
            }
        }

        internal func ConfigurePositionXInertiaModifiersImpl(_ modifiers: WindowsFoundation.AnyIIterable<WinAppSDK.InteractionTrackerInertiaModifier?>?) throws {
            let modifiersWrapper = WinAppSDK.__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CComposition__CInteractions__CInteractionTrackerInertiaModifierWrapper(modifiers)
            let _modifiers = try! modifiersWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ConfigurePositionXInertiaModifiers(pThis, _modifiers))
            }
        }

        internal func ConfigurePositionYInertiaModifiersImpl(_ modifiers: WindowsFoundation.AnyIIterable<WinAppSDK.InteractionTrackerInertiaModifier?>?) throws {
            let modifiersWrapper = WinAppSDK.__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CComposition__CInteractions__CInteractionTrackerInertiaModifierWrapper(modifiers)
            let _modifiers = try! modifiersWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ConfigurePositionYInertiaModifiers(pThis, _modifiers))
            }
        }

        internal func ConfigureScaleInertiaModifiersImpl(_ modifiers: WindowsFoundation.AnyIIterable<WinAppSDK.InteractionTrackerInertiaModifier?>?) throws {
            let modifiersWrapper = WinAppSDK.__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CComposition__CInteractions__CInteractionTrackerInertiaModifierWrapper(modifiers)
            let _modifiers = try! modifiersWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ConfigureScaleInertiaModifiers(pThis, _modifiers))
            }
        }

        internal func TryUpdatePositionImpl(_ value: WindowsFoundation.Vector3) throws -> Int32 {
            var result: INT32 = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryUpdatePosition(pThis, .from(swift: value), &result))
            }
            return result
        }

        internal func TryUpdatePositionByImpl(_ amount: WindowsFoundation.Vector3) throws -> Int32 {
            var result: INT32 = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryUpdatePositionBy(pThis, .from(swift: amount), &result))
            }
            return result
        }

        internal func TryUpdatePositionWithAnimationImpl(_ animation: WinAppSDK.CompositionAnimation?) throws -> Int32 {
            var result: INT32 = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryUpdatePositionWithAnimation(pThis, RawPointer(animation), &result))
            }
            return result
        }

        internal func TryUpdatePositionWithAdditionalVelocityImpl(_ velocityInPixelsPerSecond: WindowsFoundation.Vector3) throws -> Int32 {
            var result: INT32 = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryUpdatePositionWithAdditionalVelocity(pThis, .from(swift: velocityInPixelsPerSecond), &result))
            }
            return result
        }

        internal func TryUpdateScaleImpl(_ value: Float, _ centerPoint: WindowsFoundation.Vector3) throws -> Int32 {
            var result: INT32 = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryUpdateScale(pThis, value, .from(swift: centerPoint), &result))
            }
            return result
        }

        internal func TryUpdateScaleWithAnimationImpl(_ animation: WinAppSDK.CompositionAnimation?, _ centerPoint: WindowsFoundation.Vector3) throws -> Int32 {
            var result: INT32 = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryUpdateScaleWithAnimation(pThis, RawPointer(animation), .from(swift: centerPoint), &result))
            }
            return result
        }

        internal func TryUpdateScaleWithAdditionalVelocityImpl(_ velocityInPercentPerSecond: Float, _ centerPoint: WindowsFoundation.Vector3) throws -> Int32 {
            var result: INT32 = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryUpdateScaleWithAdditionalVelocity(pThis, velocityInPercentPerSecond, .from(swift: centerPoint), &result))
            }
            return result
        }

    }

    public class IInteractionTracker2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker2 }

        internal func ConfigureCenterPointXInertiaModifiersImpl(_ conditionalValues: WindowsFoundation.AnyIIterable<WinAppSDK.CompositionConditionalValue?>?) throws {
            let conditionalValuesWrapper = WinAppSDK.__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CComposition__CInteractions__CCompositionConditionalValueWrapper(conditionalValues)
            let _conditionalValues = try! conditionalValuesWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ConfigureCenterPointXInertiaModifiers(pThis, _conditionalValues))
            }
        }

        internal func ConfigureCenterPointYInertiaModifiersImpl(_ conditionalValues: WindowsFoundation.AnyIIterable<WinAppSDK.CompositionConditionalValue?>?) throws {
            let conditionalValuesWrapper = WinAppSDK.__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CComposition__CInteractions__CCompositionConditionalValueWrapper(conditionalValues)
            let _conditionalValues = try! conditionalValuesWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ConfigureCenterPointYInertiaModifiers(pThis, _conditionalValues))
            }
        }

    }

    public class IInteractionTracker3: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker3 }

        internal func ConfigureVector2PositionInertiaModifiersImpl(_ modifiers: WindowsFoundation.AnyIIterable<WinAppSDK.InteractionTrackerVector2InertiaModifier?>?) throws {
            let modifiersWrapper = WinAppSDK.__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CComposition__CInteractions__CInteractionTrackerVector2InertiaModifierWrapper(modifiers)
            let _modifiers = try! modifiersWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ConfigureVector2PositionInertiaModifiers(pThis, _modifiers))
            }
        }

    }

    public class IInteractionTracker4: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker4 }

        internal func TryUpdatePositionWithOptionImpl(_ value: WindowsFoundation.Vector3, _ option: WinAppSDK.InteractionTrackerClampingOption) throws -> Int32 {
            var result: INT32 = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker4.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryUpdatePositionWithOption(pThis, .from(swift: value), option, &result))
            }
            return result
        }

        internal func TryUpdatePositionByWithOptionImpl(_ amount: WindowsFoundation.Vector3, _ option: WinAppSDK.InteractionTrackerClampingOption) throws -> Int32 {
            var result: INT32 = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker4.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryUpdatePositionByWithOption(pThis, .from(swift: amount), option, &result))
            }
            return result
        }

        internal func get_IsInertiaFromImpulseImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker4.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsInertiaFromImpulse(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IInteractionTracker5: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker5 }

        internal func TryUpdatePositionWithOptionImpl(_ value: WindowsFoundation.Vector3, _ option: WinAppSDK.InteractionTrackerClampingOption, _ posUpdateOption: WinAppSDK.InteractionTrackerPositionUpdateOption) throws -> Int32 {
            var result: INT32 = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTracker5.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryUpdatePositionWithOption(pThis, .from(swift: value), option, posUpdateOption, &result))
            }
            return result
        }

    }

    public class IInteractionTrackerCustomAnimationStateEnteredArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerCustomAnimationStateEnteredArgs }

        internal func get_RequestIdImpl() throws -> Int32 {
            var value: INT32 = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerCustomAnimationStateEnteredArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestId(pThis, &value))
            }
            return value
        }

    }

    public class IInteractionTrackerCustomAnimationStateEnteredArgs2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerCustomAnimationStateEnteredArgs2 }

        internal func get_IsFromBindingImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerCustomAnimationStateEnteredArgs2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsFromBinding(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IInteractionTrackerIdleStateEnteredArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerIdleStateEnteredArgs }

        internal func get_RequestIdImpl() throws -> Int32 {
            var value: INT32 = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerIdleStateEnteredArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestId(pThis, &value))
            }
            return value
        }

    }

    public class IInteractionTrackerIdleStateEnteredArgs2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerIdleStateEnteredArgs2 }

        internal func get_IsFromBindingImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerIdleStateEnteredArgs2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsFromBinding(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IInteractionTrackerInertiaModifier: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaModifier }

    }

    public class IInteractionTrackerInertiaModifierFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaModifierFactory }

    }

    public class IInteractionTrackerInertiaMotion: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaMotion }

        internal func get_ConditionImpl() throws -> WinAppSDK.ExpressionAnimation? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaMotion.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Condition(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_ConditionImpl(_ value: WinAppSDK.ExpressionAnimation?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaMotion.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Condition(pThis, RawPointer(value)))
            }
        }

        internal func get_MotionImpl() throws -> WinAppSDK.ExpressionAnimation? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaMotion.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Motion(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_MotionImpl(_ value: WinAppSDK.ExpressionAnimation?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaMotion.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Motion(pThis, RawPointer(value)))
            }
        }

    }

    public class IInteractionTrackerInertiaMotionStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaMotionStatics }

        internal func CreateImpl(_ compositor: WinAppSDK.Compositor?) throws -> WinAppSDK.InteractionTrackerInertiaMotion? {
            let (result) = try ComPtrs.initialize { resultAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaMotionStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, RawPointer(compositor), &resultAbi))
                }
            }
            return .from(abi: result)
        }

    }

    public class IInteractionTrackerInertiaNaturalMotion: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaNaturalMotion }

        internal func get_ConditionImpl() throws -> WinAppSDK.ExpressionAnimation? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaNaturalMotion.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Condition(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_ConditionImpl(_ value: WinAppSDK.ExpressionAnimation?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaNaturalMotion.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Condition(pThis, RawPointer(value)))
            }
        }

        internal func get_NaturalMotionImpl() throws -> WinAppSDK.ScalarNaturalMotionAnimation? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaNaturalMotion.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_NaturalMotion(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_NaturalMotionImpl(_ value: WinAppSDK.ScalarNaturalMotionAnimation?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaNaturalMotion.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_NaturalMotion(pThis, RawPointer(value)))
            }
        }

    }

    public class IInteractionTrackerInertiaNaturalMotionStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaNaturalMotionStatics }

        internal func CreateImpl(_ compositor: WinAppSDK.Compositor?) throws -> WinAppSDK.InteractionTrackerInertiaNaturalMotion? {
            let (result) = try ComPtrs.initialize { resultAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaNaturalMotionStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, RawPointer(compositor), &resultAbi))
                }
            }
            return .from(abi: result)
        }

    }

    public class IInteractionTrackerInertiaRestingValue: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaRestingValue }

        internal func get_ConditionImpl() throws -> WinAppSDK.ExpressionAnimation? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaRestingValue.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Condition(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_ConditionImpl(_ value: WinAppSDK.ExpressionAnimation?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaRestingValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Condition(pThis, RawPointer(value)))
            }
        }

        internal func get_RestingValueImpl() throws -> WinAppSDK.ExpressionAnimation? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaRestingValue.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_RestingValue(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_RestingValueImpl(_ value: WinAppSDK.ExpressionAnimation?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaRestingValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_RestingValue(pThis, RawPointer(value)))
            }
        }

    }

    public class IInteractionTrackerInertiaRestingValueStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaRestingValueStatics }

        internal func CreateImpl(_ compositor: WinAppSDK.Compositor?) throws -> WinAppSDK.InteractionTrackerInertiaRestingValue? {
            let (result) = try ComPtrs.initialize { resultAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaRestingValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, RawPointer(compositor), &resultAbi))
                }
            }
            return .from(abi: result)
        }

    }

    public class IInteractionTrackerInertiaStateEnteredArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaStateEnteredArgs }

        internal func get_ModifiedRestingPositionImpl() throws -> WindowsFoundation.Vector3? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaStateEnteredArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ModifiedRestingPosition(pThis, &valueAbi))
                }
            }
            return WinAppSDK.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CNumerics__CVector3Wrapper.unwrapFrom(abi: value)
        }

        internal func get_ModifiedRestingScaleImpl() throws -> Float? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaStateEnteredArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ModifiedRestingScale(pThis, &valueAbi))
                }
            }
            return WinAppSDK.__x_ABI_C__FIReference_1_floatWrapper.unwrapFrom(abi: value)
        }

        internal func get_NaturalRestingPositionImpl() throws -> WindowsFoundation.Vector3 {
            var value: __x_ABI_CWindows_CFoundation_CNumerics_CVector3 = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaStateEnteredArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_NaturalRestingPosition(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_NaturalRestingScaleImpl() throws -> Float {
            var value: FLOAT = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaStateEnteredArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_NaturalRestingScale(pThis, &value))
            }
            return value
        }

        internal func get_PositionVelocityInPixelsPerSecondImpl() throws -> WindowsFoundation.Vector3 {
            var value: __x_ABI_CWindows_CFoundation_CNumerics_CVector3 = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaStateEnteredArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PositionVelocityInPixelsPerSecond(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_RequestIdImpl() throws -> Int32 {
            var value: INT32 = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaStateEnteredArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestId(pThis, &value))
            }
            return value
        }

        internal func get_ScaleVelocityInPercentPerSecondImpl() throws -> Float {
            var value: FLOAT = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaStateEnteredArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ScaleVelocityInPercentPerSecond(pThis, &value))
            }
            return value
        }

    }

    public class IInteractionTrackerInertiaStateEnteredArgs2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaStateEnteredArgs2 }

        internal func get_IsInertiaFromImpulseImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaStateEnteredArgs2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsInertiaFromImpulse(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IInteractionTrackerInertiaStateEnteredArgs3: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaStateEnteredArgs3 }

        internal func get_IsFromBindingImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInertiaStateEnteredArgs3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsFromBinding(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IInteractionTrackerInteractingStateEnteredArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInteractingStateEnteredArgs }

        internal func get_RequestIdImpl() throws -> Int32 {
            var value: INT32 = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInteractingStateEnteredArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestId(pThis, &value))
            }
            return value
        }

    }

    public class IInteractionTrackerInteractingStateEnteredArgs2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInteractingStateEnteredArgs2 }

        internal func get_IsFromBindingImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerInteractingStateEnteredArgs2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsFromBinding(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IInteractionTrackerOwner: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerOwner }

        open func CustomAnimationStateEnteredImpl(_ sender: WinAppSDK.InteractionTracker?, _ args: WinAppSDK.InteractionTrackerCustomAnimationStateEnteredArgs?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerOwner.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.CustomAnimationStateEntered(pThis, RawPointer(sender), RawPointer(args)))
            }
        }

        open func IdleStateEnteredImpl(_ sender: WinAppSDK.InteractionTracker?, _ args: WinAppSDK.InteractionTrackerIdleStateEnteredArgs?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerOwner.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.IdleStateEntered(pThis, RawPointer(sender), RawPointer(args)))
            }
        }

        open func InertiaStateEnteredImpl(_ sender: WinAppSDK.InteractionTracker?, _ args: WinAppSDK.InteractionTrackerInertiaStateEnteredArgs?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerOwner.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.InertiaStateEntered(pThis, RawPointer(sender), RawPointer(args)))
            }
        }

        open func InteractingStateEnteredImpl(_ sender: WinAppSDK.InteractionTracker?, _ args: WinAppSDK.InteractionTrackerInteractingStateEnteredArgs?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerOwner.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.InteractingStateEntered(pThis, RawPointer(sender), RawPointer(args)))
            }
        }

        open func RequestIgnoredImpl(_ sender: WinAppSDK.InteractionTracker?, _ args: WinAppSDK.InteractionTrackerRequestIgnoredArgs?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerOwner.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.RequestIgnored(pThis, RawPointer(sender), RawPointer(args)))
            }
        }

        open func ValuesChangedImpl(_ sender: WinAppSDK.InteractionTracker?, _ args: WinAppSDK.InteractionTrackerValuesChangedArgs?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerOwner.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ValuesChanged(pThis, RawPointer(sender), RawPointer(args)))
            }
        }

    }

    internal static var IInteractionTrackerOwnerVTable: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerOwnerVtbl = .init(
        QueryInterface: { IInteractionTrackerOwnerWrapper.queryInterface($0, $1, $2) },
        AddRef: { IInteractionTrackerOwnerWrapper.addRef($0) },
        Release: { IInteractionTrackerOwnerWrapper.release($0) },
        GetIids: {
            let size = MemoryLayout<WindowsFoundation.IID>.size
            let iids = CoTaskMemAlloc(UInt64(size) * 3).assumingMemoryBound(to: WindowsFoundation.IID.self)
            iids[0] = IUnknown.IID
            iids[1] = IInspectable.IID
            iids[2] = __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerOwnerWrapper.IID
            $1!.pointee = 3
            $2!.pointee = iids
            return S_OK
        },

        GetRuntimeClassName: {
            _ = $0
            let hstring = try! HString("Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner").detach()
            $1!.pointee = hstring
            return S_OK
        },

        GetTrustLevel: {
            _ = $0
            $1!.pointee = TrustLevel(rawValue: 0)
            return S_OK
        },

        CustomAnimationStateEntered: {
            do {
                guard let __unwrapped__instance = IInteractionTrackerOwnerWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
                let sender: WinAppSDK.InteractionTracker? = .from(abi: ComPtr($1))
                let args: WinAppSDK.InteractionTrackerCustomAnimationStateEnteredArgs? = .from(abi: ComPtr($2))
                try __unwrapped__instance.customAnimationStateEntered(sender, args)
                return S_OK
            } catch { return failWith(err: E_FAIL) } 
        },

        IdleStateEntered: {
            do {
                guard let __unwrapped__instance = IInteractionTrackerOwnerWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
                let sender: WinAppSDK.InteractionTracker? = .from(abi: ComPtr($1))
                let args: WinAppSDK.InteractionTrackerIdleStateEnteredArgs? = .from(abi: ComPtr($2))
                try __unwrapped__instance.idleStateEntered(sender, args)
                return S_OK
            } catch { return failWith(err: E_FAIL) } 
        },

        InertiaStateEntered: {
            do {
                guard let __unwrapped__instance = IInteractionTrackerOwnerWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
                let sender: WinAppSDK.InteractionTracker? = .from(abi: ComPtr($1))
                let args: WinAppSDK.InteractionTrackerInertiaStateEnteredArgs? = .from(abi: ComPtr($2))
                try __unwrapped__instance.inertiaStateEntered(sender, args)
                return S_OK
            } catch { return failWith(err: E_FAIL) } 
        },

        InteractingStateEntered: {
            do {
                guard let __unwrapped__instance = IInteractionTrackerOwnerWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
                let sender: WinAppSDK.InteractionTracker? = .from(abi: ComPtr($1))
                let args: WinAppSDK.InteractionTrackerInteractingStateEnteredArgs? = .from(abi: ComPtr($2))
                try __unwrapped__instance.interactingStateEntered(sender, args)
                return S_OK
            } catch { return failWith(err: E_FAIL) } 
        },

        RequestIgnored: {
            do {
                guard let __unwrapped__instance = IInteractionTrackerOwnerWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
                let sender: WinAppSDK.InteractionTracker? = .from(abi: ComPtr($1))
                let args: WinAppSDK.InteractionTrackerRequestIgnoredArgs? = .from(abi: ComPtr($2))
                try __unwrapped__instance.requestIgnored(sender, args)
                return S_OK
            } catch { return failWith(err: E_FAIL) } 
        },

        ValuesChanged: {
            do {
                guard let __unwrapped__instance = IInteractionTrackerOwnerWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
                let sender: WinAppSDK.InteractionTracker? = .from(abi: ComPtr($1))
                let args: WinAppSDK.InteractionTrackerValuesChangedArgs? = .from(abi: ComPtr($2))
                try __unwrapped__instance.valuesChanged(sender, args)
                return S_OK
            } catch { return failWith(err: E_FAIL) } 
        }
    )

    public typealias IInteractionTrackerOwnerWrapper = InterfaceWrapperBase<__IMPL_Microsoft_UI_Composition_Interactions.IInteractionTrackerOwnerBridge>
    public class IInteractionTrackerRequestIgnoredArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerRequestIgnoredArgs }

        internal func get_RequestIdImpl() throws -> Int32 {
            var value: INT32 = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerRequestIgnoredArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestId(pThis, &value))
            }
            return value
        }

    }

    public class IInteractionTrackerStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerStatics }

        internal func CreateImpl(_ compositor: WinAppSDK.Compositor?) throws -> WinAppSDK.InteractionTracker? {
            let (result) = try ComPtrs.initialize { resultAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, RawPointer(compositor), &resultAbi))
                }
            }
            return .from(abi: result)
        }

        internal func CreateWithOwnerImpl(_ compositor: WinAppSDK.Compositor?, _ owner: WinAppSDK.AnyIInteractionTrackerOwner?) throws -> WinAppSDK.InteractionTracker? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let ownerWrapper = __ABI_Microsoft_UI_Composition_Interactions.IInteractionTrackerOwnerWrapper(owner)
                let _owner = try! ownerWrapper?.toABI { $0 }
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateWithOwner(pThis, RawPointer(compositor), _owner, &resultAbi))
                }
            }
            return .from(abi: result)
        }

    }

    public class IInteractionTrackerStatics2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerStatics2 }

        internal func SetBindingModeImpl(_ boundTracker1: WinAppSDK.InteractionTracker?, _ boundTracker2: WinAppSDK.InteractionTracker?, _ axisMode: WinAppSDK.InteractionBindingAxisModes) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerStatics2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SetBindingMode(pThis, RawPointer(boundTracker1), RawPointer(boundTracker2), axisMode))
            }
        }

        internal func GetBindingModeImpl(_ boundTracker1: WinAppSDK.InteractionTracker?, _ boundTracker2: WinAppSDK.InteractionTracker?) throws -> WinAppSDK.InteractionBindingAxisModes {
            var result: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionBindingAxisModes = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerStatics2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.GetBindingMode(pThis, RawPointer(boundTracker1), RawPointer(boundTracker2), &result))
            }
            return result
        }

    }

    public class IInteractionTrackerValuesChangedArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerValuesChangedArgs }

        internal func get_PositionImpl() throws -> WindowsFoundation.Vector3 {
            var value: __x_ABI_CWindows_CFoundation_CNumerics_CVector3 = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerValuesChangedArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Position(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_RequestIdImpl() throws -> Int32 {
            var value: INT32 = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerValuesChangedArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestId(pThis, &value))
            }
            return value
        }

        internal func get_ScaleImpl() throws -> Float {
            var value: FLOAT = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerValuesChangedArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Scale(pThis, &value))
            }
            return value
        }

    }

    public class IInteractionTrackerVector2InertiaModifier: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerVector2InertiaModifier }

    }

    public class IInteractionTrackerVector2InertiaModifierFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerVector2InertiaModifierFactory }

    }

    public class IInteractionTrackerVector2InertiaNaturalMotion: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerVector2InertiaNaturalMotion }

        internal func get_ConditionImpl() throws -> WinAppSDK.ExpressionAnimation? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerVector2InertiaNaturalMotion.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Condition(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_ConditionImpl(_ value: WinAppSDK.ExpressionAnimation?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerVector2InertiaNaturalMotion.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Condition(pThis, RawPointer(value)))
            }
        }

        internal func get_NaturalMotionImpl() throws -> WinAppSDK.Vector2NaturalMotionAnimation? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerVector2InertiaNaturalMotion.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_NaturalMotion(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_NaturalMotionImpl(_ value: WinAppSDK.Vector2NaturalMotionAnimation?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerVector2InertiaNaturalMotion.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_NaturalMotion(pThis, RawPointer(value)))
            }
        }

    }

    public class IInteractionTrackerVector2InertiaNaturalMotionStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerVector2InertiaNaturalMotionStatics }

        internal func CreateImpl(_ compositor: WinAppSDK.Compositor?) throws -> WinAppSDK.InteractionTrackerVector2InertiaNaturalMotion? {
            let (result) = try ComPtrs.initialize { resultAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIInteractionTrackerVector2InertiaNaturalMotionStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, RawPointer(compositor), &resultAbi))
                }
            }
            return .from(abi: result)
        }

    }

    public class IVisualInteractionSource: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource }

        internal func get_IsPositionXRailsEnabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsPositionXRailsEnabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsPositionXRailsEnabledImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsPositionXRailsEnabled(pThis, .init(from: value)))
            }
        }

        internal func get_IsPositionYRailsEnabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsPositionYRailsEnabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsPositionYRailsEnabledImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsPositionYRailsEnabled(pThis, .init(from: value)))
            }
        }

        internal func get_ManipulationRedirectionModeImpl() throws -> WinAppSDK.VisualInteractionSourceRedirectionMode {
            var value: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CVisualInteractionSourceRedirectionMode = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ManipulationRedirectionMode(pThis, &value))
            }
            return value
        }

        internal func put_ManipulationRedirectionModeImpl(_ value: WinAppSDK.VisualInteractionSourceRedirectionMode) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ManipulationRedirectionMode(pThis, value))
            }
        }

        internal func get_PositionXChainingModeImpl() throws -> WinAppSDK.InteractionChainingMode {
            var value: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionChainingMode = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PositionXChainingMode(pThis, &value))
            }
            return value
        }

        internal func put_PositionXChainingModeImpl(_ value: WinAppSDK.InteractionChainingMode) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_PositionXChainingMode(pThis, value))
            }
        }

        internal func get_PositionXSourceModeImpl() throws -> WinAppSDK.InteractionSourceMode {
            var value: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionSourceMode = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PositionXSourceMode(pThis, &value))
            }
            return value
        }

        internal func put_PositionXSourceModeImpl(_ value: WinAppSDK.InteractionSourceMode) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_PositionXSourceMode(pThis, value))
            }
        }

        internal func get_PositionYChainingModeImpl() throws -> WinAppSDK.InteractionChainingMode {
            var value: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionChainingMode = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PositionYChainingMode(pThis, &value))
            }
            return value
        }

        internal func put_PositionYChainingModeImpl(_ value: WinAppSDK.InteractionChainingMode) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_PositionYChainingMode(pThis, value))
            }
        }

        internal func get_PositionYSourceModeImpl() throws -> WinAppSDK.InteractionSourceMode {
            var value: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionSourceMode = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PositionYSourceMode(pThis, &value))
            }
            return value
        }

        internal func put_PositionYSourceModeImpl(_ value: WinAppSDK.InteractionSourceMode) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_PositionYSourceMode(pThis, value))
            }
        }

        internal func get_ScaleChainingModeImpl() throws -> WinAppSDK.InteractionChainingMode {
            var value: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionChainingMode = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ScaleChainingMode(pThis, &value))
            }
            return value
        }

        internal func put_ScaleChainingModeImpl(_ value: WinAppSDK.InteractionChainingMode) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ScaleChainingMode(pThis, value))
            }
        }

        internal func get_ScaleSourceModeImpl() throws -> WinAppSDK.InteractionSourceMode {
            var value: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CInteractionSourceMode = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ScaleSourceMode(pThis, &value))
            }
            return value
        }

        internal func put_ScaleSourceModeImpl(_ value: WinAppSDK.InteractionSourceMode) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ScaleSourceMode(pThis, value))
            }
        }

        internal func get_SourceImpl() throws -> WinAppSDK.Visual? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Source(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func TryRedirectForManipulationImpl(_ pointerPoint: WinAppSDK.PointerPoint?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryRedirectForManipulation(pThis, RawPointer(pointerPoint)))
            }
        }

    }

    public class IVisualInteractionSource2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource2 }

        internal func get_DeltaPositionImpl() throws -> WindowsFoundation.Vector3 {
            var value: __x_ABI_CWindows_CFoundation_CNumerics_CVector3 = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DeltaPosition(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_DeltaScaleImpl() throws -> Float {
            var value: FLOAT = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DeltaScale(pThis, &value))
            }
            return value
        }

        internal func get_PositionImpl() throws -> WindowsFoundation.Vector3 {
            var value: __x_ABI_CWindows_CFoundation_CNumerics_CVector3 = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Position(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_PositionVelocityImpl() throws -> WindowsFoundation.Vector3 {
            var value: __x_ABI_CWindows_CFoundation_CNumerics_CVector3 = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PositionVelocity(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_ScaleImpl() throws -> Float {
            var value: FLOAT = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Scale(pThis, &value))
            }
            return value
        }

        internal func get_ScaleVelocityImpl() throws -> Float {
            var value: FLOAT = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ScaleVelocity(pThis, &value))
            }
            return value
        }

        internal func ConfigureCenterPointXModifiersImpl(_ conditionalValues: WindowsFoundation.AnyIIterable<WinAppSDK.CompositionConditionalValue?>?) throws {
            let conditionalValuesWrapper = WinAppSDK.__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CComposition__CInteractions__CCompositionConditionalValueWrapper(conditionalValues)
            let _conditionalValues = try! conditionalValuesWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ConfigureCenterPointXModifiers(pThis, _conditionalValues))
            }
        }

        internal func ConfigureCenterPointYModifiersImpl(_ conditionalValues: WindowsFoundation.AnyIIterable<WinAppSDK.CompositionConditionalValue?>?) throws {
            let conditionalValuesWrapper = WinAppSDK.__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CComposition__CInteractions__CCompositionConditionalValueWrapper(conditionalValues)
            let _conditionalValues = try! conditionalValuesWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ConfigureCenterPointYModifiers(pThis, _conditionalValues))
            }
        }

        internal func ConfigureDeltaPositionXModifiersImpl(_ conditionalValues: WindowsFoundation.AnyIIterable<WinAppSDK.CompositionConditionalValue?>?) throws {
            let conditionalValuesWrapper = WinAppSDK.__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CComposition__CInteractions__CCompositionConditionalValueWrapper(conditionalValues)
            let _conditionalValues = try! conditionalValuesWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ConfigureDeltaPositionXModifiers(pThis, _conditionalValues))
            }
        }

        internal func ConfigureDeltaPositionYModifiersImpl(_ conditionalValues: WindowsFoundation.AnyIIterable<WinAppSDK.CompositionConditionalValue?>?) throws {
            let conditionalValuesWrapper = WinAppSDK.__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CComposition__CInteractions__CCompositionConditionalValueWrapper(conditionalValues)
            let _conditionalValues = try! conditionalValuesWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ConfigureDeltaPositionYModifiers(pThis, _conditionalValues))
            }
        }

        internal func ConfigureDeltaScaleModifiersImpl(_ conditionalValues: WindowsFoundation.AnyIIterable<WinAppSDK.CompositionConditionalValue?>?) throws {
            let conditionalValuesWrapper = WinAppSDK.__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CComposition__CInteractions__CCompositionConditionalValueWrapper(conditionalValues)
            let _conditionalValues = try! conditionalValuesWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ConfigureDeltaScaleModifiers(pThis, _conditionalValues))
            }
        }

    }

    public class IVisualInteractionSource3: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource3 }

        internal func get_PointerWheelConfigImpl() throws -> WinAppSDK.InteractionSourceConfiguration? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSource3.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_PointerWheelConfig(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IVisualInteractionSourceObjectFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSourceObjectFactory }

    }

    public class IVisualInteractionSourceStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSourceStatics }

        internal func CreateImpl(_ source: WinAppSDK.Visual?) throws -> WinAppSDK.VisualInteractionSource? {
            let (result) = try ComPtrs.initialize { resultAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSourceStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, RawPointer(source), &resultAbi))
                }
            }
            return .from(abi: result)
        }

    }

    public class IVisualInteractionSourceStatics2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSourceStatics2 }

        internal func CreateFromIVisualElementImpl(_ source: WinAppSDK.AnyIVisualElement?) throws -> WinAppSDK.VisualInteractionSource? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let sourceWrapper = __ABI_Microsoft_UI_Composition.IVisualElementWrapper(source)
                let _source = try! sourceWrapper?.toABI { $0 }
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CComposition_CInteractions_CIVisualInteractionSourceStatics2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromIVisualElement(pThis, _source, &resultAbi))
                }
            }
            return .from(abi: result)
        }

    }

}
