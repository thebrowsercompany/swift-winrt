// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CWindows_CMedia_CIAutoRepeatModeChangeRequestedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0xEA137EFA, Data2: 0xD852, Data3: 0x438E, Data4: ( 0x88,0x2B,0xC9,0x90,0x10,0x9A,0x78,0xF4 ))// EA137EFA-D852-438E-882B-C990109A78F4
}

private var IID___x_ABI_CWindows_CMedia_CIImageDisplayProperties: WindowsFoundation.IID {
    .init(Data1: 0xCD0BC7EF, Data2: 0x54E7, Data3: 0x411F, Data4: ( 0x99,0x33,0xF0,0xE9,0x8B,0x0A,0x96,0xD2 ))// CD0BC7EF-54E7-411F-9933-F0E98B0A96D2
}

private var IID___x_ABI_CWindows_CMedia_CIMediaTimelineController: WindowsFoundation.IID {
    .init(Data1: 0x8ED361F3, Data2: 0x0B78, Data3: 0x4360, Data4: ( 0xBF,0x71,0x0C,0x84,0x19,0x99,0xEA,0x1B ))// 8ED361F3-0B78-4360-BF71-0C841999EA1B
}

private var IID___x_ABI_CWindows_CMedia_CIMediaTimelineController2: WindowsFoundation.IID {
    .init(Data1: 0xEF74EA38, Data2: 0x9E72, Data3: 0x4DF9, Data4: ( 0x83,0x55,0x6E,0x90,0xC8,0x1B,0xBA,0xDD ))// EF74EA38-9E72-4DF9-8355-6E90C81BBADD
}

private var IID___x_ABI_CWindows_CMedia_CIMediaTimelineControllerFailedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0x8821F81D, Data2: 0x3E77, Data3: 0x43FB, Data4: ( 0xBE,0x26,0x4F,0xC8,0x7A,0x04,0x48,0x34 ))// 8821F81D-3E77-43FB-BE26-4FC87A044834
}

private var IID___x_ABI_CWindows_CMedia_CIMusicDisplayProperties: WindowsFoundation.IID {
    .init(Data1: 0x6BBF0C59, Data2: 0xD0A0, Data3: 0x4D26, Data4: ( 0x92,0xA0,0xF9,0x78,0xE1,0xD1,0x8E,0x7B ))// 6BBF0C59-D0A0-4D26-92A0-F978E1D18E7B
}

private var IID___x_ABI_CWindows_CMedia_CIMusicDisplayProperties2: WindowsFoundation.IID {
    .init(Data1: 0x00368462, Data2: 0x97D3, Data3: 0x44B9, Data4: ( 0xB0,0x0F,0x00,0x8A,0xFC,0xEF,0xAF,0x18 ))// 00368462-97D3-44B9-B00F-008AFCEFAF18
}

private var IID___x_ABI_CWindows_CMedia_CIMusicDisplayProperties3: WindowsFoundation.IID {
    .init(Data1: 0x4DB51AC1, Data2: 0x0681, Data3: 0x4E8C, Data4: ( 0x94,0x01,0xB8,0x15,0x9D,0x9E,0xEF,0xC7 ))// 4DB51AC1-0681-4E8C-9401-B8159D9EEFC7
}

private var IID___x_ABI_CWindows_CMedia_CIPlaybackPositionChangeRequestedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0xB4493F88, Data2: 0xEB28, Data3: 0x4961, Data4: ( 0x9C,0x14,0x33,0x5E,0x44,0xF3,0xE1,0x25 ))// B4493F88-EB28-4961-9C14-335E44F3E125
}

private var IID___x_ABI_CWindows_CMedia_CIPlaybackRateChangeRequestedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0x2CE2C41F, Data2: 0x3CD6, Data3: 0x4F77, Data4: ( 0x9B,0xA7,0xEB,0x27,0xC2,0x6A,0x21,0x40 ))// 2CE2C41F-3CD6-4F77-9BA7-EB27C26A2140
}

private var IID___x_ABI_CWindows_CMedia_CIShuffleEnabledChangeRequestedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0x49B593FE, Data2: 0x4FD0, Data3: 0x4666, Data4: ( 0xA3,0x14,0xC0,0xE0,0x19,0x40,0xD3,0x02 ))// 49B593FE-4FD0-4666-A314-C0E01940D302
}

private var IID___x_ABI_CWindows_CMedia_CISystemMediaTransportControls: WindowsFoundation.IID {
    .init(Data1: 0x99FA3FF4, Data2: 0x1742, Data3: 0x42A6, Data4: ( 0x90,0x2E,0x08,0x7D,0x41,0xF9,0x65,0xEC ))// 99FA3FF4-1742-42A6-902E-087D41F965EC
}

private var IID___x_ABI_CWindows_CMedia_CISystemMediaTransportControls2: WindowsFoundation.IID {
    .init(Data1: 0xEA98D2F6, Data2: 0x7F3C, Data3: 0x4AF2, Data4: ( 0xA5,0x86,0x72,0x88,0x98,0x08,0xEF,0xB1 ))// EA98D2F6-7F3C-4AF2-A586-72889808EFB1
}

private var IID___x_ABI_CWindows_CMedia_CISystemMediaTransportControlsButtonPressedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0xB7F47116, Data2: 0xA56F, Data3: 0x4DC8, Data4: ( 0x9E,0x11,0x92,0x03,0x1F,0x4A,0x87,0xC2 ))// B7F47116-A56F-4DC8-9E11-92031F4A87C2
}

private var IID___x_ABI_CWindows_CMedia_CISystemMediaTransportControlsDisplayUpdater: WindowsFoundation.IID {
    .init(Data1: 0x8ABBC53E, Data2: 0xFA55, Data3: 0x4ECF, Data4: ( 0xAD,0x8E,0xC9,0x84,0xE5,0xDD,0x15,0x50 ))// 8ABBC53E-FA55-4ECF-AD8E-C984E5DD1550
}

private var IID___x_ABI_CWindows_CMedia_CISystemMediaTransportControlsPropertyChangedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0xD0CA0936, Data2: 0x339B, Data3: 0x4CB3, Data4: ( 0x8E,0xEB,0x73,0x76,0x07,0xF5,0x6E,0x08 ))// D0CA0936-339B-4CB3-8EEB-737607F56E08
}

private var IID___x_ABI_CWindows_CMedia_CISystemMediaTransportControlsStatics: WindowsFoundation.IID {
    .init(Data1: 0x43BA380A, Data2: 0xECA4, Data3: 0x4832, Data4: ( 0x91,0xAB,0xD4,0x15,0xFA,0xE4,0x84,0xC6 ))// 43BA380A-ECA4-4832-91AB-D415FAE484C6
}

private var IID___x_ABI_CWindows_CMedia_CISystemMediaTransportControlsTimelineProperties: WindowsFoundation.IID {
    .init(Data1: 0x5125316A, Data2: 0xC3A2, Data3: 0x475B, Data4: ( 0x85,0x07,0x93,0x53,0x4D,0xC8,0x8F,0x15 ))// 5125316A-C3A2-475B-8507-93534DC88F15
}

private var IID___x_ABI_CWindows_CMedia_CIVideoDisplayProperties: WindowsFoundation.IID {
    .init(Data1: 0x5609FDB1, Data2: 0x5D2D, Data3: 0x4872, Data4: ( 0x81,0x70,0x45,0xDE,0xE5,0xBC,0x2F,0x5C ))// 5609FDB1-5D2D-4872-8170-45DEE5BC2F5C
}

private var IID___x_ABI_CWindows_CMedia_CIVideoDisplayProperties2: WindowsFoundation.IID {
    .init(Data1: 0xB410E1CE, Data2: 0xAB52, Data3: 0x41AB, Data4: ( 0xA4,0x86,0xCC,0x10,0xFA,0xB1,0x52,0xF9 ))// B410E1CE-AB52-41AB-A486-CC10FAB152F9
}

public enum __ABI_Windows_Media {
    public class IAutoRepeatModeChangeRequestedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CIAutoRepeatModeChangeRequestedEventArgs }

        internal func get_RequestedAutoRepeatModeImpl() throws -> UWP.MediaPlaybackAutoRepeatMode {
            var value: __x_ABI_CWindows_CMedia_CMediaPlaybackAutoRepeatMode = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIAutoRepeatModeChangeRequestedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestedAutoRepeatMode(pThis, &value))
            }
            return value
        }

    }

    public class IImageDisplayProperties: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CIImageDisplayProperties }

        internal func get_TitleImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIImageDisplayProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Title(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_TitleImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIImageDisplayProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Title(pThis, _value.get()))
            }
        }

        internal func get_SubtitleImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIImageDisplayProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Subtitle(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_SubtitleImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIImageDisplayProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Subtitle(pThis, _value.get()))
            }
        }

    }

    public class IMediaTimelineController: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CIMediaTimelineController }

        internal func StartImpl() throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMediaTimelineController.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Start(pThis))
            }
        }

        internal func ResumeImpl() throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMediaTimelineController.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Resume(pThis))
            }
        }

        internal func PauseImpl() throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMediaTimelineController.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Pause(pThis))
            }
        }

        internal func get_PositionImpl() throws -> WindowsFoundation.TimeSpan {
            var value: __x_ABI_CWindows_CFoundation_CTimeSpan = .init()
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMediaTimelineController.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Position(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_PositionImpl(_ value: WindowsFoundation.TimeSpan) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMediaTimelineController.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Position(pThis, .from(swift: value)))
            }
        }

        internal func get_ClockRateImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMediaTimelineController.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ClockRate(pThis, &value))
            }
            return value
        }

        internal func put_ClockRateImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMediaTimelineController.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ClockRate(pThis, value))
            }
        }

        internal func get_StateImpl() throws -> UWP.MediaTimelineControllerState {
            var value: __x_ABI_CWindows_CMedia_CMediaTimelineControllerState = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMediaTimelineController.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_State(pThis, &value))
            }
            return value
        }

        internal func add_PositionChangedImpl(_ positionChangedEventHandler: TypedEventHandler<UWP.MediaTimelineController?, Any?>?) throws -> EventRegistrationToken {
            var eventCookie: EventRegistrationToken = .init()
            let positionChangedEventHandlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CMediaTimelineController_IInspectableWrapper(positionChangedEventHandler)
            let _positionChangedEventHandler = try! positionChangedEventHandlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMediaTimelineController.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_PositionChanged(pThis, _positionChangedEventHandler, &eventCookie))
            }
            return eventCookie
        }

        internal func remove_PositionChangedImpl(_ eventCookie: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMediaTimelineController.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_PositionChanged(pThis, eventCookie))
            }
        }

        internal func add_StateChangedImpl(_ stateChangedEventHandler: TypedEventHandler<UWP.MediaTimelineController?, Any?>?) throws -> EventRegistrationToken {
            var eventCookie: EventRegistrationToken = .init()
            let stateChangedEventHandlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CMediaTimelineController_IInspectableWrapper(stateChangedEventHandler)
            let _stateChangedEventHandler = try! stateChangedEventHandlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMediaTimelineController.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_StateChanged(pThis, _stateChangedEventHandler, &eventCookie))
            }
            return eventCookie
        }

        internal func remove_StateChangedImpl(_ eventCookie: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMediaTimelineController.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_StateChanged(pThis, eventCookie))
            }
        }

    }

    public class IMediaTimelineController2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CIMediaTimelineController2 }

        internal func get_DurationImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CIMediaTimelineController2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Duration(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

        internal func put_DurationImpl(_ value: WindowsFoundation.TimeSpan?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMediaTimelineController2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Duration(pThis, _value))
            }
        }

        internal func get_IsLoopingEnabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMediaTimelineController2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsLoopingEnabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsLoopingEnabledImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMediaTimelineController2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsLoopingEnabled(pThis, .init(from: value)))
            }
        }

        internal func add_FailedImpl(_ eventHandler: TypedEventHandler<UWP.MediaTimelineController?, UWP.MediaTimelineControllerFailedEventArgs?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let eventHandlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CMediaTimelineController___x_ABI_CWindows__CMedia__CMediaTimelineControllerFailedEventArgsWrapper(eventHandler)
            let _eventHandler = try! eventHandlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMediaTimelineController2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_Failed(pThis, _eventHandler, &token))
            }
            return token
        }

        internal func remove_FailedImpl(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMediaTimelineController2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_Failed(pThis, token))
            }
        }

        internal func add_EndedImpl(_ eventHandler: TypedEventHandler<UWP.MediaTimelineController?, Any?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let eventHandlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CMediaTimelineController_IInspectableWrapper(eventHandler)
            let _eventHandler = try! eventHandlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMediaTimelineController2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_Ended(pThis, _eventHandler, &token))
            }
            return token
        }

        internal func remove_EndedImpl(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMediaTimelineController2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_Ended(pThis, token))
            }
        }

    }

    public class IMediaTimelineControllerFailedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CIMediaTimelineControllerFailedEventArgs }

        internal func get_ExtendedErrorImpl() throws -> HRESULT {
            var value: HRESULT = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMediaTimelineControllerFailedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExtendedError(pThis, &value))
            }
            return value
        }

    }

    public class IMusicDisplayProperties: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CIMusicDisplayProperties }

        internal func get_TitleImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMusicDisplayProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Title(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_TitleImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMusicDisplayProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Title(pThis, _value.get()))
            }
        }

        internal func get_AlbumArtistImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMusicDisplayProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AlbumArtist(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_AlbumArtistImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMusicDisplayProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_AlbumArtist(pThis, _value.get()))
            }
        }

        internal func get_ArtistImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMusicDisplayProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Artist(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_ArtistImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMusicDisplayProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Artist(pThis, _value.get()))
            }
        }

    }

    public class IMusicDisplayProperties2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CIMusicDisplayProperties2 }

        internal func get_AlbumTitleImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMusicDisplayProperties2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AlbumTitle(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_AlbumTitleImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMusicDisplayProperties2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_AlbumTitle(pThis, _value.get()))
            }
        }

        internal func get_TrackNumberImpl() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMusicDisplayProperties2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_TrackNumber(pThis, &value))
            }
            return value
        }

        internal func put_TrackNumberImpl(_ value: UInt32) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMusicDisplayProperties2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_TrackNumber(pThis, value))
            }
        }

        internal func get_GenresImpl() throws -> WindowsFoundation.AnyIVector<String>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CIMusicDisplayProperties2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Genres(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVector_1_HSTRINGWrapper.unwrapFrom(abi: value)
        }

    }

    public class IMusicDisplayProperties3: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CIMusicDisplayProperties3 }

        internal func get_AlbumTrackCountImpl() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMusicDisplayProperties3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AlbumTrackCount(pThis, &value))
            }
            return value
        }

        internal func put_AlbumTrackCountImpl(_ value: UInt32) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIMusicDisplayProperties3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_AlbumTrackCount(pThis, value))
            }
        }

    }

    public class IPlaybackPositionChangeRequestedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CIPlaybackPositionChangeRequestedEventArgs }

        internal func get_RequestedPlaybackPositionImpl() throws -> WindowsFoundation.TimeSpan {
            var value: __x_ABI_CWindows_CFoundation_CTimeSpan = .init()
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIPlaybackPositionChangeRequestedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestedPlaybackPosition(pThis, &value))
            }
            return .from(abi: value)
        }

    }

    public class IPlaybackRateChangeRequestedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CIPlaybackRateChangeRequestedEventArgs }

        internal func get_RequestedPlaybackRateImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIPlaybackRateChangeRequestedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestedPlaybackRate(pThis, &value))
            }
            return value
        }

    }

    public class IShuffleEnabledChangeRequestedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CIShuffleEnabledChangeRequestedEventArgs }

        internal func get_RequestedShuffleEnabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIShuffleEnabledChangeRequestedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestedShuffleEnabled(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class ISystemMediaTransportControls: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CISystemMediaTransportControls }

        internal func get_PlaybackStatusImpl() throws -> UWP.MediaPlaybackStatus {
            var value: __x_ABI_CWindows_CMedia_CMediaPlaybackStatus = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PlaybackStatus(pThis, &value))
            }
            return value
        }

        internal func put_PlaybackStatusImpl(_ value: UWP.MediaPlaybackStatus) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_PlaybackStatus(pThis, value))
            }
        }

        internal func get_DisplayUpdaterImpl() throws -> UWP.SystemMediaTransportControlsDisplayUpdater? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_DisplayUpdater(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_SoundLevelImpl() throws -> UWP.SoundLevel {
            var value: __x_ABI_CWindows_CMedia_CSoundLevel = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SoundLevel(pThis, &value))
            }
            return value
        }

        internal func get_IsEnabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsEnabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsEnabledImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsEnabled(pThis, .init(from: value)))
            }
        }

        internal func get_IsPlayEnabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsPlayEnabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsPlayEnabledImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsPlayEnabled(pThis, .init(from: value)))
            }
        }

        internal func get_IsStopEnabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsStopEnabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsStopEnabledImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsStopEnabled(pThis, .init(from: value)))
            }
        }

        internal func get_IsPauseEnabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsPauseEnabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsPauseEnabledImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsPauseEnabled(pThis, .init(from: value)))
            }
        }

        internal func get_IsRecordEnabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsRecordEnabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsRecordEnabledImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsRecordEnabled(pThis, .init(from: value)))
            }
        }

        internal func get_IsFastForwardEnabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsFastForwardEnabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsFastForwardEnabledImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsFastForwardEnabled(pThis, .init(from: value)))
            }
        }

        internal func get_IsRewindEnabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsRewindEnabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsRewindEnabledImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsRewindEnabled(pThis, .init(from: value)))
            }
        }

        internal func get_IsPreviousEnabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsPreviousEnabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsPreviousEnabledImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsPreviousEnabled(pThis, .init(from: value)))
            }
        }

        internal func get_IsNextEnabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsNextEnabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsNextEnabledImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsNextEnabled(pThis, .init(from: value)))
            }
        }

        internal func get_IsChannelUpEnabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsChannelUpEnabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsChannelUpEnabledImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsChannelUpEnabled(pThis, .init(from: value)))
            }
        }

        internal func get_IsChannelDownEnabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsChannelDownEnabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsChannelDownEnabledImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsChannelDownEnabled(pThis, .init(from: value)))
            }
        }

        internal func add_ButtonPressedImpl(_ handler: TypedEventHandler<UWP.SystemMediaTransportControls?, UWP.SystemMediaTransportControlsButtonPressedEventArgs?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CSystemMediaTransportControls___x_ABI_CWindows__CMedia__CSystemMediaTransportControlsButtonPressedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_ButtonPressed(pThis, _handler, &token))
            }
            return token
        }

        internal func remove_ButtonPressedImpl(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_ButtonPressed(pThis, token))
            }
        }

        internal func add_PropertyChangedImpl(_ handler: TypedEventHandler<UWP.SystemMediaTransportControls?, UWP.SystemMediaTransportControlsPropertyChangedEventArgs?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CSystemMediaTransportControls___x_ABI_CWindows__CMedia__CSystemMediaTransportControlsPropertyChangedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_PropertyChanged(pThis, _handler, &token))
            }
            return token
        }

        internal func remove_PropertyChangedImpl(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_PropertyChanged(pThis, token))
            }
        }

    }

    public class ISystemMediaTransportControls2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CISystemMediaTransportControls2 }

        internal func get_AutoRepeatModeImpl() throws -> UWP.MediaPlaybackAutoRepeatMode {
            var value: __x_ABI_CWindows_CMedia_CMediaPlaybackAutoRepeatMode = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AutoRepeatMode(pThis, &value))
            }
            return value
        }

        internal func put_AutoRepeatModeImpl(_ value: UWP.MediaPlaybackAutoRepeatMode) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_AutoRepeatMode(pThis, value))
            }
        }

        internal func get_ShuffleEnabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ShuffleEnabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_ShuffleEnabledImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ShuffleEnabled(pThis, .init(from: value)))
            }
        }

        internal func get_PlaybackRateImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PlaybackRate(pThis, &value))
            }
            return value
        }

        internal func put_PlaybackRateImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_PlaybackRate(pThis, value))
            }
        }

        internal func UpdateTimelinePropertiesImpl(_ timelineProperties: UWP.SystemMediaTransportControlsTimelineProperties?) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.UpdateTimelineProperties(pThis, RawPointer(timelineProperties)))
            }
        }

        internal func add_PlaybackPositionChangeRequestedImpl(_ handler: TypedEventHandler<UWP.SystemMediaTransportControls?, UWP.PlaybackPositionChangeRequestedEventArgs?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CSystemMediaTransportControls___x_ABI_CWindows__CMedia__CPlaybackPositionChangeRequestedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_PlaybackPositionChangeRequested(pThis, _handler, &token))
            }
            return token
        }

        internal func remove_PlaybackPositionChangeRequestedImpl(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_PlaybackPositionChangeRequested(pThis, token))
            }
        }

        internal func add_PlaybackRateChangeRequestedImpl(_ handler: TypedEventHandler<UWP.SystemMediaTransportControls?, UWP.PlaybackRateChangeRequestedEventArgs?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CSystemMediaTransportControls___x_ABI_CWindows__CMedia__CPlaybackRateChangeRequestedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_PlaybackRateChangeRequested(pThis, _handler, &token))
            }
            return token
        }

        internal func remove_PlaybackRateChangeRequestedImpl(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_PlaybackRateChangeRequested(pThis, token))
            }
        }

        internal func add_ShuffleEnabledChangeRequestedImpl(_ handler: TypedEventHandler<UWP.SystemMediaTransportControls?, UWP.ShuffleEnabledChangeRequestedEventArgs?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CSystemMediaTransportControls___x_ABI_CWindows__CMedia__CShuffleEnabledChangeRequestedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_ShuffleEnabledChangeRequested(pThis, _handler, &token))
            }
            return token
        }

        internal func remove_ShuffleEnabledChangeRequestedImpl(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_ShuffleEnabledChangeRequested(pThis, token))
            }
        }

        internal func add_AutoRepeatModeChangeRequestedImpl(_ handler: TypedEventHandler<UWP.SystemMediaTransportControls?, UWP.AutoRepeatModeChangeRequestedEventArgs?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CSystemMediaTransportControls___x_ABI_CWindows__CMedia__CAutoRepeatModeChangeRequestedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_AutoRepeatModeChangeRequested(pThis, _handler, &token))
            }
            return token
        }

        internal func remove_AutoRepeatModeChangeRequestedImpl(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControls2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_AutoRepeatModeChangeRequested(pThis, token))
            }
        }

    }

    public class ISystemMediaTransportControlsButtonPressedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CISystemMediaTransportControlsButtonPressedEventArgs }

        internal func get_ButtonImpl() throws -> UWP.SystemMediaTransportControlsButton {
            var value: __x_ABI_CWindows_CMedia_CSystemMediaTransportControlsButton = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsButtonPressedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Button(pThis, &value))
            }
            return value
        }

    }

    public class ISystemMediaTransportControlsDisplayUpdater: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CISystemMediaTransportControlsDisplayUpdater }

        internal func get_TypeImpl() throws -> UWP.MediaPlaybackType {
            var value: __x_ABI_CWindows_CMedia_CMediaPlaybackType = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsDisplayUpdater.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Type(pThis, &value))
            }
            return value
        }

        internal func put_TypeImpl(_ value: UWP.MediaPlaybackType) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsDisplayUpdater.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Type(pThis, value))
            }
        }

        internal func get_AppMediaIdImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsDisplayUpdater.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AppMediaId(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_AppMediaIdImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsDisplayUpdater.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_AppMediaId(pThis, _value.get()))
            }
        }

        internal func get_ThumbnailImpl() throws -> UWP.RandomAccessStreamReference? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsDisplayUpdater.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Thumbnail(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_ThumbnailImpl(_ value: UWP.RandomAccessStreamReference?) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsDisplayUpdater.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Thumbnail(pThis, RawPointer(value)))
            }
        }

        internal func get_MusicPropertiesImpl() throws -> UWP.MusicDisplayProperties? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsDisplayUpdater.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_MusicProperties(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_VideoPropertiesImpl() throws -> UWP.VideoDisplayProperties? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsDisplayUpdater.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_VideoProperties(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ImagePropertiesImpl() throws -> UWP.ImageDisplayProperties? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsDisplayUpdater.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ImageProperties(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func CopyFromFileAsyncImpl(_ type: UWP.MediaPlaybackType, _ source: UWP.StorageFile?) throws -> WindowsFoundation.AnyIAsyncOperation<Bool>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsDisplayUpdater.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CopyFromFileAsync(pThis, type, RawPointer(source), &operationAbi))
                }
            }
            return UWP.__x_ABI_C__FIAsyncOperation_1_booleanWrapper.unwrapFrom(abi: operation)
        }

        internal func ClearAllImpl() throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsDisplayUpdater.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ClearAll(pThis))
            }
        }

        internal func UpdateImpl() throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsDisplayUpdater.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Update(pThis))
            }
        }

    }

    public class ISystemMediaTransportControlsPropertyChangedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CISystemMediaTransportControlsPropertyChangedEventArgs }

        internal func get_PropertyImpl() throws -> UWP.SystemMediaTransportControlsProperty {
            var value: __x_ABI_CWindows_CMedia_CSystemMediaTransportControlsProperty = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsPropertyChangedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Property(pThis, &value))
            }
            return value
        }

    }

    public class ISystemMediaTransportControlsStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CISystemMediaTransportControlsStatics }

        internal func GetForCurrentViewImpl() throws -> UWP.SystemMediaTransportControls? {
            let (mediaControl) = try ComPtrs.initialize { mediaControlAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetForCurrentView(pThis, &mediaControlAbi))
                }
            }
            return .from(abi: mediaControl)
        }

    }

    public class ISystemMediaTransportControlsTimelineProperties: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CISystemMediaTransportControlsTimelineProperties }

        internal func get_StartTimeImpl() throws -> WindowsFoundation.TimeSpan {
            var value: __x_ABI_CWindows_CFoundation_CTimeSpan = .init()
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsTimelineProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_StartTime(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_StartTimeImpl(_ value: WindowsFoundation.TimeSpan) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsTimelineProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_StartTime(pThis, .from(swift: value)))
            }
        }

        internal func get_EndTimeImpl() throws -> WindowsFoundation.TimeSpan {
            var value: __x_ABI_CWindows_CFoundation_CTimeSpan = .init()
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsTimelineProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_EndTime(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_EndTimeImpl(_ value: WindowsFoundation.TimeSpan) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsTimelineProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_EndTime(pThis, .from(swift: value)))
            }
        }

        internal func get_MinSeekTimeImpl() throws -> WindowsFoundation.TimeSpan {
            var value: __x_ABI_CWindows_CFoundation_CTimeSpan = .init()
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsTimelineProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MinSeekTime(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_MinSeekTimeImpl(_ value: WindowsFoundation.TimeSpan) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsTimelineProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_MinSeekTime(pThis, .from(swift: value)))
            }
        }

        internal func get_MaxSeekTimeImpl() throws -> WindowsFoundation.TimeSpan {
            var value: __x_ABI_CWindows_CFoundation_CTimeSpan = .init()
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsTimelineProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MaxSeekTime(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_MaxSeekTimeImpl(_ value: WindowsFoundation.TimeSpan) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsTimelineProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_MaxSeekTime(pThis, .from(swift: value)))
            }
        }

        internal func get_PositionImpl() throws -> WindowsFoundation.TimeSpan {
            var value: __x_ABI_CWindows_CFoundation_CTimeSpan = .init()
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsTimelineProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Position(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_PositionImpl(_ value: WindowsFoundation.TimeSpan) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CISystemMediaTransportControlsTimelineProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Position(pThis, .from(swift: value)))
            }
        }

    }

    public class IVideoDisplayProperties: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CIVideoDisplayProperties }

        internal func get_TitleImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIVideoDisplayProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Title(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_TitleImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIVideoDisplayProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Title(pThis, _value.get()))
            }
        }

        internal func get_SubtitleImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIVideoDisplayProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Subtitle(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_SubtitleImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CIVideoDisplayProperties.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Subtitle(pThis, _value.get()))
            }
        }

    }

    public class IVideoDisplayProperties2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CIVideoDisplayProperties2 }

        internal func get_GenresImpl() throws -> WindowsFoundation.AnyIVector<String>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CIVideoDisplayProperties2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Genres(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVector_1_HSTRINGWrapper.unwrapFrom(abi: value)
        }

    }

}
extension __x_ABI_CWindows_CMedia_CMediaTimeRange {
        public static func from(swift: UWP.MediaTimeRange) -> __x_ABI_CWindows_CMedia_CMediaTimeRange {
            .init(Start: .from(swift: swift.start), End: .from(swift: swift.end))
        }
    }
    