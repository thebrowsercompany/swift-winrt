// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage: WindowsFoundation.IID {
    .init(Data1: 0x6037B3AC, Data2: 0x02D6, Data3: 0x4234, Data4: ( 0x83,0x62,0x7F,0xE3,0xAD,0xC8,0x1F,0x5F ))// 6037B3AC-02D6-4234-8362-7FE3ADC81F5F
}

private var IID___x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport: WindowsFoundation.IID {
    .init(Data1: 0x2C26D0B2, Data2: 0x9483, Data3: 0x4F62, Data4: ( 0xAB,0x57,0x82,0xB2,0x9D,0x97,0x19,0xB8 ))// 2C26D0B2-9483-4F62-AB57-82B29D9719B8
}

private var IID___x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo: WindowsFoundation.IID {
    .init(Data1: 0xA290FE05, Data2: 0xDFF3, Data3: 0x407F, Data4: ( 0x9A,0x1B,0x0B,0x2B,0x31,0x7C,0xA8,0x00 ))// A290FE05-DFF3-407F-9A1B-0B2B317CA800
}

private var IID___x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfoStatics: WindowsFoundation.IID {
    .init(Data1: 0xD404AC21, Data2: 0xFC7D, Data3: 0x45F0, Data4: ( 0x9A,0x3F,0x39,0x20,0x3A,0xED,0x9F,0x7E ))// D404AC21-FC7D-45F0-9A3F-39203AED9F7E
}

private var IID___x_ABI_CWindows_CSystem_CDiagnostics_CISystemMemoryUsage: WindowsFoundation.IID {
    .init(Data1: 0x17FFC595, Data2: 0x1702, Data3: 0x49CF, Data4: ( 0xAA,0x27,0x2F,0x0A,0x32,0x59,0x14,0x04 ))// 17FFC595-1702-49CF-AA27-2F0A32591404
}

private var IID___x_ABI_CWindows_CSystem_CDiagnostics_CISystemMemoryUsageReport: WindowsFoundation.IID {
    .init(Data1: 0x38663C87, Data2: 0x2A9F, Data3: 0x403A, Data4: ( 0xBD,0x19,0x2C,0xF3,0xE8,0x16,0x95,0x00 ))// 38663C87-2A9F-403A-BD19-2CF3E8169500
}

public enum __ABI_Windows_System_Diagnostics {
    public class ISystemCpuUsage: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage }

        internal func GetReportImpl() throws -> UWP.SystemCpuUsageReport? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetReport(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class ISystemCpuUsageReport: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport }

        internal func get_KernelTimeImpl() throws -> WindowsFoundation.TimeSpan {
            var value: __x_ABI_CWindows_CFoundation_CTimeSpan = .init()
            _ = try perform(as: __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_KernelTime(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_UserTimeImpl() throws -> WindowsFoundation.TimeSpan {
            var value: __x_ABI_CWindows_CFoundation_CTimeSpan = .init()
            _ = try perform(as: __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_UserTime(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_IdleTimeImpl() throws -> WindowsFoundation.TimeSpan {
            var value: __x_ABI_CWindows_CFoundation_CTimeSpan = .init()
            _ = try perform(as: __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IdleTime(pThis, &value))
            }
            return .from(abi: value)
        }

    }

    public class ISystemDiagnosticInfo: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo }

        internal func get_MemoryUsageImpl() throws -> UWP.SystemMemoryUsage? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_MemoryUsage(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_CpuUsageImpl() throws -> UWP.SystemCpuUsage? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_CpuUsage(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class ISystemDiagnosticInfoStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfoStatics }

        internal func GetForCurrentSystemImpl() throws -> UWP.SystemDiagnosticInfo? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfoStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetForCurrentSystem(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class ISystemMemoryUsage: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CSystem_CDiagnostics_CISystemMemoryUsage }

        internal func GetReportImpl() throws -> UWP.SystemMemoryUsageReport? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CSystem_CDiagnostics_CISystemMemoryUsage.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetReport(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class ISystemMemoryUsageReport: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CSystem_CDiagnostics_CISystemMemoryUsageReport }

        internal func get_TotalPhysicalSizeInBytesImpl() throws -> UInt64 {
            var value: UINT64 = 0
            _ = try perform(as: __x_ABI_CWindows_CSystem_CDiagnostics_CISystemMemoryUsageReport.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_TotalPhysicalSizeInBytes(pThis, &value))
            }
            return value
        }

        internal func get_AvailableSizeInBytesImpl() throws -> UInt64 {
            var value: UINT64 = 0
            _ = try perform(as: __x_ABI_CWindows_CSystem_CDiagnostics_CISystemMemoryUsageReport.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AvailableSizeInBytes(pThis, &value))
            }
            return value
        }

        internal func get_CommittedSizeInBytesImpl() throws -> UInt64 {
            var value: UINT64 = 0
            _ = try perform(as: __x_ABI_CWindows_CSystem_CDiagnostics_CISystemMemoryUsageReport.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_CommittedSizeInBytes(pThis, &value))
            }
            return value
        }

    }

}
