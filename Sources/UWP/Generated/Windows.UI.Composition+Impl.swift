// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

public enum __IMPL_Windows_UI_Composition {
    public enum IAnimationObjectBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CWindows_CUI_CComposition_CIAnimationObject
        public typealias SwiftABI = __ABI_Windows_UI_Composition.IAnimationObject
        public typealias SwiftProjection = AnyIAnimationObject
        public static func from(abi: ComPtr<CABI>?) -> SwiftProjection? {
            guard let abi = abi else { return nil }
            return IAnimationObjectImpl(abi)
        }

        public static func makeAbi() -> CABI {
            let vtblPtr = withUnsafeMutablePointer(to: &__ABI_Windows_UI_Composition.IAnimationObjectVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class IAnimationObjectImpl: IAnimationObject, WinRTAbiImpl {
        fileprivate typealias Bridge = IAnimationObjectBridge
        fileprivate let _default: Bridge.SwiftABI
        fileprivate var thisPtr: WindowsFoundation.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.SwiftABI(fromAbi)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.ui.composition.ianimationobject.populatepropertyinfo)
        fileprivate func populatePropertyInfo(_ propertyName: String, _ propertyInfo: AnimationPropertyInfo!) throws {
            try _default.PopulatePropertyInfoImpl(propertyName, propertyInfo)
        }

    }

    public enum ICompositionAnimationBaseBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CWindows_CUI_CComposition_CICompositionAnimationBase
        public typealias SwiftABI = __ABI_Windows_UI_Composition.ICompositionAnimationBase
        public typealias SwiftProjection = AnyICompositionAnimationBase
        public static func from(abi: ComPtr<CABI>?) -> SwiftProjection? {
            guard let abi = abi else { return nil }
            return ICompositionAnimationBaseImpl(abi)
        }

        public static func makeAbi() -> CABI {
            let vtblPtr = withUnsafeMutablePointer(to: &__ABI_Windows_UI_Composition.ICompositionAnimationBaseVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class ICompositionAnimationBaseImpl: ICompositionAnimationBase, WinRTAbiImpl {
        fileprivate typealias Bridge = ICompositionAnimationBaseBridge
        fileprivate let _default: Bridge.SwiftABI
        fileprivate var thisPtr: WindowsFoundation.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.SwiftABI(fromAbi)
        }

    }

    public enum ICompositionSurfaceBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CWindows_CUI_CComposition_CICompositionSurface
        public typealias SwiftABI = __ABI_Windows_UI_Composition.ICompositionSurface
        public typealias SwiftProjection = AnyICompositionSurface
        public static func from(abi: ComPtr<CABI>?) -> SwiftProjection? {
            guard let abi = abi else { return nil }
            return ICompositionSurfaceImpl(abi)
        }

        public static func makeAbi() -> CABI {
            let vtblPtr = withUnsafeMutablePointer(to: &__ABI_Windows_UI_Composition.ICompositionSurfaceVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class ICompositionSurfaceImpl: ICompositionSurface, WinRTAbiImpl {
        fileprivate typealias Bridge = ICompositionSurfaceBridge
        fileprivate let _default: Bridge.SwiftABI
        fileprivate var thisPtr: WindowsFoundation.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.SwiftABI(fromAbi)
        }

    }

}
