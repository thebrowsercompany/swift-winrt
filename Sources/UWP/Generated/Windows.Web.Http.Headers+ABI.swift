// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection: WindowsFoundation.IID {
    .init(Data1: 0x9A586B89, Data2: 0xD5D0, Data3: 0x4FBE, Data4: ( 0xBD,0x9D,0xB5,0xB3,0x63,0x68,0x11,0xB4 ))// 9A586B89-D5D0-4FBE-BD9D-B5B3636811B4
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue: WindowsFoundation.IID {
    .init(Data1: 0x393361AF, Data2: 0x0F7D, Data3: 0x4820, Data4: ( 0x9F,0xDD,0xA2,0xB9,0x56,0xEE,0xAE,0xAB ))// 393361AF-0F7D-4820-9FDD-A2B956EEAEAB
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection: WindowsFoundation.IID {
    .init(Data1: 0xCA9E5F81, Data2: 0xAEE0, Data3: 0x4353, Data4: ( 0xA1,0x0B,0xE6,0x25,0xBA,0xBD,0x64,0xC2 ))// CA9E5F81-AEE0-4353-A10B-E625BABD64C2
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory: WindowsFoundation.IID {
    .init(Data1: 0xC452C451, Data2: 0xD99C, Data3: 0x40AA, Data4: ( 0x93,0x99,0x90,0xEE,0xB9,0x8F,0xC6,0x13 ))// C452C451-D99C-40AA-9399-90EEB98FC613
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics: WindowsFoundation.IID {
    .init(Data1: 0xF3D38A72, Data2: 0xFC01, Data3: 0x4D01, Data4: ( 0xA0,0x08,0xFC,0xB7,0xC4,0x59,0xD6,0x35 ))// F3D38A72-FC01-4D01-A008-FCB7C459D635
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue: WindowsFoundation.IID {
    .init(Data1: 0xCB4AF27A, Data2: 0x4E90, Data3: 0x45EB, Data4: ( 0x8D,0xCD,0xFD,0x14,0x08,0xF4,0xC4,0x4F ))// CB4AF27A-4E90-45EB-8DCD-FD1408F4C44F
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection: WindowsFoundation.IID {
    .init(Data1: 0xE4F56C1D, Data2: 0x5142, Data3: 0x4E00, Data4: ( 0x8E,0x0F,0x01,0x95,0x09,0x33,0x76,0x29 ))// E4F56C1D-5142-4E00-8E0F-019509337629
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory: WindowsFoundation.IID {
    .init(Data1: 0xD93CCC1E, Data2: 0x0B7D, Data3: 0x4C3F, Data4: ( 0xA5,0x8D,0xA2,0xA1,0xBD,0xEA,0xBC,0x0A ))// D93CCC1E-0B7D-4C3F-A58D-A2A1BDEABC0A
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics: WindowsFoundation.IID {
    .init(Data1: 0xAAA75D37, Data2: 0xA946, Data3: 0x4B1F, Data4: ( 0x85,0xAF,0x48,0xB6,0x8B,0x3C,0x50,0xBD ))// AAA75D37-A946-4B1F-85AF-48B68B3C50BD
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue: WindowsFoundation.IID {
    .init(Data1: 0xBCF7F92A, Data2: 0x9376, Data3: 0x4D85, Data4: ( 0xBC,0xCC,0x9F,0x4F,0x9A,0xCA,0xB4,0x34 ))// BCF7F92A-9376-4D85-BCCC-9F4F9ACAB434
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection: WindowsFoundation.IID {
    .init(Data1: 0x7D221721, Data2: 0xA6DB, Data3: 0x436E, Data4: ( 0x8E,0x83,0x91,0x59,0x61,0x92,0x81,0x9C ))// 7D221721-A6DB-436E-8E83-91596192819C
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory: WindowsFoundation.IID {
    .init(Data1: 0xC53D2BD7, Data2: 0x332B, Data3: 0x4350, Data4: ( 0x85,0x10,0x2E,0x67,0xA2,0x28,0x9A,0x5A ))// C53D2BD7-332B-4350-8510-2E67A2289A5A
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics: WindowsFoundation.IID {
    .init(Data1: 0x94D8602E, Data2: 0xF9BF, Data3: 0x42F7, Data4: ( 0xAA,0x46,0xED,0x27,0x2A,0x41,0xE2,0x12 ))// 94D8602E-F9BF-42F7-AA46-ED272A41E212
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue: WindowsFoundation.IID {
    .init(Data1: 0x94531CD5, Data2: 0x8B13, Data3: 0x4D73, Data4: ( 0x86,0x51,0xF7,0x6B,0x38,0xF8,0x84,0x95 ))// 94531CD5-8B13-4D73-8651-F76B38F88495
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection: WindowsFoundation.IID {
    .init(Data1: 0x7C0D753E, Data2: 0xE899, Data3: 0x4378, Data4: ( 0xB5,0xC8,0x41,0x2D,0x82,0x07,0x11,0xCC ))// 7C0D753E-E899-4378-B5C8-412D820711CC
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory: WindowsFoundation.IID {
    .init(Data1: 0xC45EEE1A, Data2: 0xC553, Data3: 0x46FC, Data4: ( 0xAD,0xE2,0xD7,0x5C,0x1D,0x53,0xDF,0x7B ))// C45EEE1A-C553-46FC-ADE2-D75C1D53DF7B
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics: WindowsFoundation.IID {
    .init(Data1: 0xE8C9357C, Data2: 0x8F89, Data3: 0x4801, Data4: ( 0x8E,0x75,0x4C,0x9A,0xBF,0xC3,0xDE,0x71 ))// E8C9357C-8F89-4801-8E75-4C9ABFC3DE71
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue: WindowsFoundation.IID {
    .init(Data1: 0xF2A2EEDC, Data2: 0x2629, Data3: 0x4B49, Data4: ( 0x99,0x08,0x96,0xA1,0x68,0xE9,0x36,0x5E ))// F2A2EEDC-2629-4B49-9908-96A168E9365E
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory: WindowsFoundation.IID {
    .init(Data1: 0x9915BBC4, Data2: 0x456C, Data3: 0x4E81, Data4: ( 0x82,0x95,0xB2,0xAB,0x3C,0xBC,0xF5,0x45 ))// 9915BBC4-456C-4E81-8295-B2AB3CBCF545
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics: WindowsFoundation.IID {
    .init(Data1: 0x29C56067, Data2: 0x5A37, Data3: 0x46E4, Data4: ( 0xB0,0x74,0xC5,0x17,0x7D,0x69,0xCA,0x66 ))// 29C56067-5A37-46E4-B074-C5177D69CA66
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection: WindowsFoundation.IID {
    .init(Data1: 0x40612A44, Data2: 0x47AE, Data3: 0x4B7E, Data4: ( 0x91,0x24,0x69,0x62,0x8B,0x64,0xAA,0x18 ))// 40612A44-47AE-4B7E-9124-69628B64AA18
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue: WindowsFoundation.IID {
    .init(Data1: 0x04D967D3, Data2: 0xA4F6, Data3: 0x495C, Data4: ( 0x95,0x30,0x85,0x79,0xFC,0xBA,0x8A,0xA9 ))// 04D967D3-A4F6-495C-9530-8579FCBA8AA9
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory: WindowsFoundation.IID {
    .init(Data1: 0x3F5BD691, Data2: 0xA03C, Data3: 0x4456, Data4: ( 0x9A,0x6F,0xEF,0x27,0xEC,0xD0,0x3C,0xAE ))// 3F5BD691-A03C-4456-9A6F-EF27ECD03CAE
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics: WindowsFoundation.IID {
    .init(Data1: 0x80A346CA, Data2: 0x174C, Data3: 0x4FAE, Data4: ( 0x82,0x1C,0x13,0x4C,0xD2,0x94,0xAA,0x38 ))// 80A346CA-174C-4FAE-821C-134CD294AA38
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue: WindowsFoundation.IID {
    .init(Data1: 0xCBD46217, Data2: 0x4B29, Data3: 0x412B, Data4: ( 0xBD,0x90,0xB3,0xD8,0x14,0xAB,0x8E,0x1B ))// CBD46217-4B29-412B-BD90-B3D814AB8E1B
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection: WindowsFoundation.IID {
    .init(Data1: 0xF3F44350, Data2: 0x581E, Data3: 0x4ECC, Data4: ( 0x9F,0x59,0xE5,0x07,0xD0,0x4F,0x06,0xE6 ))// F3F44350-581E-4ECC-9F59-E507D04F06E6
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory: WindowsFoundation.IID {
    .init(Data1: 0x635E326F, Data2: 0x146F, Data3: 0x4F56, Data4: ( 0xAA,0x21,0x2C,0xB7,0xD6,0xD5,0x8B,0x1E ))// 635E326F-146F-4F56-AA21-2CB7D6D58B1E
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics: WindowsFoundation.IID {
    .init(Data1: 0x6E866D48, Data2: 0x06AF, Data3: 0x4462, Data4: ( 0x81,0x58,0x99,0x38,0x8D,0x5D,0xCA,0x81 ))// 6E866D48-06AF-4462-8158-99388D5DCA81
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue: WindowsFoundation.IID {
    .init(Data1: 0xC34CC3CB, Data2: 0x542E, Data3: 0x4177, Data4: ( 0xA6,0xC7,0xB6,0x74,0xCE,0x19,0x3F,0xBF ))// C34CC3CB-542E-4177-A6C7-B674CE193FBF
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory: WindowsFoundation.IID {
    .init(Data1: 0xF21D9E91, Data2: 0x4D1C, Data3: 0x4182, Data4: ( 0xBF,0xD1,0x34,0x47,0x0A,0x62,0xF9,0x50 ))// F21D9E91-4D1C-4182-BFD1-34470A62F950
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics: WindowsFoundation.IID {
    .init(Data1: 0xA69B2BE6, Data2: 0xCE8C, Data3: 0x4443, Data4: ( 0xA3,0x5A,0x1B,0x72,0x7B,0x13,0x10,0x36 ))// A69B2BE6-CE8C-4443-A35A-1B727B131036
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue: WindowsFoundation.IID {
    .init(Data1: 0xEAFCAA6A, Data2: 0xC4DC, Data3: 0x49E2, Data4: ( 0xA2,0x7D,0x04,0x3A,0xDF,0x58,0x67,0xA3 ))// EAFCAA6A-C4DC-49E2-A27D-043ADF5867A3
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics: WindowsFoundation.IID {
    .init(Data1: 0x7C2659A8, Data2: 0x6672, Data3: 0x4E90, Data4: ( 0x9A,0x9A,0xF3,0x97,0x66,0xF7,0xF5,0x76 ))// 7C2659A8-6672-4E90-9A9A-F39766F7F576
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue: WindowsFoundation.IID {
    .init(Data1: 0x4CE585CD, Data2: 0x3A99, Data3: 0x43AF, Data4: ( 0xA2,0xE6,0xEC,0x23,0x2F,0xEA,0x96,0x58 ))// 4CE585CD-3A99-43AF-A2E6-EC232FEA9658
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection: WindowsFoundation.IID {
    .init(Data1: 0xE78521B3, Data2: 0xA0E2, Data3: 0x4AC4, Data4: ( 0x9E,0x66,0x79,0x70,0x6C,0xB9,0xFD,0x58 ))// E78521B3-A0E2-4AC4-9E66-79706CB9FD58
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory: WindowsFoundation.IID {
    .init(Data1: 0x4EA275CB, Data2: 0xD53E, Data3: 0x4868, Data4: ( 0x88,0x56,0x1E,0x21,0xA5,0x03,0x0D,0xC0 ))// 4EA275CB-D53E-4868-8856-1E21A5030DC0
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics: WindowsFoundation.IID {
    .init(Data1: 0x3019ABE2, Data2: 0xCFE5, Data3: 0x473B, Data4: ( 0xA5,0x7F,0xFB,0xA5,0xB1,0x4E,0xB2,0x57 ))// 3019ABE2-CFE5-473B-A57F-FBA5B14EB257
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection: WindowsFoundation.IID {
    .init(Data1: 0x9EBD7CA3, Data2: 0x8219, Data3: 0x44F6, Data4: ( 0x99,0x02,0x8C,0x56,0xDF,0xD3,0x34,0x0C ))// 9EBD7CA3-8219-44F6-9902-8C56DFD3340C
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue: WindowsFoundation.IID {
    .init(Data1: 0x7256E102, Data2: 0x0080, Data3: 0x4DB4, Data4: ( 0xA0,0x83,0x7D,0xE7,0xB2,0xE5,0xBA,0x4C ))// 7256E102-0080-4DB4-A083-7DE7B2E5BA4C
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection: WindowsFoundation.IID {
    .init(Data1: 0x885D5ABD, Data2: 0x4B4F, Data3: 0x480A, Data4: ( 0x89,0xCE,0x8A,0xED,0xCE,0xE6,0xE3,0xA0 ))// 885D5ABD-4B4F-480A-89CE-8AEDCEE6E3A0
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory: WindowsFoundation.IID {
    .init(Data1: 0x7BB83970, Data2: 0x780F, Data3: 0x4C83, Data4: ( 0x9F,0xE4,0xDC,0x30,0x87,0xF6,0xBD,0x55 ))// 7BB83970-780F-4C83-9FE4-DC3087F6BD55
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics: WindowsFoundation.IID {
    .init(Data1: 0x2541E146, Data2: 0xF308, Data3: 0x46F5, Data4: ( 0xB6,0x95,0x42,0xF5,0x40,0x24,0xEC,0x68 ))// 2541E146-F308-46F5-B695-42F54024EC68
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue: WindowsFoundation.IID {
    .init(Data1: 0x16B28533, Data2: 0xE728, Data3: 0x4FCB, Data4: ( 0xBD,0xB0,0x08,0xA4,0x31,0xA1,0x48,0x44 ))// 16B28533-E728-4FCB-BDB0-08A431A14844
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory: WindowsFoundation.IID {
    .init(Data1: 0xBED747A8, Data2: 0xCD17, Data3: 0x42DD, Data4: ( 0x93,0x67,0xAB,0x9C,0x5B,0x56,0xDD,0x7D ))// BED747A8-CD17-42DD-9367-AB9C5B56DD7D
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics: WindowsFoundation.IID {
    .init(Data1: 0xE04D83DF, Data2: 0x1D41, Data3: 0x4D8C, Data4: ( 0xA2,0xDE,0x6F,0xD2,0xED,0x87,0x39,0x9B ))// E04D83DF-1D41-4D8C-A2DE-6FD2ED87399B
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue: WindowsFoundation.IID {
    .init(Data1: 0x188D5E32, Data2: 0x76BE, Data3: 0x44A0, Data4: ( 0xB1,0xCD,0x20,0x74,0xBD,0xED,0x2D,0xDE ))// 188D5E32-76BE-44A0-B1CD-2074BDED2DDE
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection: WindowsFoundation.IID {
    .init(Data1: 0x3C0C6B73, Data2: 0x1342, Data3: 0x4587, Data4: ( 0xA0,0x56,0x18,0xD0,0x2F,0xF6,0x71,0x65 ))// 3C0C6B73-1342-4587-A056-18D02FF67165
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory: WindowsFoundation.IID {
    .init(Data1: 0x4C6D20F4, Data2: 0x9457, Data3: 0x44E6, Data4: ( 0xA3,0x23,0xD1,0x22,0xB9,0x58,0x78,0x0B ))// 4C6D20F4-9457-44E6-A323-D122B958780B
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics: WindowsFoundation.IID {
    .init(Data1: 0x5B070CD9, Data2: 0xB560, Data3: 0x4FC8, Data4: ( 0x98,0x35,0x7E,0x6C,0x0A,0x65,0x7B,0x24 ))// 5B070CD9-B560-4FC8-9835-7E6C0A657B24
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection: WindowsFoundation.IID {
    .init(Data1: 0x43BC3FF4, Data2: 0x6119, Data3: 0x4ADF, Data4: ( 0x93,0x8C,0x34,0xBF,0xFF,0xCF,0x92,0xED ))// 43BC3FF4-6119-4ADF-938C-34BFFFCF92ED
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue: WindowsFoundation.IID {
    .init(Data1: 0xD8BA7463, Data2: 0x5B9A, Data3: 0x4D1B, Data4: ( 0x93,0xF9,0xAA,0x5B,0x44,0xEC,0xFD,0xDF ))// D8BA7463-5B9A-4D1B-93F9-AA5B44ECFDDF
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory: WindowsFoundation.IID {
    .init(Data1: 0x770E2267, Data2: 0xCBF8, Data3: 0x4736, Data4: ( 0xA9,0x25,0x93,0xFB,0xE1,0x0C,0x7C,0xA8 ))// 770E2267-CBF8-4736-A925-93FBE10C7CA8
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics: WindowsFoundation.IID {
    .init(Data1: 0xFFD4030F, Data2: 0x1130, Data3: 0x4152, Data4: ( 0x86,0x59,0x25,0x69,0x09,0xA9,0xD1,0x15 ))// FFD4030F-1130-4152-8659-256909A9D115
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue: WindowsFoundation.IID {
    .init(Data1: 0xF4FEEE03, Data2: 0xEBD4, Data3: 0x4160, Data4: ( 0xB9,0xFF,0x80,0x7C,0x51,0x83,0xB6,0xE6 ))// F4FEEE03-EBD4-4160-B9FF-807C5183B6E6
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory: WindowsFoundation.IID {
    .init(Data1: 0x611AA4F5, Data2: 0x82BC, Data3: 0x42FB, Data4: ( 0x97,0x7B,0xDC,0x00,0x53,0x6E,0x5E,0x86 ))// 611AA4F5-82BC-42FB-977B-DC00536E5E86
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics: WindowsFoundation.IID {
    .init(Data1: 0x90C33E29, Data2: 0xBEFC, Data3: 0x4337, Data4: ( 0xBE,0x62,0x49,0xF0,0x97,0x97,0x5F,0x53 ))// 90C33E29-BEFC-4337-BE62-49F097975F53
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue: WindowsFoundation.IID {
    .init(Data1: 0x1B1A8732, Data2: 0x4C35, Data3: 0x486A, Data4: ( 0x96,0x6F,0x64,0x64,0x89,0x19,0x8E,0x4D ))// 1B1A8732-4C35-486A-966F-646489198E4D
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection: WindowsFoundation.IID {
    .init(Data1: 0x877DF74A, Data2: 0xD69B, Data3: 0x44F8, Data4: ( 0xAD,0x4F,0x45,0x3A,0xF9,0xC4,0x2E,0xD0 ))// 877DF74A-D69B-44F8-AD4F-453AF9C42ED0
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory: WindowsFoundation.IID {
    .init(Data1: 0x24220FBE, Data2: 0xEABE, Data3: 0x4464, Data4: ( 0xB4,0x60,0xEC,0x01,0x0B,0x7C,0x41,0xE2 ))// 24220FBE-EABE-4464-B460-EC010B7C41E2
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics: WindowsFoundation.IID {
    .init(Data1: 0xDB7FD857, Data2: 0x327A, Data3: 0x4E73, Data4: ( 0x81,0xE5,0x70,0x59,0xA3,0x02,0xB0,0x42 ))// DB7FD857-327A-4E73-81E5-7059A302B042
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection: WindowsFoundation.IID {
    .init(Data1: 0xAF40329B, Data2: 0xB544, Data3: 0x469B, Data4: ( 0x86,0xB9,0xAC,0x3D,0x46,0x6F,0xEA,0x36 ))// AF40329B-B544-469B-86B9-AC3D466FEA36
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection: WindowsFoundation.IID {
    .init(Data1: 0x7A990969, Data2: 0xFA3F, Data3: 0x41ED, Data4: ( 0xAA,0xC6,0xBF,0x95,0x79,0x75,0xC1,0x6B ))// 7A990969-FA3F-41ED-AAC6-BF957975C16B
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue: WindowsFoundation.IID {
    .init(Data1: 0x436F32F9, Data2: 0x3DED, Data3: 0x42BD, Data4: ( 0xB3,0x8A,0x54,0x96,0xA2,0x51,0x1C,0xE6 ))// 436F32F9-3DED-42BD-B38A-5496A2511CE6
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection: WindowsFoundation.IID {
    .init(Data1: 0x202C8C34, Data2: 0x2C03, Data3: 0x49B8, Data4: ( 0x96,0x65,0x73,0xE2,0x7C,0xB2,0xFC,0x79 ))// 202C8C34-2C03-49B8-9665-73E27CB2FC79
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory: WindowsFoundation.IID {
    .init(Data1: 0xBB62DFFC, Data2: 0xE361, Data3: 0x4F08, Data4: ( 0x8E,0x4F,0xC9,0xE7,0x23,0xDE,0x70,0x3B ))// BB62DFFC-E361-4F08-8E4F-C9E723DE703B
}

private var IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics: WindowsFoundation.IID {
    .init(Data1: 0x6AB8892A, Data2: 0x1A98, Data3: 0x4D32, Data4: ( 0xA9,0x06,0x74,0x70,0xA9,0x87,0x5C,0xE5 ))// 6AB8892A-1A98-4D32-A906-7470A9875CE5
}

public enum __ABI_Windows_Web_Http_Headers {
    public class IHttpCacheDirectiveHeaderValueCollection: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection }

        internal func get_MaxAgeImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_MaxAge(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

        internal func put_MaxAgeImpl(_ value: WindowsFoundation.TimeSpan?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_MaxAge(pThis, _value))
            }
        }

        internal func get_MaxStaleImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_MaxStale(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

        internal func put_MaxStaleImpl(_ value: WindowsFoundation.TimeSpan?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_MaxStale(pThis, _value))
            }
        }

        internal func get_MinFreshImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_MinFresh(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

        internal func put_MinFreshImpl(_ value: WindowsFoundation.TimeSpan?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_MinFresh(pThis, _value))
            }
        }

        internal func get_SharedMaxAgeImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_SharedMaxAge(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

        internal func put_SharedMaxAgeImpl(_ value: WindowsFoundation.TimeSpan?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_SharedMaxAge(pThis, _value))
            }
        }

        internal func ParseAddImpl(_ input: String) throws {
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ParseAdd(pThis, _input.get()))
            }
        }

        internal func TryParseAddImpl(_ input: String) throws -> Bool {
            var result: boolean = 0
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCacheDirectiveHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryParseAdd(pThis, _input.get(), &result))
            }
            return .init(from: result)
        }

    }

    public class IHttpChallengeHeaderValue: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue }

        internal func get_ParametersImpl() throws -> WindowsFoundation.AnyIVector<UWP.HttpNameValueHeaderValue?>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Parameters(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueWrapper.unwrapFrom(abi: value)
        }

        internal func get_SchemeImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Scheme(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_TokenImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Token(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IHttpChallengeHeaderValueCollection: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection }

        internal func ParseAddImpl(_ input: String) throws {
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ParseAdd(pThis, _input.get()))
            }
        }

        internal func TryParseAddImpl(_ input: String) throws -> Bool {
            var result: boolean = 0
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryParseAdd(pThis, _input.get(), &result))
            }
            return .init(from: result)
        }

    }

    public class IHttpChallengeHeaderValueFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory }

        internal func CreateFromSchemeImpl(_ scheme: String) throws -> IHttpChallengeHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _scheme = try! HString(scheme)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromScheme(pThis, _scheme.get(), &valueAbi))
                }
            }
            return IHttpChallengeHeaderValue(value!)
        }

        internal func CreateFromSchemeWithTokenImpl(_ scheme: String, _ token: String) throws -> IHttpChallengeHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _scheme = try! HString(scheme)
                let _token = try! HString(token)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromSchemeWithToken(pThis, _scheme.get(), _token.get(), &valueAbi))
                }
            }
            return IHttpChallengeHeaderValue(value!)
        }

    }

    public class IHttpChallengeHeaderValueStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics }

        internal func ParseImpl(_ input: String) throws -> UWP.HttpChallengeHeaderValue? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let _input = try! HString(input)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Parse(pThis, _input.get(), &resultAbi))
                }
            }
            return .from(abi: result)
        }

        internal func TryParseImpl(_ input: String, _ challengeHeaderValue: inout UWP.HttpChallengeHeaderValue?) throws -> Bool {
            var succeeded: boolean = 0
            let _input = try! HString(input)
            let (_challengeHeaderValue) = try ComPtrs.initialize { (_challengeHeaderValueAbi) in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpChallengeHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.TryParse(pThis, _input.get(), &_challengeHeaderValueAbi, &succeeded))
                }
            }
            challengeHeaderValue = .from(abi: _challengeHeaderValue)
            return .init(from: succeeded)
        }

    }

    public class IHttpConnectionOptionHeaderValue: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue }

        internal func get_TokenImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Token(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IHttpConnectionOptionHeaderValueCollection: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection }

        internal func ParseAddImpl(_ input: String) throws {
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ParseAdd(pThis, _input.get()))
            }
        }

        internal func TryParseAddImpl(_ input: String) throws -> Bool {
            var result: boolean = 0
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryParseAdd(pThis, _input.get(), &result))
            }
            return .init(from: result)
        }

    }

    public class IHttpConnectionOptionHeaderValueFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory }

        internal func CreateImpl(_ token: String) throws -> IHttpConnectionOptionHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _token = try! HString(token)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, _token.get(), &valueAbi))
                }
            }
            return IHttpConnectionOptionHeaderValue(value!)
        }

    }

    public class IHttpConnectionOptionHeaderValueStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics }

        internal func ParseImpl(_ input: String) throws -> UWP.HttpConnectionOptionHeaderValue? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let _input = try! HString(input)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Parse(pThis, _input.get(), &resultAbi))
                }
            }
            return .from(abi: result)
        }

        internal func TryParseImpl(_ input: String, _ connectionOptionHeaderValue: inout UWP.HttpConnectionOptionHeaderValue?) throws -> Bool {
            var succeeded: boolean = 0
            let _input = try! HString(input)
            let (_connectionOptionHeaderValue) = try ComPtrs.initialize { (_connectionOptionHeaderValueAbi) in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpConnectionOptionHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.TryParse(pThis, _input.get(), &_connectionOptionHeaderValueAbi, &succeeded))
                }
            }
            connectionOptionHeaderValue = .from(abi: _connectionOptionHeaderValue)
            return .init(from: succeeded)
        }

    }

    public class IHttpContentCodingHeaderValue: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue }

        internal func get_ContentCodingImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentCoding(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IHttpContentCodingHeaderValueCollection: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection }

        internal func ParseAddImpl(_ input: String) throws {
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ParseAdd(pThis, _input.get()))
            }
        }

        internal func TryParseAddImpl(_ input: String) throws -> Bool {
            var result: boolean = 0
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryParseAdd(pThis, _input.get(), &result))
            }
            return .init(from: result)
        }

    }

    public class IHttpContentCodingHeaderValueFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory }

        internal func CreateImpl(_ contentCoding: String) throws -> IHttpContentCodingHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _contentCoding = try! HString(contentCoding)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, _contentCoding.get(), &valueAbi))
                }
            }
            return IHttpContentCodingHeaderValue(value!)
        }

    }

    public class IHttpContentCodingHeaderValueStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics }

        internal func ParseImpl(_ input: String) throws -> UWP.HttpContentCodingHeaderValue? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let _input = try! HString(input)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Parse(pThis, _input.get(), &resultAbi))
                }
            }
            return .from(abi: result)
        }

        internal func TryParseImpl(_ input: String, _ contentCodingHeaderValue: inout UWP.HttpContentCodingHeaderValue?) throws -> Bool {
            var succeeded: boolean = 0
            let _input = try! HString(input)
            let (_contentCodingHeaderValue) = try ComPtrs.initialize { (_contentCodingHeaderValueAbi) in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.TryParse(pThis, _input.get(), &_contentCodingHeaderValueAbi, &succeeded))
                }
            }
            contentCodingHeaderValue = .from(abi: _contentCodingHeaderValue)
            return .init(from: succeeded)
        }

    }

    public class IHttpContentCodingWithQualityHeaderValue: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue }

        internal func get_ContentCodingImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentCoding(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_QualityImpl() throws -> Double? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValue.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Quality(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_doubleWrapper.unwrapFrom(abi: value)
        }

    }

    public class IHttpContentCodingWithQualityHeaderValueCollection: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection }

        internal func ParseAddImpl(_ input: String) throws {
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ParseAdd(pThis, _input.get()))
            }
        }

        internal func TryParseAddImpl(_ input: String) throws -> Bool {
            var result: boolean = 0
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryParseAdd(pThis, _input.get(), &result))
            }
            return .init(from: result)
        }

    }

    public class IHttpContentCodingWithQualityHeaderValueFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory }

        internal func CreateFromValueImpl(_ contentCoding: String) throws -> IHttpContentCodingWithQualityHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _contentCoding = try! HString(contentCoding)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromValue(pThis, _contentCoding.get(), &valueAbi))
                }
            }
            return IHttpContentCodingWithQualityHeaderValue(value!)
        }

        internal func CreateFromValueWithQualityImpl(_ contentCoding: String, _ quality: Double) throws -> IHttpContentCodingWithQualityHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _contentCoding = try! HString(contentCoding)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromValueWithQuality(pThis, _contentCoding.get(), quality, &valueAbi))
                }
            }
            return IHttpContentCodingWithQualityHeaderValue(value!)
        }

    }

    public class IHttpContentCodingWithQualityHeaderValueStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics }

        internal func ParseImpl(_ input: String) throws -> UWP.HttpContentCodingWithQualityHeaderValue? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let _input = try! HString(input)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Parse(pThis, _input.get(), &resultAbi))
                }
            }
            return .from(abi: result)
        }

        internal func TryParseImpl(_ input: String, _ contentCodingWithQualityHeaderValue: inout UWP.HttpContentCodingWithQualityHeaderValue?) throws -> Bool {
            var succeeded: boolean = 0
            let _input = try! HString(input)
            let (_contentCodingWithQualityHeaderValue) = try ComPtrs.initialize { (_contentCodingWithQualityHeaderValueAbi) in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentCodingWithQualityHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.TryParse(pThis, _input.get(), &_contentCodingWithQualityHeaderValueAbi, &succeeded))
                }
            }
            contentCodingWithQualityHeaderValue = .from(abi: _contentCodingWithQualityHeaderValue)
            return .init(from: succeeded)
        }

    }

    public class IHttpContentDispositionHeaderValue: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue }

        internal func get_DispositionTypeImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DispositionType(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_DispositionTypeImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_DispositionType(pThis, _value.get()))
            }
        }

        internal func get_FileNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_FileName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_FileNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_FileName(pThis, _value.get()))
            }
        }

        internal func get_FileNameStarImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_FileNameStar(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_FileNameStarImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_FileNameStar(pThis, _value.get()))
            }
        }

        internal func get_NameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Name(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_NameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Name(pThis, _value.get()))
            }
        }

        internal func get_ParametersImpl() throws -> WindowsFoundation.AnyIVector<UWP.HttpNameValueHeaderValue?>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Parameters(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueWrapper.unwrapFrom(abi: value)
        }

        internal func get_SizeImpl() throws -> UInt64? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Size(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT64Wrapper.unwrapFrom(abi: value)
        }

        internal func put_SizeImpl(_ value: UInt64?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1_UINT64Wrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Size(pThis, _value))
            }
        }

    }

    public class IHttpContentDispositionHeaderValueFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory }

        internal func CreateImpl(_ dispositionType: String) throws -> IHttpContentDispositionHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _dispositionType = try! HString(dispositionType)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, _dispositionType.get(), &valueAbi))
                }
            }
            return IHttpContentDispositionHeaderValue(value!)
        }

    }

    public class IHttpContentDispositionHeaderValueStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics }

        internal func ParseImpl(_ input: String) throws -> UWP.HttpContentDispositionHeaderValue? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let _input = try! HString(input)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Parse(pThis, _input.get(), &resultAbi))
                }
            }
            return .from(abi: result)
        }

        internal func TryParseImpl(_ input: String, _ contentDispositionHeaderValue: inout UWP.HttpContentDispositionHeaderValue?) throws -> Bool {
            var succeeded: boolean = 0
            let _input = try! HString(input)
            let (_contentDispositionHeaderValue) = try ComPtrs.initialize { (_contentDispositionHeaderValueAbi) in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentDispositionHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.TryParse(pThis, _input.get(), &_contentDispositionHeaderValueAbi, &succeeded))
                }
            }
            contentDispositionHeaderValue = .from(abi: _contentDispositionHeaderValue)
            return .init(from: succeeded)
        }

    }

    public class IHttpContentHeaderCollection: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection }

        internal func get_ContentDispositionImpl() throws -> UWP.HttpContentDispositionHeaderValue? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentDisposition(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_ContentDispositionImpl(_ value: UWP.HttpContentDispositionHeaderValue?) throws {
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ContentDisposition(pThis, RawPointer(value)))
            }
        }

        internal func get_ContentEncodingImpl() throws -> UWP.HttpContentCodingHeaderValueCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentEncoding(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ContentLanguageImpl() throws -> UWP.HttpLanguageHeaderValueCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentLanguage(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ContentLengthImpl() throws -> UInt64? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentLength(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT64Wrapper.unwrapFrom(abi: value)
        }

        internal func put_ContentLengthImpl(_ value: UInt64?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1_UINT64Wrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ContentLength(pThis, _value))
            }
        }

        internal func get_ContentLocationImpl() throws -> WindowsFoundation.Uri? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentLocation(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_ContentLocationImpl(_ value: WindowsFoundation.Uri?) throws {
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ContentLocation(pThis, RawPointer(value)))
            }
        }

        internal func get_ContentMD5Impl() throws -> UWP.AnyIBuffer? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentMD5(pThis, &valueAbi))
                }
            }
            return __ABI_Windows_Storage_Streams.IBufferWrapper.unwrapFrom(abi: value)
        }

        internal func put_ContentMD5Impl(_ value: UWP.AnyIBuffer?) throws {
            let valueWrapper = __ABI_Windows_Storage_Streams.IBufferWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ContentMD5(pThis, _value))
            }
        }

        internal func get_ContentRangeImpl() throws -> UWP.HttpContentRangeHeaderValue? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentRange(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_ContentRangeImpl(_ value: UWP.HttpContentRangeHeaderValue?) throws {
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ContentRange(pThis, RawPointer(value)))
            }
        }

        internal func get_ContentTypeImpl() throws -> UWP.HttpMediaTypeHeaderValue? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentType(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_ContentTypeImpl(_ value: UWP.HttpMediaTypeHeaderValue?) throws {
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ContentType(pThis, RawPointer(value)))
            }
        }

        internal func get_ExpiresImpl() throws -> WindowsFoundation.DateTime? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Expires(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeWrapper.unwrapFrom(abi: value)
        }

        internal func put_ExpiresImpl(_ value: WindowsFoundation.DateTime?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Expires(pThis, _value))
            }
        }

        internal func get_LastModifiedImpl() throws -> WindowsFoundation.DateTime? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_LastModified(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeWrapper.unwrapFrom(abi: value)
        }

        internal func put_LastModifiedImpl(_ value: WindowsFoundation.DateTime?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_LastModified(pThis, _value))
            }
        }

        internal func AppendImpl(_ name: String, _ value: String) throws {
            let _name = try! HString(name)
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Append(pThis, _name.get(), _value.get()))
            }
        }

        internal func TryAppendWithoutValidationImpl(_ name: String, _ value: String) throws -> Bool {
            var result: boolean = 0
            let _name = try! HString(name)
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryAppendWithoutValidation(pThis, _name.get(), _value.get(), &result))
            }
            return .init(from: result)
        }

    }

    public class IHttpContentRangeHeaderValue: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue }

        internal func get_FirstBytePositionImpl() throws -> UInt64? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_FirstBytePosition(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT64Wrapper.unwrapFrom(abi: value)
        }

        internal func get_LastBytePositionImpl() throws -> UInt64? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_LastBytePosition(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT64Wrapper.unwrapFrom(abi: value)
        }

        internal func get_LengthImpl() throws -> UInt64? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Length(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT64Wrapper.unwrapFrom(abi: value)
        }

        internal func get_UnitImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Unit(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_UnitImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Unit(pThis, _value.get()))
            }
        }

    }

    public class IHttpContentRangeHeaderValueFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory }

        internal func CreateFromLengthImpl(_ length: UInt64) throws -> IHttpContentRangeHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromLength(pThis, length, &valueAbi))
                }
            }
            return IHttpContentRangeHeaderValue(value!)
        }

        internal func CreateFromRangeImpl(_ from: UInt64, _ to: UInt64) throws -> IHttpContentRangeHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromRange(pThis, from, to, &valueAbi))
                }
            }
            return IHttpContentRangeHeaderValue(value!)
        }

        internal func CreateFromRangeWithLengthImpl(_ from: UInt64, _ to: UInt64, _ length: UInt64) throws -> IHttpContentRangeHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromRangeWithLength(pThis, from, to, length, &valueAbi))
                }
            }
            return IHttpContentRangeHeaderValue(value!)
        }

    }

    public class IHttpContentRangeHeaderValueStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics }

        internal func ParseImpl(_ input: String) throws -> UWP.HttpContentRangeHeaderValue? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let _input = try! HString(input)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Parse(pThis, _input.get(), &resultAbi))
                }
            }
            return .from(abi: result)
        }

        internal func TryParseImpl(_ input: String, _ contentRangeHeaderValue: inout UWP.HttpContentRangeHeaderValue?) throws -> Bool {
            var succeeded: boolean = 0
            let _input = try! HString(input)
            let (_contentRangeHeaderValue) = try ComPtrs.initialize { (_contentRangeHeaderValueAbi) in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpContentRangeHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.TryParse(pThis, _input.get(), &_contentRangeHeaderValueAbi, &succeeded))
                }
            }
            contentRangeHeaderValue = .from(abi: _contentRangeHeaderValue)
            return .init(from: succeeded)
        }

    }

    public class IHttpCookiePairHeaderValue: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue }

        internal func get_NameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Name(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_ValueImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Value(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_ValueImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Value(pThis, _value.get()))
            }
        }

    }

    public class IHttpCookiePairHeaderValueCollection: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection }

        internal func ParseAddImpl(_ input: String) throws {
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ParseAdd(pThis, _input.get()))
            }
        }

        internal func TryParseAddImpl(_ input: String) throws -> Bool {
            var result: boolean = 0
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryParseAdd(pThis, _input.get(), &result))
            }
            return .init(from: result)
        }

    }

    public class IHttpCookiePairHeaderValueFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory }

        internal func CreateFromNameImpl(_ name: String) throws -> IHttpCookiePairHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _name = try! HString(name)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromName(pThis, _name.get(), &valueAbi))
                }
            }
            return IHttpCookiePairHeaderValue(value!)
        }

        internal func CreateFromNameWithValueImpl(_ name: String, _ value: String) throws -> IHttpCookiePairHeaderValue {
            let (cookiePairHeaderValue) = try ComPtrs.initialize { cookiePairHeaderValueAbi in
                let _name = try! HString(name)
                let _value = try! HString(value)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromNameWithValue(pThis, _name.get(), _value.get(), &cookiePairHeaderValueAbi))
                }
            }
            return IHttpCookiePairHeaderValue(cookiePairHeaderValue!)
        }

    }

    public class IHttpCookiePairHeaderValueStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics }

        internal func ParseImpl(_ input: String) throws -> UWP.HttpCookiePairHeaderValue? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let _input = try! HString(input)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Parse(pThis, _input.get(), &resultAbi))
                }
            }
            return .from(abi: result)
        }

        internal func TryParseImpl(_ input: String, _ cookiePairHeaderValue: inout UWP.HttpCookiePairHeaderValue?) throws -> Bool {
            var succeeded: boolean = 0
            let _input = try! HString(input)
            let (_cookiePairHeaderValue) = try ComPtrs.initialize { (_cookiePairHeaderValueAbi) in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCookiePairHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.TryParse(pThis, _input.get(), &_cookiePairHeaderValueAbi, &succeeded))
                }
            }
            cookiePairHeaderValue = .from(abi: _cookiePairHeaderValue)
            return .init(from: succeeded)
        }

    }

    public class IHttpCredentialsHeaderValue: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue }

        internal func get_ParametersImpl() throws -> WindowsFoundation.AnyIVector<UWP.HttpNameValueHeaderValue?>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Parameters(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueWrapper.unwrapFrom(abi: value)
        }

        internal func get_SchemeImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Scheme(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_TokenImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Token(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IHttpCredentialsHeaderValueFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory }

        internal func CreateFromSchemeImpl(_ scheme: String) throws -> IHttpCredentialsHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _scheme = try! HString(scheme)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromScheme(pThis, _scheme.get(), &valueAbi))
                }
            }
            return IHttpCredentialsHeaderValue(value!)
        }

        internal func CreateFromSchemeWithTokenImpl(_ scheme: String, _ token: String) throws -> IHttpCredentialsHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _scheme = try! HString(scheme)
                let _token = try! HString(token)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromSchemeWithToken(pThis, _scheme.get(), _token.get(), &valueAbi))
                }
            }
            return IHttpCredentialsHeaderValue(value!)
        }

    }

    public class IHttpCredentialsHeaderValueStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics }

        internal func ParseImpl(_ input: String) throws -> UWP.HttpCredentialsHeaderValue? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let _input = try! HString(input)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Parse(pThis, _input.get(), &resultAbi))
                }
            }
            return .from(abi: result)
        }

        internal func TryParseImpl(_ input: String, _ credentialsHeaderValue: inout UWP.HttpCredentialsHeaderValue?) throws -> Bool {
            var succeeded: boolean = 0
            let _input = try! HString(input)
            let (_credentialsHeaderValue) = try ComPtrs.initialize { (_credentialsHeaderValueAbi) in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpCredentialsHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.TryParse(pThis, _input.get(), &_credentialsHeaderValueAbi, &succeeded))
                }
            }
            credentialsHeaderValue = .from(abi: _credentialsHeaderValue)
            return .init(from: succeeded)
        }

    }

    public class IHttpDateOrDeltaHeaderValue: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue }

        internal func get_DateImpl() throws -> WindowsFoundation.DateTime? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Date(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeWrapper.unwrapFrom(abi: value)
        }

        internal func get_DeltaImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValue.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Delta(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

    }

    public class IHttpDateOrDeltaHeaderValueStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics }

        internal func ParseImpl(_ input: String) throws -> UWP.HttpDateOrDeltaHeaderValue? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let _input = try! HString(input)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Parse(pThis, _input.get(), &resultAbi))
                }
            }
            return .from(abi: result)
        }

        internal func TryParseImpl(_ input: String, _ dateOrDeltaHeaderValue: inout UWP.HttpDateOrDeltaHeaderValue?) throws -> Bool {
            var succeeded: boolean = 0
            let _input = try! HString(input)
            let (_dateOrDeltaHeaderValue) = try ComPtrs.initialize { (_dateOrDeltaHeaderValueAbi) in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpDateOrDeltaHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.TryParse(pThis, _input.get(), &_dateOrDeltaHeaderValueAbi, &succeeded))
                }
            }
            dateOrDeltaHeaderValue = .from(abi: _dateOrDeltaHeaderValue)
            return .init(from: succeeded)
        }

    }

    public class IHttpExpectationHeaderValue: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue }

        internal func get_NameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Name(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_ValueImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Value(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_ValueImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Value(pThis, _value.get()))
            }
        }

        internal func get_ParametersImpl() throws -> WindowsFoundation.AnyIVector<UWP.HttpNameValueHeaderValue?>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValue.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Parameters(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueWrapper.unwrapFrom(abi: value)
        }

    }

    public class IHttpExpectationHeaderValueCollection: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection }

        internal func ParseAddImpl(_ input: String) throws {
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ParseAdd(pThis, _input.get()))
            }
        }

        internal func TryParseAddImpl(_ input: String) throws -> Bool {
            var result: boolean = 0
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryParseAdd(pThis, _input.get(), &result))
            }
            return .init(from: result)
        }

    }

    public class IHttpExpectationHeaderValueFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory }

        internal func CreateFromNameImpl(_ name: String) throws -> IHttpExpectationHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _name = try! HString(name)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromName(pThis, _name.get(), &valueAbi))
                }
            }
            return IHttpExpectationHeaderValue(value!)
        }

        internal func CreateFromNameWithValueImpl(_ name: String, _ value: String) throws -> IHttpExpectationHeaderValue {
            let (expectationHeaderValue) = try ComPtrs.initialize { expectationHeaderValueAbi in
                let _name = try! HString(name)
                let _value = try! HString(value)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromNameWithValue(pThis, _name.get(), _value.get(), &expectationHeaderValueAbi))
                }
            }
            return IHttpExpectationHeaderValue(expectationHeaderValue!)
        }

    }

    public class IHttpExpectationHeaderValueStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics }

        internal func ParseImpl(_ input: String) throws -> UWP.HttpExpectationHeaderValue? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let _input = try! HString(input)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Parse(pThis, _input.get(), &resultAbi))
                }
            }
            return .from(abi: result)
        }

        internal func TryParseImpl(_ input: String, _ expectationHeaderValue: inout UWP.HttpExpectationHeaderValue?) throws -> Bool {
            var succeeded: boolean = 0
            let _input = try! HString(input)
            let (_expectationHeaderValue) = try ComPtrs.initialize { (_expectationHeaderValueAbi) in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpExpectationHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.TryParse(pThis, _input.get(), &_expectationHeaderValueAbi, &succeeded))
                }
            }
            expectationHeaderValue = .from(abi: _expectationHeaderValue)
            return .init(from: succeeded)
        }

    }

    public class IHttpLanguageHeaderValueCollection: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection }

        internal func ParseAddImpl(_ input: String) throws {
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ParseAdd(pThis, _input.get()))
            }
        }

        internal func TryParseAddImpl(_ input: String) throws -> Bool {
            var result: boolean = 0
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryParseAdd(pThis, _input.get(), &result))
            }
            return .init(from: result)
        }

    }

    public class IHttpLanguageRangeWithQualityHeaderValue: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue }

        internal func get_LanguageRangeImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LanguageRange(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_QualityImpl() throws -> Double? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValue.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Quality(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_doubleWrapper.unwrapFrom(abi: value)
        }

    }

    public class IHttpLanguageRangeWithQualityHeaderValueCollection: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection }

        internal func ParseAddImpl(_ input: String) throws {
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ParseAdd(pThis, _input.get()))
            }
        }

        internal func TryParseAddImpl(_ input: String) throws -> Bool {
            var result: boolean = 0
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryParseAdd(pThis, _input.get(), &result))
            }
            return .init(from: result)
        }

    }

    public class IHttpLanguageRangeWithQualityHeaderValueFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory }

        internal func CreateFromLanguageRangeImpl(_ languageRange: String) throws -> IHttpLanguageRangeWithQualityHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _languageRange = try! HString(languageRange)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromLanguageRange(pThis, _languageRange.get(), &valueAbi))
                }
            }
            return IHttpLanguageRangeWithQualityHeaderValue(value!)
        }

        internal func CreateFromLanguageRangeWithQualityImpl(_ languageRange: String, _ quality: Double) throws -> IHttpLanguageRangeWithQualityHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _languageRange = try! HString(languageRange)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromLanguageRangeWithQuality(pThis, _languageRange.get(), quality, &valueAbi))
                }
            }
            return IHttpLanguageRangeWithQualityHeaderValue(value!)
        }

    }

    public class IHttpLanguageRangeWithQualityHeaderValueStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics }

        internal func ParseImpl(_ input: String) throws -> UWP.HttpLanguageRangeWithQualityHeaderValue? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let _input = try! HString(input)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Parse(pThis, _input.get(), &resultAbi))
                }
            }
            return .from(abi: result)
        }

        internal func TryParseImpl(_ input: String, _ languageRangeWithQualityHeaderValue: inout UWP.HttpLanguageRangeWithQualityHeaderValue?) throws -> Bool {
            var succeeded: boolean = 0
            let _input = try! HString(input)
            let (_languageRangeWithQualityHeaderValue) = try ComPtrs.initialize { (_languageRangeWithQualityHeaderValueAbi) in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpLanguageRangeWithQualityHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.TryParse(pThis, _input.get(), &_languageRangeWithQualityHeaderValueAbi, &succeeded))
                }
            }
            languageRangeWithQualityHeaderValue = .from(abi: _languageRangeWithQualityHeaderValue)
            return .init(from: succeeded)
        }

    }

    public class IHttpMediaTypeHeaderValue: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue }

        internal func get_CharSetImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_CharSet(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_CharSetImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_CharSet(pThis, _value.get()))
            }
        }

        internal func get_MediaTypeImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediaType(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_MediaTypeImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_MediaType(pThis, _value.get()))
            }
        }

        internal func get_ParametersImpl() throws -> WindowsFoundation.AnyIVector<UWP.HttpNameValueHeaderValue?>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValue.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Parameters(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueWrapper.unwrapFrom(abi: value)
        }

    }

    public class IHttpMediaTypeHeaderValueFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory }

        internal func CreateImpl(_ mediaType: String) throws -> IHttpMediaTypeHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _mediaType = try! HString(mediaType)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, _mediaType.get(), &valueAbi))
                }
            }
            return IHttpMediaTypeHeaderValue(value!)
        }

    }

    public class IHttpMediaTypeHeaderValueStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics }

        internal func ParseImpl(_ input: String) throws -> UWP.HttpMediaTypeHeaderValue? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let _input = try! HString(input)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Parse(pThis, _input.get(), &resultAbi))
                }
            }
            return .from(abi: result)
        }

        internal func TryParseImpl(_ input: String, _ mediaTypeHeaderValue: inout UWP.HttpMediaTypeHeaderValue?) throws -> Bool {
            var succeeded: boolean = 0
            let _input = try! HString(input)
            let (_mediaTypeHeaderValue) = try ComPtrs.initialize { (_mediaTypeHeaderValueAbi) in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.TryParse(pThis, _input.get(), &_mediaTypeHeaderValueAbi, &succeeded))
                }
            }
            mediaTypeHeaderValue = .from(abi: _mediaTypeHeaderValue)
            return .init(from: succeeded)
        }

    }

    public class IHttpMediaTypeWithQualityHeaderValue: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue }

        internal func get_CharSetImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_CharSet(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_CharSetImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_CharSet(pThis, _value.get()))
            }
        }

        internal func get_MediaTypeImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediaType(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_MediaTypeImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_MediaType(pThis, _value.get()))
            }
        }

        internal func get_ParametersImpl() throws -> WindowsFoundation.AnyIVector<UWP.HttpNameValueHeaderValue?>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Parameters(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueWrapper.unwrapFrom(abi: value)
        }

        internal func get_QualityImpl() throws -> Double? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Quality(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_doubleWrapper.unwrapFrom(abi: value)
        }

        internal func put_QualityImpl(_ value: Double?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1_doubleWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Quality(pThis, _value))
            }
        }

    }

    public class IHttpMediaTypeWithQualityHeaderValueCollection: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection }

        internal func ParseAddImpl(_ input: String) throws {
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ParseAdd(pThis, _input.get()))
            }
        }

        internal func TryParseAddImpl(_ input: String) throws -> Bool {
            var result: boolean = 0
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryParseAdd(pThis, _input.get(), &result))
            }
            return .init(from: result)
        }

    }

    public class IHttpMediaTypeWithQualityHeaderValueFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory }

        internal func CreateFromMediaTypeImpl(_ mediaType: String) throws -> IHttpMediaTypeWithQualityHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _mediaType = try! HString(mediaType)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromMediaType(pThis, _mediaType.get(), &valueAbi))
                }
            }
            return IHttpMediaTypeWithQualityHeaderValue(value!)
        }

        internal func CreateFromMediaTypeWithQualityImpl(_ mediaType: String, _ quality: Double) throws -> IHttpMediaTypeWithQualityHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _mediaType = try! HString(mediaType)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromMediaTypeWithQuality(pThis, _mediaType.get(), quality, &valueAbi))
                }
            }
            return IHttpMediaTypeWithQualityHeaderValue(value!)
        }

    }

    public class IHttpMediaTypeWithQualityHeaderValueStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics }

        internal func ParseImpl(_ input: String) throws -> UWP.HttpMediaTypeWithQualityHeaderValue? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let _input = try! HString(input)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Parse(pThis, _input.get(), &resultAbi))
                }
            }
            return .from(abi: result)
        }

        internal func TryParseImpl(_ input: String, _ mediaTypeWithQualityHeaderValue: inout UWP.HttpMediaTypeWithQualityHeaderValue?) throws -> Bool {
            var succeeded: boolean = 0
            let _input = try! HString(input)
            let (_mediaTypeWithQualityHeaderValue) = try ComPtrs.initialize { (_mediaTypeWithQualityHeaderValueAbi) in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMediaTypeWithQualityHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.TryParse(pThis, _input.get(), &_mediaTypeWithQualityHeaderValueAbi, &succeeded))
                }
            }
            mediaTypeWithQualityHeaderValue = .from(abi: _mediaTypeWithQualityHeaderValue)
            return .init(from: succeeded)
        }

    }

    public class IHttpMethodHeaderValueCollection: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection }

        internal func ParseAddImpl(_ input: String) throws {
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ParseAdd(pThis, _input.get()))
            }
        }

        internal func TryParseAddImpl(_ input: String) throws -> Bool {
            var result: boolean = 0
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpMethodHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryParseAdd(pThis, _input.get(), &result))
            }
            return .init(from: result)
        }

    }

    public class IHttpNameValueHeaderValue: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue }

        internal func get_NameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Name(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_ValueImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Value(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_ValueImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Value(pThis, _value.get()))
            }
        }

    }

    public class IHttpNameValueHeaderValueFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory }

        internal func CreateFromNameImpl(_ name: String) throws -> IHttpNameValueHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _name = try! HString(name)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromName(pThis, _name.get(), &valueAbi))
                }
            }
            return IHttpNameValueHeaderValue(value!)
        }

        internal func CreateFromNameWithValueImpl(_ name: String, _ value: String) throws -> IHttpNameValueHeaderValue {
            let (nameValueHeaderValue) = try ComPtrs.initialize { nameValueHeaderValueAbi in
                let _name = try! HString(name)
                let _value = try! HString(value)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromNameWithValue(pThis, _name.get(), _value.get(), &nameValueHeaderValueAbi))
                }
            }
            return IHttpNameValueHeaderValue(nameValueHeaderValue!)
        }

    }

    public class IHttpNameValueHeaderValueStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics }

        internal func ParseImpl(_ input: String) throws -> UWP.HttpNameValueHeaderValue? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let _input = try! HString(input)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Parse(pThis, _input.get(), &resultAbi))
                }
            }
            return .from(abi: result)
        }

        internal func TryParseImpl(_ input: String, _ nameValueHeaderValue: inout UWP.HttpNameValueHeaderValue?) throws -> Bool {
            var succeeded: boolean = 0
            let _input = try! HString(input)
            let (_nameValueHeaderValue) = try ComPtrs.initialize { (_nameValueHeaderValueAbi) in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpNameValueHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.TryParse(pThis, _input.get(), &_nameValueHeaderValueAbi, &succeeded))
                }
            }
            nameValueHeaderValue = .from(abi: _nameValueHeaderValue)
            return .init(from: succeeded)
        }

    }

    public class IHttpProductHeaderValue: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue }

        internal func get_NameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Name(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_VersionImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Version(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IHttpProductHeaderValueFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory }

        internal func CreateFromNameImpl(_ productName: String) throws -> IHttpProductHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _productName = try! HString(productName)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromName(pThis, _productName.get(), &valueAbi))
                }
            }
            return IHttpProductHeaderValue(value!)
        }

        internal func CreateFromNameWithVersionImpl(_ productName: String, _ productVersion: String) throws -> IHttpProductHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _productName = try! HString(productName)
                let _productVersion = try! HString(productVersion)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromNameWithVersion(pThis, _productName.get(), _productVersion.get(), &valueAbi))
                }
            }
            return IHttpProductHeaderValue(value!)
        }

    }

    public class IHttpProductHeaderValueStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics }

        internal func ParseImpl(_ input: String) throws -> UWP.HttpProductHeaderValue? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let _input = try! HString(input)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Parse(pThis, _input.get(), &resultAbi))
                }
            }
            return .from(abi: result)
        }

        internal func TryParseImpl(_ input: String, _ productHeaderValue: inout UWP.HttpProductHeaderValue?) throws -> Bool {
            var succeeded: boolean = 0
            let _input = try! HString(input)
            let (_productHeaderValue) = try ComPtrs.initialize { (_productHeaderValueAbi) in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.TryParse(pThis, _input.get(), &_productHeaderValueAbi, &succeeded))
                }
            }
            productHeaderValue = .from(abi: _productHeaderValue)
            return .init(from: succeeded)
        }

    }

    public class IHttpProductInfoHeaderValue: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue }

        internal func get_ProductImpl() throws -> UWP.HttpProductHeaderValue? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Product(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_CommentImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Comment(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IHttpProductInfoHeaderValueCollection: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection }

        internal func ParseAddImpl(_ input: String) throws {
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ParseAdd(pThis, _input.get()))
            }
        }

        internal func TryParseAddImpl(_ input: String) throws -> Bool {
            var result: boolean = 0
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryParseAdd(pThis, _input.get(), &result))
            }
            return .init(from: result)
        }

    }

    public class IHttpProductInfoHeaderValueFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory }

        internal func CreateFromCommentImpl(_ productComment: String) throws -> IHttpProductInfoHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _productComment = try! HString(productComment)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromComment(pThis, _productComment.get(), &valueAbi))
                }
            }
            return IHttpProductInfoHeaderValue(value!)
        }

        internal func CreateFromNameWithVersionImpl(_ productName: String, _ productVersion: String) throws -> IHttpProductInfoHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _productName = try! HString(productName)
                let _productVersion = try! HString(productVersion)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromNameWithVersion(pThis, _productName.get(), _productVersion.get(), &valueAbi))
                }
            }
            return IHttpProductInfoHeaderValue(value!)
        }

    }

    public class IHttpProductInfoHeaderValueStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics }

        internal func ParseImpl(_ input: String) throws -> UWP.HttpProductInfoHeaderValue? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let _input = try! HString(input)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Parse(pThis, _input.get(), &resultAbi))
                }
            }
            return .from(abi: result)
        }

        internal func TryParseImpl(_ input: String, _ productInfoHeaderValue: inout UWP.HttpProductInfoHeaderValue?) throws -> Bool {
            var succeeded: boolean = 0
            let _input = try! HString(input)
            let (_productInfoHeaderValue) = try ComPtrs.initialize { (_productInfoHeaderValueAbi) in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpProductInfoHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.TryParse(pThis, _input.get(), &_productInfoHeaderValueAbi, &succeeded))
                }
            }
            productInfoHeaderValue = .from(abi: _productInfoHeaderValue)
            return .init(from: succeeded)
        }

    }

    public class IHttpRequestHeaderCollection: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection }

        internal func get_AcceptImpl() throws -> UWP.HttpMediaTypeWithQualityHeaderValueCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Accept(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_AcceptEncodingImpl() throws -> UWP.HttpContentCodingWithQualityHeaderValueCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_AcceptEncoding(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_AcceptLanguageImpl() throws -> UWP.HttpLanguageRangeWithQualityHeaderValueCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_AcceptLanguage(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_AuthorizationImpl() throws -> UWP.HttpCredentialsHeaderValue? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Authorization(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_AuthorizationImpl(_ value: UWP.HttpCredentialsHeaderValue?) throws {
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Authorization(pThis, RawPointer(value)))
            }
        }

        internal func get_CacheControlImpl() throws -> UWP.HttpCacheDirectiveHeaderValueCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_CacheControl(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ConnectionImpl() throws -> UWP.HttpConnectionOptionHeaderValueCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Connection(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_CookieImpl() throws -> UWP.HttpCookiePairHeaderValueCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Cookie(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_DateImpl() throws -> WindowsFoundation.DateTime? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Date(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeWrapper.unwrapFrom(abi: value)
        }

        internal func put_DateImpl(_ value: WindowsFoundation.DateTime?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Date(pThis, _value))
            }
        }

        internal func get_ExpectImpl() throws -> UWP.HttpExpectationHeaderValueCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Expect(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_FromImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_From(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_FromImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_From(pThis, _value.get()))
            }
        }

        internal func get_HostImpl() throws -> UWP.HostName? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Host(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_HostImpl(_ value: UWP.HostName?) throws {
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Host(pThis, RawPointer(value)))
            }
        }

        internal func get_IfModifiedSinceImpl() throws -> WindowsFoundation.DateTime? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_IfModifiedSince(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeWrapper.unwrapFrom(abi: value)
        }

        internal func put_IfModifiedSinceImpl(_ value: WindowsFoundation.DateTime?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IfModifiedSince(pThis, _value))
            }
        }

        internal func get_IfUnmodifiedSinceImpl() throws -> WindowsFoundation.DateTime? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_IfUnmodifiedSince(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeWrapper.unwrapFrom(abi: value)
        }

        internal func put_IfUnmodifiedSinceImpl(_ value: WindowsFoundation.DateTime?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IfUnmodifiedSince(pThis, _value))
            }
        }

        internal func get_MaxForwardsImpl() throws -> UInt32? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_MaxForwards(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT32Wrapper.unwrapFrom(abi: value)
        }

        internal func put_MaxForwardsImpl(_ value: UInt32?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1_UINT32Wrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_MaxForwards(pThis, _value))
            }
        }

        internal func get_ProxyAuthorizationImpl() throws -> UWP.HttpCredentialsHeaderValue? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ProxyAuthorization(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_ProxyAuthorizationImpl(_ value: UWP.HttpCredentialsHeaderValue?) throws {
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ProxyAuthorization(pThis, RawPointer(value)))
            }
        }

        internal func get_RefererImpl() throws -> WindowsFoundation.Uri? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Referer(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_RefererImpl(_ value: WindowsFoundation.Uri?) throws {
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Referer(pThis, RawPointer(value)))
            }
        }

        internal func get_TransferEncodingImpl() throws -> UWP.HttpTransferCodingHeaderValueCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_TransferEncoding(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_UserAgentImpl() throws -> UWP.HttpProductInfoHeaderValueCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_UserAgent(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func AppendImpl(_ name: String, _ value: String) throws {
            let _name = try! HString(name)
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Append(pThis, _name.get(), _value.get()))
            }
        }

        internal func TryAppendWithoutValidationImpl(_ name: String, _ value: String) throws -> Bool {
            var result: boolean = 0
            let _name = try! HString(name)
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpRequestHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryAppendWithoutValidation(pThis, _name.get(), _value.get(), &result))
            }
            return .init(from: result)
        }

    }

    public class IHttpResponseHeaderCollection: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection }

        internal func get_AgeImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Age(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

        internal func put_AgeImpl(_ value: WindowsFoundation.TimeSpan?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Age(pThis, _value))
            }
        }

        internal func get_AllowImpl() throws -> UWP.HttpMethodHeaderValueCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Allow(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_CacheControlImpl() throws -> UWP.HttpCacheDirectiveHeaderValueCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_CacheControl(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ConnectionImpl() throws -> UWP.HttpConnectionOptionHeaderValueCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Connection(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_DateImpl() throws -> WindowsFoundation.DateTime? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Date(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeWrapper.unwrapFrom(abi: value)
        }

        internal func put_DateImpl(_ value: WindowsFoundation.DateTime?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Date(pThis, _value))
            }
        }

        internal func get_LocationImpl() throws -> WindowsFoundation.Uri? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Location(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_LocationImpl(_ value: WindowsFoundation.Uri?) throws {
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Location(pThis, RawPointer(value)))
            }
        }

        internal func get_ProxyAuthenticateImpl() throws -> UWP.HttpChallengeHeaderValueCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ProxyAuthenticate(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_RetryAfterImpl() throws -> UWP.HttpDateOrDeltaHeaderValue? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_RetryAfter(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_RetryAfterImpl(_ value: UWP.HttpDateOrDeltaHeaderValue?) throws {
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_RetryAfter(pThis, RawPointer(value)))
            }
        }

        internal func get_TransferEncodingImpl() throws -> UWP.HttpTransferCodingHeaderValueCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_TransferEncoding(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_WwwAuthenticateImpl() throws -> UWP.HttpChallengeHeaderValueCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_WwwAuthenticate(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func AppendImpl(_ name: String, _ value: String) throws {
            let _name = try! HString(name)
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Append(pThis, _name.get(), _value.get()))
            }
        }

        internal func TryAppendWithoutValidationImpl(_ name: String, _ value: String) throws -> Bool {
            var result: boolean = 0
            let _name = try! HString(name)
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpResponseHeaderCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryAppendWithoutValidation(pThis, _name.get(), _value.get(), &result))
            }
            return .init(from: result)
        }

    }

    public class IHttpTransferCodingHeaderValue: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue }

        internal func get_ParametersImpl() throws -> WindowsFoundation.AnyIVector<UWP.HttpNameValueHeaderValue?>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Parameters(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVector_1___x_ABI_CWindows__CWeb__CHttp__CHeaders__CHttpNameValueHeaderValueWrapper.unwrapFrom(abi: value)
        }

        internal func get_ValueImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValue.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Value(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IHttpTransferCodingHeaderValueCollection: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection }

        internal func ParseAddImpl(_ input: String) throws {
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ParseAdd(pThis, _input.get()))
            }
        }

        internal func TryParseAddImpl(_ input: String) throws -> Bool {
            var result: boolean = 0
            let _input = try! HString(input)
            _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueCollection.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryParseAdd(pThis, _input.get(), &result))
            }
            return .init(from: result)
        }

    }

    public class IHttpTransferCodingHeaderValueFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory }

        internal func CreateImpl(_ input: String) throws -> IHttpTransferCodingHeaderValue {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _input = try! HString(input)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueFactory.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Create(pThis, _input.get(), &valueAbi))
                }
            }
            return IHttpTransferCodingHeaderValue(value!)
        }

    }

    public class IHttpTransferCodingHeaderValueStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics }

        internal func ParseImpl(_ input: String) throws -> UWP.HttpTransferCodingHeaderValue? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let _input = try! HString(input)
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.Parse(pThis, _input.get(), &resultAbi))
                }
            }
            return .from(abi: result)
        }

        internal func TryParseImpl(_ input: String, _ transferCodingHeaderValue: inout UWP.HttpTransferCodingHeaderValue?) throws -> Bool {
            var succeeded: boolean = 0
            let _input = try! HString(input)
            let (_transferCodingHeaderValue) = try ComPtrs.initialize { (_transferCodingHeaderValueAbi) in
                _ = try perform(as: __x_ABI_CWindows_CWeb_CHttp_CHeaders_CIHttpTransferCodingHeaderValueStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.TryParse(pThis, _input.get(), &_transferCodingHeaderValueAbi, &succeeded))
                }
            }
            transferCodingHeaderValue = .from(abi: _transferCodingHeaderValue)
            return .init(from: succeeded)
        }

    }

}
