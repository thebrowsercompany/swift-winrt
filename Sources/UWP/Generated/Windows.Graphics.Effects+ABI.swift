// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect: WindowsFoundation.IID {
    .init(Data1: 0xCB51C0CE, Data2: 0x8FE6, Data3: 0x4636, Data4: ( 0xB2,0x02,0x86,0x1F,0xAA,0x07,0xD8,0xF3 ))// CB51C0CE-8FE6-4636-B202-861FAA07D8F3
}

private var IID___x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource: WindowsFoundation.IID {
    .init(Data1: 0x2D8F9DDC, Data2: 0x4339, Data3: 0x4EB9, Data4: ( 0x92,0x16,0xF9,0xDE,0xB7,0x56,0x58,0xA2 ))// 2D8F9DDC-4339-4EB9-9216-F9DEB75658A2
}

public enum __ABI_Windows_Graphics_Effects {
    public class IGraphicsEffect: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect }

        open func get_NameImpl() throws -> String {
            var name: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Name(pThis, &name))
            }
            return .init(from: name)
        }

        open func put_NameImpl(_ name: String) throws {
            let _name = try! HString(name)
            _ = try perform(as: __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Name(pThis, _name.get()))
            }
        }

    }

    internal static var IGraphicsEffectVTable: __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectVtbl = .init(
        QueryInterface: { IGraphicsEffectWrapper.queryInterface($0, $1, $2) },
        AddRef: { IGraphicsEffectWrapper.addRef($0) },
        Release: { IGraphicsEffectWrapper.release($0) },
        GetIids: {
            let size = MemoryLayout<WindowsFoundation.IID>.size
            let iids = CoTaskMemAlloc(UInt64(size) * 4).assumingMemoryBound(to: WindowsFoundation.IID.self)
            iids[0] = IUnknown.IID
            iids[1] = IInspectable.IID
            iids[2] = __ABI_Windows_Graphics_Effects.IGraphicsEffectWrapper.IID
            iids[3] = __ABI_Windows_Graphics_Effects.IGraphicsEffectSourceWrapper.IID
            $1!.pointee = 4
            $2!.pointee = iids
            return S_OK
        },

        GetRuntimeClassName: {
            _ = $0
            let hstring = try! HString("Windows.Graphics.Effects.IGraphicsEffect").detach()
            $1!.pointee = hstring
            return S_OK
        },

        GetTrustLevel: {
            _ = $0
            $1!.pointee = TrustLevel(rawValue: 0)
            return S_OK
        },

        get_Name: {
            guard let __unwrapped__instance = IGraphicsEffectWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let name = __unwrapped__instance.name
            $1?.initialize(to: try! HString(name).detach())
            return S_OK
        },

        put_Name: {
            guard let __unwrapped__instance = IGraphicsEffectWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let name: String = .init(from: $1)
            __unwrapped__instance.name = name
            return S_OK
        }
    )

    public typealias IGraphicsEffectWrapper = InterfaceWrapperBase<__IMPL_Windows_Graphics_Effects.IGraphicsEffectBridge>
    public class IGraphicsEffectSource: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSource }

    }

    internal static var IGraphicsEffectSourceVTable: __x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffectSourceVtbl = .init(
        QueryInterface: { IGraphicsEffectSourceWrapper.queryInterface($0, $1, $2) },
        AddRef: { IGraphicsEffectSourceWrapper.addRef($0) },
        Release: { IGraphicsEffectSourceWrapper.release($0) },
        GetIids: {
            let size = MemoryLayout<WindowsFoundation.IID>.size
            let iids = CoTaskMemAlloc(UInt64(size) * 3).assumingMemoryBound(to: WindowsFoundation.IID.self)
            iids[0] = IUnknown.IID
            iids[1] = IInspectable.IID
            iids[2] = __ABI_Windows_Graphics_Effects.IGraphicsEffectSourceWrapper.IID
            $1!.pointee = 3
            $2!.pointee = iids
            return S_OK
        },

        GetRuntimeClassName: {
            _ = $0
            let hstring = try! HString("Windows.Graphics.Effects.IGraphicsEffectSource").detach()
            $1!.pointee = hstring
            return S_OK
        },

        GetTrustLevel: {
            _ = $0
            $1!.pointee = TrustLevel(rawValue: 0)
            return S_OK
        }
    )

    public typealias IGraphicsEffectSourceWrapper = InterfaceWrapperBase<__IMPL_Windows_Graphics_Effects.IGraphicsEffectSourceBridge>
}
