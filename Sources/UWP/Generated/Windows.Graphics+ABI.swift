// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CWindows_CGraphics_CIGeometrySource2D: WindowsFoundation.IID {
    .init(Data1: 0xCAFF7902, Data2: 0x670C, Data3: 0x4181, Data4: ( 0xA6,0x24,0xDA,0x97,0x72,0x03,0xB8,0x45 ))// CAFF7902-670C-4181-A624-DA977203B845
}

public enum __ABI_Windows_Graphics {
    public class IGeometrySource2D: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CGraphics_CIGeometrySource2D }

    }

    internal static var IGeometrySource2DVTable: __x_ABI_CWindows_CGraphics_CIGeometrySource2DVtbl = .init(
        QueryInterface: { IGeometrySource2DWrapper.queryInterface($0, $1, $2) },
        AddRef: { IGeometrySource2DWrapper.addRef($0) },
        Release: { IGeometrySource2DWrapper.release($0) },
        GetIids: {
            let size = MemoryLayout<WindowsFoundation.IID>.size
            let iids = CoTaskMemAlloc(UInt64(size) * 3).assumingMemoryBound(to: WindowsFoundation.IID.self)
            iids[0] = IUnknown.IID
            iids[1] = IInspectable.IID
            iids[2] = __ABI_Windows_Graphics.IGeometrySource2DWrapper.IID
            $1!.pointee = 3
            $2!.pointee = iids
            return S_OK
        },

        GetRuntimeClassName: {
            _ = $0
            let hstring = try! HString("Windows.Graphics.IGeometrySource2D").detach()
            $1!.pointee = hstring
            return S_OK
        },

        GetTrustLevel: {
            _ = $0
            $1!.pointee = TrustLevel(rawValue: 0)
            return S_OK
        }
    )

    public typealias IGeometrySource2DWrapper = InterfaceWrapperBase<__IMPL_Windows_Graphics.IGeometrySource2DBridge>
}
extension __x_ABI_CWindows_CGraphics_CPointInt32 {
        public static func from(swift: UWP.PointInt32) -> __x_ABI_CWindows_CGraphics_CPointInt32 {
            .init(X: swift.x, Y: swift.y)
        }
    }
    extension __x_ABI_CWindows_CGraphics_CRectInt32 {
        public static func from(swift: UWP.RectInt32) -> __x_ABI_CWindows_CGraphics_CRectInt32 {
            .init(X: swift.x, Y: swift.y, Width: swift.width, Height: swift.height)
        }
    }
    extension __x_ABI_CWindows_CGraphics_CSizeInt32 {
        public static func from(swift: UWP.SizeInt32) -> __x_ABI_CWindows_CGraphics_CSizeInt32 {
            .init(Width: swift.width, Height: swift.height)
        }
    }
    