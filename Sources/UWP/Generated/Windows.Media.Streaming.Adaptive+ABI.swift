// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource: WindowsFoundation.IID {
    .init(Data1: 0x4C7332EF, Data2: 0xD39F, Data3: 0x4396, Data4: ( 0xB4,0xD9,0x04,0x39,0x57,0xA7,0xC9,0x64 ))// 4C7332EF-D39F-4396-B4D9-043957A7C964
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource2: WindowsFoundation.IID {
    .init(Data1: 0x17890342, Data2: 0x6760, Data3: 0x4BB9, Data4: ( 0xA5,0x8A,0xF7,0xAA,0x98,0xB0,0x8C,0x0E ))// 17890342-6760-4BB9-A58A-F7AA98B08C0E
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource3: WindowsFoundation.IID {
    .init(Data1: 0xBA7023FD, Data2: 0xC334, Data3: 0x461B, Data4: ( 0xA3,0x6E,0xC9,0x9F,0x54,0xF7,0x17,0x4A ))// BA7023FD-C334-461B-A36E-C99F54F7174A
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceAdvancedSettings: WindowsFoundation.IID {
    .init(Data1: 0x55DB1680, Data2: 0x1AEB, Data3: 0x47DC, Data4: ( 0xAA,0x08,0x9A,0x11,0x61,0x0B,0xA4,0x5A ))// 55DB1680-1AEB-47DC-AA08-9A11610BA45A
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceCorrelatedTimes: WindowsFoundation.IID {
    .init(Data1: 0x05108787, Data2: 0xE032, Data3: 0x48E1, Data4: ( 0xAB,0x8D,0x00,0x2B,0x0B,0x30,0x51,0xDF ))// 05108787-E032-48E1-AB8D-002B0B3051DF
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceCreationResult: WindowsFoundation.IID {
    .init(Data1: 0x4686B6B2, Data2: 0x800F, Data3: 0x4E31, Data4: ( 0x90,0x93,0x76,0xD4,0x78,0x20,0x13,0xE7 ))// 4686B6B2-800F-4E31-9093-76D4782013E7
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceCreationResult2: WindowsFoundation.IID {
    .init(Data1: 0x1C3243BF, Data2: 0x1C44, Data3: 0x404B, Data4: ( 0xA2,0x01,0xDF,0x45,0xAC,0x78,0x98,0xE8 ))// 1C3243BF-1C44-404B-A201-DF45AC7898E8
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnosticAvailableEventArgs: WindowsFoundation.IID {
    .init(Data1: 0x3AF64F06, Data2: 0x6D9C, Data3: 0x494A, Data4: ( 0xB7,0xA9,0xB3,0xA5,0xDE,0xE6,0xAD,0x68 ))// 3AF64F06-6D9C-494A-B7A9-B3A5DEE6AD68
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnosticAvailableEventArgs2: WindowsFoundation.IID {
    .init(Data1: 0x8C6DD857, Data2: 0x16A5, Data3: 0x4D9F, Data4: ( 0x81,0x0E,0x00,0xBD,0x90,0x1B,0x3E,0xF9 ))// 8C6DD857-16A5-4D9F-810E-00BD901B3EF9
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnosticAvailableEventArgs3: WindowsFoundation.IID {
    .init(Data1: 0xC3650CD5, Data2: 0xDAEB, Data3: 0x4103, Data4: ( 0x84,0xDA,0x68,0x76,0x9A,0xD5,0x13,0xFF ))// C3650CD5-DAEB-4103-84DA-68769AD513FF
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnostics: WindowsFoundation.IID {
    .init(Data1: 0x9B24EE68, Data2: 0x962E, Data3: 0x448C, Data4: ( 0xAE,0xBF,0xB2,0x9B,0x56,0x09,0x8E,0x23 ))// 9B24EE68-962E-448C-AEBF-B29B56098E23
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadBitrateChangedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0x670C0A44, Data2: 0xE04E, Data3: 0x4EFF, Data4: ( 0x81,0x6A,0x17,0x39,0x9F,0x78,0xF4,0xBA ))// 670C0A44-E04E-4EFF-816A-17399F78F4BA
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadBitrateChangedEventArgs2: WindowsFoundation.IID {
    .init(Data1: 0xF3F1F444, Data2: 0x96AE, Data3: 0x4DE0, Data4: ( 0xB5,0x40,0x2B,0x32,0x46,0xE6,0x96,0x8C ))// F3F1F444-96AE-4DE0-B540-2B3246E6968C
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadCompletedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0x19240DC3, Data2: 0x5B37, Data3: 0x4A1A, Data4: ( 0x89,0x70,0xD6,0x21,0xCB,0x6C,0xA8,0x3B ))// 19240DC3-5B37-4A1A-8970-D621CB6CA83B
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadCompletedEventArgs2: WindowsFoundation.IID {
    .init(Data1: 0x704744C4, Data2: 0x964A, Data3: 0x40E4, Data4: ( 0xAF,0x95,0x91,0x77,0xDD,0x6D,0xFA,0x00 ))// 704744C4-964A-40E4-AF95-9177DD6DFA00
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadCompletedEventArgs3: WindowsFoundation.IID {
    .init(Data1: 0x0F8A8BD1, Data2: 0x93B2, Data3: 0x47C6, Data4: ( 0xBA,0xDC,0x8B,0xE2,0xC8,0xF7,0xF6,0xE8 ))// 0F8A8BD1-93B2-47C6-BADC-8BE2C8F7F6E8
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadFailedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0x37739048, Data2: 0xF4AB, Data3: 0x40A4, Data4: ( 0xB1,0x35,0xC6,0xDF,0xD8,0xBD,0x7F,0xF1 ))// 37739048-F4AB-40A4-B135-C6DFD8BD7FF1
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadFailedEventArgs2: WindowsFoundation.IID {
    .init(Data1: 0x70919568, Data2: 0x967C, Data3: 0x4986, Data4: ( 0x90,0xC5,0xC6,0xFC,0x4B,0x31,0xE2,0xD8 ))// 70919568-967C-4986-90C5-C6FC4B31E2D8
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadFailedEventArgs3: WindowsFoundation.IID {
    .init(Data1: 0xD0354549, Data2: 0x1132, Data3: 0x4A10, Data4: ( 0x91,0x5A,0xC2,0x21,0x1B,0x5B,0x94,0x09 ))// D0354549-1132-4A10-915A-C2211B5B9409
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadRequestedDeferral: WindowsFoundation.IID {
    .init(Data1: 0x05C68F64, Data2: 0xFA20, Data3: 0x4DBD, Data4: ( 0x98,0x21,0x4B,0xF4,0xC9,0xBF,0x77,0xAB ))// 05C68F64-FA20-4DBD-9821-4BF4C9BF77AB
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadRequestedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0xC83FDFFD, Data2: 0x44A9, Data3: 0x47A2, Data4: ( 0xBF,0x96,0x03,0x39,0x8B,0x4B,0xFA,0xAF ))// C83FDFFD-44A9-47A2-BF96-03398B4BFAAF
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadRequestedEventArgs2: WindowsFoundation.IID {
    .init(Data1: 0xB37D8BFE, Data2: 0xAA44, Data3: 0x4D82, Data4: ( 0x82,0x5B,0x61,0x1D,0xE3,0xBC,0xFE,0xCB ))// B37D8BFE-AA44-4D82-825B-611DE3BCFECB
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadRequestedEventArgs3: WindowsFoundation.IID {
    .init(Data1: 0x333C50FD, Data2: 0x4F62, Data3: 0x4481, Data4: ( 0xAB,0x44,0x1E,0x47,0xB0,0x57,0x42,0x25 ))// 333C50FD-4F62-4481-AB44-1E47B0574225
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadResult: WindowsFoundation.IID {
    .init(Data1: 0xF4AFDC73, Data2: 0xBCEE, Data3: 0x4A6A, Data4: ( 0x9F,0x0A,0xFE,0xC4,0x1E,0x23,0x39,0xB0 ))// F4AFDC73-BCEE-4A6A-9F0A-FEC41E2339B0
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadResult2: WindowsFoundation.IID {
    .init(Data1: 0x15552CB7, Data2: 0x7B80, Data3: 0x4AC4, Data4: ( 0x86,0x60,0xA4,0xB9,0x7F,0x7C,0x70,0xF0 ))// 15552CB7-7B80-4AC4-8660-A4B97F7C70F0
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadStatistics: WindowsFoundation.IID {
    .init(Data1: 0xA306CEFB, Data2: 0xE96A, Data3: 0x4DFF, Data4: ( 0xA9,0xB8,0x1A,0xE0,0x8C,0x01,0xAE,0x98 ))// A306CEFB-E96A-4DFF-A9B8-1AE08C01AE98
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourcePlaybackBitrateChangedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0x23A29F6D, Data2: 0x7DDA, Data3: 0x4A51, Data4: ( 0x87,0xA9,0x6F,0xA8,0xC5,0xB2,0x92,0xBE ))// 23A29F6D-7DDA-4A51-87A9-6FA8C5B292BE
}

private var IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceStatics: WindowsFoundation.IID {
    .init(Data1: 0x50A6BD5D, Data2: 0x66EF, Data3: 0x4CD3, Data4: ( 0x95,0x79,0x9E,0x66,0x05,0x07,0xDC,0x3F ))// 50A6BD5D-66EF-4CD3-9579-9E660507DC3F
}

public enum __ABI_Windows_Media_Streaming_Adaptive {
    public class IAdaptiveMediaSource: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource }

        internal func get_IsLiveImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsLive(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_DesiredLiveOffsetImpl() throws -> WindowsFoundation.TimeSpan {
            var value: __x_ABI_CWindows_CFoundation_CTimeSpan = .init()
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DesiredLiveOffset(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_DesiredLiveOffsetImpl(_ value: WindowsFoundation.TimeSpan) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_DesiredLiveOffset(pThis, .from(swift: value)))
            }
        }

        internal func get_InitialBitrateImpl() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_InitialBitrate(pThis, &value))
            }
            return value
        }

        internal func put_InitialBitrateImpl(_ value: UInt32) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_InitialBitrate(pThis, value))
            }
        }

        internal func get_CurrentDownloadBitrateImpl() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_CurrentDownloadBitrate(pThis, &value))
            }
            return value
        }

        internal func get_CurrentPlaybackBitrateImpl() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_CurrentPlaybackBitrate(pThis, &value))
            }
            return value
        }

        internal func get_AvailableBitratesImpl() throws -> WindowsFoundation.AnyIVectorView<UInt32>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_AvailableBitrates(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVectorView_1_UINT32Wrapper.unwrapFrom(abi: value)
        }

        internal func get_DesiredMinBitrateImpl() throws -> UInt32? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_DesiredMinBitrate(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT32Wrapper.unwrapFrom(abi: value)
        }

        internal func put_DesiredMinBitrateImpl(_ value: UInt32?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1_UINT32Wrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_DesiredMinBitrate(pThis, _value))
            }
        }

        internal func get_DesiredMaxBitrateImpl() throws -> UInt32? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_DesiredMaxBitrate(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT32Wrapper.unwrapFrom(abi: value)
        }

        internal func put_DesiredMaxBitrateImpl(_ value: UInt32?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1_UINT32Wrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_DesiredMaxBitrate(pThis, _value))
            }
        }

        internal func get_AudioOnlyPlaybackImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AudioOnlyPlayback(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_InboundBitsPerSecondImpl() throws -> UInt64 {
            var value: UINT64 = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_InboundBitsPerSecond(pThis, &value))
            }
            return value
        }

        internal func get_InboundBitsPerSecondWindowImpl() throws -> WindowsFoundation.TimeSpan {
            var value: __x_ABI_CWindows_CFoundation_CTimeSpan = .init()
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_InboundBitsPerSecondWindow(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_InboundBitsPerSecondWindowImpl(_ value: WindowsFoundation.TimeSpan) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_InboundBitsPerSecondWindow(pThis, .from(swift: value)))
            }
        }

        internal func add_DownloadBitrateChangedImpl(_ handler: TypedEventHandler<UWP.AdaptiveMediaSource?, UWP.AdaptiveMediaSourceDownloadBitrateChangedEventArgs?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CStreaming__CAdaptive__CAdaptiveMediaSource___x_ABI_CWindows__CMedia__CStreaming__CAdaptive__CAdaptiveMediaSourceDownloadBitrateChangedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_DownloadBitrateChanged(pThis, _handler, &token))
            }
            return token
        }

        internal func remove_DownloadBitrateChangedImpl(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_DownloadBitrateChanged(pThis, token))
            }
        }

        internal func add_PlaybackBitrateChangedImpl(_ handler: TypedEventHandler<UWP.AdaptiveMediaSource?, UWP.AdaptiveMediaSourcePlaybackBitrateChangedEventArgs?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CStreaming__CAdaptive__CAdaptiveMediaSource___x_ABI_CWindows__CMedia__CStreaming__CAdaptive__CAdaptiveMediaSourcePlaybackBitrateChangedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_PlaybackBitrateChanged(pThis, _handler, &token))
            }
            return token
        }

        internal func remove_PlaybackBitrateChangedImpl(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_PlaybackBitrateChanged(pThis, token))
            }
        }

        internal func add_DownloadRequestedImpl(_ handler: TypedEventHandler<UWP.AdaptiveMediaSource?, UWP.AdaptiveMediaSourceDownloadRequestedEventArgs?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CStreaming__CAdaptive__CAdaptiveMediaSource___x_ABI_CWindows__CMedia__CStreaming__CAdaptive__CAdaptiveMediaSourceDownloadRequestedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_DownloadRequested(pThis, _handler, &token))
            }
            return token
        }

        internal func remove_DownloadRequestedImpl(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_DownloadRequested(pThis, token))
            }
        }

        internal func add_DownloadCompletedImpl(_ handler: TypedEventHandler<UWP.AdaptiveMediaSource?, UWP.AdaptiveMediaSourceDownloadCompletedEventArgs?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CStreaming__CAdaptive__CAdaptiveMediaSource___x_ABI_CWindows__CMedia__CStreaming__CAdaptive__CAdaptiveMediaSourceDownloadCompletedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_DownloadCompleted(pThis, _handler, &token))
            }
            return token
        }

        internal func remove_DownloadCompletedImpl(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_DownloadCompleted(pThis, token))
            }
        }

        internal func add_DownloadFailedImpl(_ handler: TypedEventHandler<UWP.AdaptiveMediaSource?, UWP.AdaptiveMediaSourceDownloadFailedEventArgs?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CStreaming__CAdaptive__CAdaptiveMediaSource___x_ABI_CWindows__CMedia__CStreaming__CAdaptive__CAdaptiveMediaSourceDownloadFailedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_DownloadFailed(pThis, _handler, &token))
            }
            return token
        }

        internal func remove_DownloadFailedImpl(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_DownloadFailed(pThis, token))
            }
        }

    }

    public class IAdaptiveMediaSource2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource2 }

        internal func get_AdvancedSettingsImpl() throws -> UWP.AdaptiveMediaSourceAdvancedSettings? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_AdvancedSettings(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IAdaptiveMediaSource3: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource3 }

        internal func get_MinLiveOffsetImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource3.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_MinLiveOffset(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

        internal func get_MaxSeekableWindowSizeImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource3.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_MaxSeekableWindowSize(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

        internal func get_DesiredSeekableWindowSizeImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource3.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_DesiredSeekableWindowSize(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

        internal func put_DesiredSeekableWindowSizeImpl(_ value: WindowsFoundation.TimeSpan?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_DesiredSeekableWindowSize(pThis, _value))
            }
        }

        internal func get_DiagnosticsImpl() throws -> UWP.AdaptiveMediaSourceDiagnostics? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource3.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Diagnostics(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func GetCorrelatedTimesImpl() throws -> UWP.AdaptiveMediaSourceCorrelatedTimes? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSource3.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetCorrelatedTimes(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IAdaptiveMediaSourceAdvancedSettings: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceAdvancedSettings }

        internal func get_AllSegmentsIndependentImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceAdvancedSettings.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AllSegmentsIndependent(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_AllSegmentsIndependentImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceAdvancedSettings.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_AllSegmentsIndependent(pThis, .init(from: value)))
            }
        }

        internal func get_DesiredBitrateHeadroomRatioImpl() throws -> Double? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceAdvancedSettings.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_DesiredBitrateHeadroomRatio(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_doubleWrapper.unwrapFrom(abi: value)
        }

        internal func put_DesiredBitrateHeadroomRatioImpl(_ value: Double?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1_doubleWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceAdvancedSettings.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_DesiredBitrateHeadroomRatio(pThis, _value))
            }
        }

        internal func get_BitrateDowngradeTriggerRatioImpl() throws -> Double? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceAdvancedSettings.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_BitrateDowngradeTriggerRatio(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_doubleWrapper.unwrapFrom(abi: value)
        }

        internal func put_BitrateDowngradeTriggerRatioImpl(_ value: Double?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1_doubleWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceAdvancedSettings.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_BitrateDowngradeTriggerRatio(pThis, _value))
            }
        }

    }

    public class IAdaptiveMediaSourceCorrelatedTimes: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceCorrelatedTimes }

        internal func get_PositionImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceCorrelatedTimes.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Position(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

        internal func get_PresentationTimeStampImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceCorrelatedTimes.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_PresentationTimeStamp(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

        internal func get_ProgramDateTimeImpl() throws -> WindowsFoundation.DateTime? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceCorrelatedTimes.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ProgramDateTime(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeWrapper.unwrapFrom(abi: value)
        }

    }

    public class IAdaptiveMediaSourceCreationResult: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceCreationResult }

        internal func get_StatusImpl() throws -> UWP.AdaptiveMediaSourceCreationStatus {
            var value: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CAdaptiveMediaSourceCreationStatus = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceCreationResult.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Status(pThis, &value))
            }
            return value
        }

        internal func get_MediaSourceImpl() throws -> UWP.AdaptiveMediaSource? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceCreationResult.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_MediaSource(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_HttpResponseMessageImpl() throws -> UWP.HttpResponseMessage? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceCreationResult.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_HttpResponseMessage(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IAdaptiveMediaSourceCreationResult2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceCreationResult2 }

        internal func get_ExtendedErrorImpl() throws -> HRESULT {
            var value: HRESULT = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceCreationResult2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExtendedError(pThis, &value))
            }
            return value
        }

    }

    public class IAdaptiveMediaSourceDiagnosticAvailableEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnosticAvailableEventArgs }

        internal func get_DiagnosticTypeImpl() throws -> UWP.AdaptiveMediaSourceDiagnosticType {
            var value: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CAdaptiveMediaSourceDiagnosticType = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnosticAvailableEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DiagnosticType(pThis, &value))
            }
            return value
        }

        internal func get_RequestIdImpl() throws -> Int32? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnosticAvailableEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestId(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_intWrapper.unwrapFrom(abi: value)
        }

        internal func get_PositionImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnosticAvailableEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Position(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

        internal func get_SegmentIdImpl() throws -> UInt64? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnosticAvailableEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_SegmentId(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT64Wrapper.unwrapFrom(abi: value)
        }

        internal func get_ResourceTypeImpl() throws -> UWP.AdaptiveMediaSourceResourceType? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnosticAvailableEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceType(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CMedia__CStreaming__CAdaptive__CAdaptiveMediaSourceResourceTypeWrapper.unwrapFrom(abi: value)
        }

        internal func get_ResourceUriImpl() throws -> WindowsFoundation.Uri? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnosticAvailableEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceUri(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ResourceByteRangeOffsetImpl() throws -> UInt64? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnosticAvailableEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceByteRangeOffset(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT64Wrapper.unwrapFrom(abi: value)
        }

        internal func get_ResourceByteRangeLengthImpl() throws -> UInt64? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnosticAvailableEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceByteRangeLength(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT64Wrapper.unwrapFrom(abi: value)
        }

        internal func get_BitrateImpl() throws -> UInt32? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnosticAvailableEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Bitrate(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT32Wrapper.unwrapFrom(abi: value)
        }

    }

    public class IAdaptiveMediaSourceDiagnosticAvailableEventArgs2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnosticAvailableEventArgs2 }

        internal func get_ExtendedErrorImpl() throws -> HRESULT {
            var value: HRESULT = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnosticAvailableEventArgs2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExtendedError(pThis, &value))
            }
            return value
        }

    }

    public class IAdaptiveMediaSourceDiagnosticAvailableEventArgs3: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnosticAvailableEventArgs3 }

        internal func get_ResourceDurationImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnosticAvailableEventArgs3.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceDuration(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

        internal func get_ResourceContentTypeImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnosticAvailableEventArgs3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceContentType(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IAdaptiveMediaSourceDiagnostics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnostics }

        internal func add_DiagnosticAvailableImpl(_ handler: TypedEventHandler<UWP.AdaptiveMediaSourceDiagnostics?, UWP.AdaptiveMediaSourceDiagnosticAvailableEventArgs?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CMedia__CStreaming__CAdaptive__CAdaptiveMediaSourceDiagnostics___x_ABI_CWindows__CMedia__CStreaming__CAdaptive__CAdaptiveMediaSourceDiagnosticAvailableEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnostics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_DiagnosticAvailable(pThis, _handler, &token))
            }
            return token
        }

        internal func remove_DiagnosticAvailableImpl(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDiagnostics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_DiagnosticAvailable(pThis, token))
            }
        }

    }

    public class IAdaptiveMediaSourceDownloadBitrateChangedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadBitrateChangedEventArgs }

        internal func get_OldValueImpl() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadBitrateChangedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_OldValue(pThis, &value))
            }
            return value
        }

        internal func get_NewValueImpl() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadBitrateChangedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_NewValue(pThis, &value))
            }
            return value
        }

    }

    public class IAdaptiveMediaSourceDownloadBitrateChangedEventArgs2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadBitrateChangedEventArgs2 }

        internal func get_ReasonImpl() throws -> UWP.AdaptiveMediaSourceDownloadBitrateChangedReason {
            var value: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CAdaptiveMediaSourceDownloadBitrateChangedReason = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadBitrateChangedEventArgs2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Reason(pThis, &value))
            }
            return value
        }

    }

    public class IAdaptiveMediaSourceDownloadCompletedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadCompletedEventArgs }

        internal func get_ResourceTypeImpl() throws -> UWP.AdaptiveMediaSourceResourceType {
            var value: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CAdaptiveMediaSourceResourceType = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadCompletedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceType(pThis, &value))
            }
            return value
        }

        internal func get_ResourceUriImpl() throws -> WindowsFoundation.Uri? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadCompletedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceUri(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ResourceByteRangeOffsetImpl() throws -> UInt64? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadCompletedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceByteRangeOffset(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT64Wrapper.unwrapFrom(abi: value)
        }

        internal func get_ResourceByteRangeLengthImpl() throws -> UInt64? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadCompletedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceByteRangeLength(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT64Wrapper.unwrapFrom(abi: value)
        }

        internal func get_HttpResponseMessageImpl() throws -> UWP.HttpResponseMessage? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadCompletedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_HttpResponseMessage(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IAdaptiveMediaSourceDownloadCompletedEventArgs2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadCompletedEventArgs2 }

        internal func get_RequestIdImpl() throws -> Int32 {
            var value: INT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadCompletedEventArgs2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestId(pThis, &value))
            }
            return value
        }

        internal func get_StatisticsImpl() throws -> UWP.AdaptiveMediaSourceDownloadStatistics? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadCompletedEventArgs2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Statistics(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_PositionImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadCompletedEventArgs2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Position(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

    }

    public class IAdaptiveMediaSourceDownloadCompletedEventArgs3: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadCompletedEventArgs3 }

        internal func get_ResourceDurationImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadCompletedEventArgs3.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceDuration(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

        internal func get_ResourceContentTypeImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadCompletedEventArgs3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceContentType(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IAdaptiveMediaSourceDownloadFailedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadFailedEventArgs }

        internal func get_ResourceTypeImpl() throws -> UWP.AdaptiveMediaSourceResourceType {
            var value: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CAdaptiveMediaSourceResourceType = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadFailedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceType(pThis, &value))
            }
            return value
        }

        internal func get_ResourceUriImpl() throws -> WindowsFoundation.Uri? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadFailedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceUri(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ResourceByteRangeOffsetImpl() throws -> UInt64? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadFailedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceByteRangeOffset(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT64Wrapper.unwrapFrom(abi: value)
        }

        internal func get_ResourceByteRangeLengthImpl() throws -> UInt64? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadFailedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceByteRangeLength(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT64Wrapper.unwrapFrom(abi: value)
        }

        internal func get_HttpResponseMessageImpl() throws -> UWP.HttpResponseMessage? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadFailedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_HttpResponseMessage(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IAdaptiveMediaSourceDownloadFailedEventArgs2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadFailedEventArgs2 }

        internal func get_RequestIdImpl() throws -> Int32 {
            var value: INT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadFailedEventArgs2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestId(pThis, &value))
            }
            return value
        }

        internal func get_ExtendedErrorImpl() throws -> HRESULT {
            var value: HRESULT = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadFailedEventArgs2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExtendedError(pThis, &value))
            }
            return value
        }

        internal func get_StatisticsImpl() throws -> UWP.AdaptiveMediaSourceDownloadStatistics? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadFailedEventArgs2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Statistics(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_PositionImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadFailedEventArgs2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Position(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

    }

    public class IAdaptiveMediaSourceDownloadFailedEventArgs3: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadFailedEventArgs3 }

        internal func get_ResourceDurationImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadFailedEventArgs3.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceDuration(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

        internal func get_ResourceContentTypeImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadFailedEventArgs3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceContentType(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IAdaptiveMediaSourceDownloadRequestedDeferral: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadRequestedDeferral }

        internal func CompleteImpl() throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadRequestedDeferral.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Complete(pThis))
            }
        }

    }

    public class IAdaptiveMediaSourceDownloadRequestedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadRequestedEventArgs }

        internal func get_ResourceTypeImpl() throws -> UWP.AdaptiveMediaSourceResourceType {
            var value: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CAdaptiveMediaSourceResourceType = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadRequestedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceType(pThis, &value))
            }
            return value
        }

        internal func get_ResourceUriImpl() throws -> WindowsFoundation.Uri? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadRequestedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceUri(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ResourceByteRangeOffsetImpl() throws -> UInt64? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadRequestedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceByteRangeOffset(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT64Wrapper.unwrapFrom(abi: value)
        }

        internal func get_ResourceByteRangeLengthImpl() throws -> UInt64? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadRequestedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceByteRangeLength(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT64Wrapper.unwrapFrom(abi: value)
        }

        internal func get_ResultImpl() throws -> UWP.AdaptiveMediaSourceDownloadResult? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadRequestedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Result(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func GetDeferralImpl() throws -> UWP.AdaptiveMediaSourceDownloadRequestedDeferral? {
            let (deferral) = try ComPtrs.initialize { deferralAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadRequestedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetDeferral(pThis, &deferralAbi))
                }
            }
            return .from(abi: deferral)
        }

    }

    public class IAdaptiveMediaSourceDownloadRequestedEventArgs2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadRequestedEventArgs2 }

        internal func get_RequestIdImpl() throws -> Int32 {
            var value: INT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadRequestedEventArgs2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequestId(pThis, &value))
            }
            return value
        }

        internal func get_PositionImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadRequestedEventArgs2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Position(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

    }

    public class IAdaptiveMediaSourceDownloadRequestedEventArgs3: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadRequestedEventArgs3 }

        internal func get_ResourceDurationImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadRequestedEventArgs3.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceDuration(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

        internal func get_ResourceContentTypeImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadRequestedEventArgs3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceContentType(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IAdaptiveMediaSourceDownloadResult: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadResult }

        internal func get_ResourceUriImpl() throws -> WindowsFoundation.Uri? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadResult.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceUri(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_ResourceUriImpl(_ value: WindowsFoundation.Uri?) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadResult.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ResourceUri(pThis, RawPointer(value)))
            }
        }

        internal func get_InputStreamImpl() throws -> UWP.AnyIInputStream? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadResult.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_InputStream(pThis, &valueAbi))
                }
            }
            return __ABI_Windows_Storage_Streams.IInputStreamWrapper.unwrapFrom(abi: value)
        }

        internal func put_InputStreamImpl(_ value: UWP.AnyIInputStream?) throws {
            let valueWrapper = __ABI_Windows_Storage_Streams.IInputStreamWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadResult.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_InputStream(pThis, _value))
            }
        }

        internal func get_BufferImpl() throws -> UWP.AnyIBuffer? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadResult.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Buffer(pThis, &valueAbi))
                }
            }
            return __ABI_Windows_Storage_Streams.IBufferWrapper.unwrapFrom(abi: value)
        }

        internal func put_BufferImpl(_ value: UWP.AnyIBuffer?) throws {
            let valueWrapper = __ABI_Windows_Storage_Streams.IBufferWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadResult.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Buffer(pThis, _value))
            }
        }

        internal func get_ContentTypeImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadResult.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentType(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_ContentTypeImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadResult.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ContentType(pThis, _value.get()))
            }
        }

        internal func get_ExtendedStatusImpl() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadResult.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExtendedStatus(pThis, &value))
            }
            return value
        }

        internal func put_ExtendedStatusImpl(_ value: UInt32) throws {
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadResult.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ExtendedStatus(pThis, value))
            }
        }

    }

    public class IAdaptiveMediaSourceDownloadResult2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadResult2 }

        internal func get_ResourceByteRangeOffsetImpl() throws -> UInt64? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadResult2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceByteRangeOffset(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT64Wrapper.unwrapFrom(abi: value)
        }

        internal func put_ResourceByteRangeOffsetImpl(_ value: UInt64?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1_UINT64Wrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadResult2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ResourceByteRangeOffset(pThis, _value))
            }
        }

        internal func get_ResourceByteRangeLengthImpl() throws -> UInt64? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadResult2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceByteRangeLength(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT64Wrapper.unwrapFrom(abi: value)
        }

        internal func put_ResourceByteRangeLengthImpl(_ value: UInt64?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1_UINT64Wrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadResult2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ResourceByteRangeLength(pThis, _value))
            }
        }

    }

    public class IAdaptiveMediaSourceDownloadStatistics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadStatistics }

        internal func get_ContentBytesReceivedCountImpl() throws -> UInt64 {
            var value: UINT64 = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadStatistics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentBytesReceivedCount(pThis, &value))
            }
            return value
        }

        internal func get_TimeToHeadersReceivedImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadStatistics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_TimeToHeadersReceived(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

        internal func get_TimeToFirstByteReceivedImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadStatistics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_TimeToFirstByteReceived(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

        internal func get_TimeToLastByteReceivedImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceDownloadStatistics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_TimeToLastByteReceived(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

    }

    public class IAdaptiveMediaSourcePlaybackBitrateChangedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourcePlaybackBitrateChangedEventArgs }

        internal func get_OldValueImpl() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourcePlaybackBitrateChangedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_OldValue(pThis, &value))
            }
            return value
        }

        internal func get_NewValueImpl() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourcePlaybackBitrateChangedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_NewValue(pThis, &value))
            }
            return value
        }

        internal func get_AudioOnlyImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourcePlaybackBitrateChangedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AudioOnly(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IAdaptiveMediaSourceStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceStatics }

        internal func IsContentTypeSupportedImpl(_ contentType: String) throws -> Bool {
            var result: boolean = 0
            let _contentType = try! HString(contentType)
            _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.IsContentTypeSupported(pThis, _contentType.get(), &result))
            }
            return .init(from: result)
        }

        internal func CreateFromUriAsyncImpl(_ uri: WindowsFoundation.Uri?) throws -> WindowsFoundation.AnyIAsyncOperation<UWP.AdaptiveMediaSourceCreationResult?>? {
            let (result) = try ComPtrs.initialize { resultAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromUriAsync(pThis, RawPointer(uri), &resultAbi))
                }
            }
            return UWP.__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CStreaming__CAdaptive__CAdaptiveMediaSourceCreationResultWrapper.unwrapFrom(abi: result)
        }

        internal func CreateFromUriWithDownloaderAsyncImpl(_ uri: WindowsFoundation.Uri?, _ httpClient: UWP.HttpClient?) throws -> WindowsFoundation.AnyIAsyncOperation<UWP.AdaptiveMediaSourceCreationResult?>? {
            let (result) = try ComPtrs.initialize { resultAbi in
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromUriWithDownloaderAsync(pThis, RawPointer(uri), RawPointer(httpClient), &resultAbi))
                }
            }
            return UWP.__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CStreaming__CAdaptive__CAdaptiveMediaSourceCreationResultWrapper.unwrapFrom(abi: result)
        }

        internal func CreateFromStreamAsyncImpl(_ stream: UWP.AnyIInputStream?, _ uri: WindowsFoundation.Uri?, _ contentType: String) throws -> WindowsFoundation.AnyIAsyncOperation<UWP.AdaptiveMediaSourceCreationResult?>? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let streamWrapper = __ABI_Windows_Storage_Streams.IInputStreamWrapper(stream)
                let _stream = try! streamWrapper?.toABI { $0 }
                let _contentType = try! HString(contentType)
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromStreamAsync(pThis, _stream, RawPointer(uri), _contentType.get(), &resultAbi))
                }
            }
            return UWP.__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CStreaming__CAdaptive__CAdaptiveMediaSourceCreationResultWrapper.unwrapFrom(abi: result)
        }

        internal func CreateFromStreamWithDownloaderAsyncImpl(_ stream: UWP.AnyIInputStream?, _ uri: WindowsFoundation.Uri?, _ contentType: String, _ httpClient: UWP.HttpClient?) throws -> WindowsFoundation.AnyIAsyncOperation<UWP.AdaptiveMediaSourceCreationResult?>? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let streamWrapper = __ABI_Windows_Storage_Streams.IInputStreamWrapper(stream)
                let _stream = try! streamWrapper?.toABI { $0 }
                let _contentType = try! HString(contentType)
                _ = try perform(as: __x_ABI_CWindows_CMedia_CStreaming_CAdaptive_CIAdaptiveMediaSourceStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CreateFromStreamWithDownloaderAsync(pThis, _stream, RawPointer(uri), _contentType.get(), RawPointer(httpClient), &resultAbi))
                }
            }
            return UWP.__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CMedia__CStreaming__CAdaptive__CAdaptiveMediaSourceCreationResultWrapper.unwrapFrom(abi: result)
        }

    }

}
