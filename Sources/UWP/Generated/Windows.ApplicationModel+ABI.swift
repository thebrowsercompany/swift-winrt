// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo: WindowsFoundation.IID {
    .init(Data1: 0x1AEB1103, Data2: 0xE4D4, Data3: 0x41AA, Data4: ( 0xA4,0xF6,0xC4,0xA2,0x76,0xE7,0x9E,0xAC ))// 1AEB1103-E4D4-41AA-A4F6-C4A276E79EAC
}

private var IID___x_ABI_CWindows_CApplicationModel_CIAppInfo: WindowsFoundation.IID {
    .init(Data1: 0xCF7F59B3, Data2: 0x6A09, Data3: 0x4DE8, Data4: ( 0xA6,0xC0,0x57,0x92,0xD5,0x68,0x80,0xD1 ))// CF7F59B3-6A09-4DE8-A6C0-5792D56880D1
}

private var IID___x_ABI_CWindows_CApplicationModel_CIAppInstallerInfo: WindowsFoundation.IID {
    .init(Data1: 0x29AB2AC0, Data2: 0xD4F6, Data3: 0x42A3, Data4: ( 0xAD,0xCD,0xD6,0x58,0x3C,0x65,0x95,0x08 ))// 29AB2AC0-D4F6-42A3-ADCD-D6583C659508
}

private var IID___x_ABI_CWindows_CApplicationModel_CIPackage: WindowsFoundation.IID {
    .init(Data1: 0x163C792F, Data2: 0xBD75, Data3: 0x413C, Data4: ( 0xBF,0x23,0xB1,0xFE,0x7B,0x95,0xD8,0x25 ))// 163C792F-BD75-413C-BF23-B1FE7B95D825
}

private var IID___x_ABI_CWindows_CApplicationModel_CIPackage2: WindowsFoundation.IID {
    .init(Data1: 0xA6612FB6, Data2: 0x7688, Data3: 0x4ACE, Data4: ( 0x95,0xFB,0x35,0x95,0x38,0xE7,0xAA,0x01 ))// A6612FB6-7688-4ACE-95FB-359538E7AA01
}

private var IID___x_ABI_CWindows_CApplicationModel_CIPackage3: WindowsFoundation.IID {
    .init(Data1: 0x5F738B61, Data2: 0xF86A, Data3: 0x4917, Data4: ( 0x93,0xD1,0xF1,0xEE,0x9D,0x3B,0x35,0xD9 ))// 5F738B61-F86A-4917-93D1-F1EE9D3B35D9
}

private var IID___x_ABI_CWindows_CApplicationModel_CIPackage4: WindowsFoundation.IID {
    .init(Data1: 0x65AED1AE, Data2: 0xB95B, Data3: 0x450C, Data4: ( 0x88,0x2B,0x62,0x55,0x18,0x7F,0x39,0x7E ))// 65AED1AE-B95B-450C-882B-6255187F397E
}

private var IID___x_ABI_CWindows_CApplicationModel_CIPackage5: WindowsFoundation.IID {
    .init(Data1: 0x0E842DD4, Data2: 0xD9AC, Data3: 0x45ED, Data4: ( 0x9A,0x1E,0x74,0xCE,0x05,0x6B,0x26,0x35 ))// 0E842DD4-D9AC-45ED-9A1E-74CE056B2635
}

private var IID___x_ABI_CWindows_CApplicationModel_CIPackage6: WindowsFoundation.IID {
    .init(Data1: 0x8B1AD942, Data2: 0x12D7, Data3: 0x4754, Data4: ( 0xAE,0x4E,0x63,0x8C,0xBC,0x0E,0x3A,0x2E ))// 8B1AD942-12D7-4754-AE4E-638CBC0E3A2E
}

private var IID___x_ABI_CWindows_CApplicationModel_CIPackage7: WindowsFoundation.IID {
    .init(Data1: 0x86FF8D31, Data2: 0xA2E4, Data3: 0x45E0, Data4: ( 0x97,0x32,0x28,0x3A,0x6D,0x88,0xFD,0xE1 ))// 86FF8D31-A2E4-45E0-9732-283A6D88FDE1
}

private var IID___x_ABI_CWindows_CApplicationModel_CIPackageContentGroup: WindowsFoundation.IID {
    .init(Data1: 0x8F62695D, Data2: 0x120A, Data3: 0x4798, Data4: ( 0xB5,0xE1,0x58,0x00,0xDD,0xA8,0xF2,0xE1 ))// 8F62695D-120A-4798-B5E1-5800DDA8F2E1
}

private var IID___x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStatics: WindowsFoundation.IID {
    .init(Data1: 0x70EE7619, Data2: 0x5F12, Data3: 0x4B92, Data4: ( 0xB9,0xEA,0x6C,0xCA,0xDA,0x13,0xBC,0x75 ))// 70EE7619-5F12-4B92-B9EA-6CCADA13BC75
}

private var IID___x_ABI_CWindows_CApplicationModel_CIPackageId: WindowsFoundation.IID {
    .init(Data1: 0x1ADB665E, Data2: 0x37C7, Data3: 0x4790, Data4: ( 0x99,0x80,0xDD,0x7A,0xE7,0x4E,0x8B,0xB2 ))// 1ADB665E-37C7-4790-9980-DD7AE74E8BB2
}

private var IID___x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata: WindowsFoundation.IID {
    .init(Data1: 0x40577A7C, Data2: 0x0C9E, Data3: 0x443D, Data4: ( 0x90,0x74,0x85,0x5F,0x5C,0xE0,0xA0,0x8D ))// 40577A7C-0C9E-443D-9074-855F5CE0A08D
}

private var IID___x_ABI_CWindows_CApplicationModel_CIPackageStatics: WindowsFoundation.IID {
    .init(Data1: 0x4E534BDF, Data2: 0x2960, Data3: 0x4878, Data4: ( 0x97,0xA4,0x96,0x24,0xDE,0xB7,0x2F,0x2D ))// 4E534BDF-2960-4878-97A4-9624DEB72F2D
}

private var IID___x_ABI_CWindows_CApplicationModel_CIPackageStatus: WindowsFoundation.IID {
    .init(Data1: 0x5FE74F71, Data2: 0xA365, Data3: 0x4C09, Data4: ( 0xA0,0x2D,0x04,0x6D,0x52,0x5E,0xA1,0xDA ))// 5FE74F71-A365-4C09-A02D-046D525EA1DA
}

private var IID___x_ABI_CWindows_CApplicationModel_CIPackageStatus2: WindowsFoundation.IID {
    .init(Data1: 0xF428FA93, Data2: 0x7C56, Data3: 0x4862, Data4: ( 0xAC,0xFA,0xAB,0xAE,0xDC,0xC0,0x69,0x4D ))// F428FA93-7C56-4862-ACFA-ABAEDCC0694D
}

private var IID___x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult: WindowsFoundation.IID {
    .init(Data1: 0x114E5009, Data2: 0x199A, Data3: 0x48A1, Data4: ( 0xA0,0x79,0x31,0x3C,0x45,0x63,0x4A,0x71 ))// 114E5009-199A-48A1-A079-313C45634A71
}

private var IID___x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata: WindowsFoundation.IID {
    .init(Data1: 0x95949780, Data2: 0x1DE9, Data3: 0x40F2, Data4: ( 0xB4,0x52,0x0D,0xE9,0xF1,0x91,0x00,0x12 ))// 95949780-1DE9-40F2-B452-0DE9F1910012
}

public enum __ABI_Windows_ApplicationModel {
    public class IAppDisplayInfo: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo }

        internal func get_DisplayNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DisplayName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_DescriptionImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Description(pThis, &value))
            }
            return .init(from: value)
        }

        internal func GetLogoImpl(_ size: WindowsFoundation.Size) throws -> UWP.RandomAccessStreamReference? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIAppDisplayInfo.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetLogo(pThis, .from(swift: size), &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IAppInfo: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CIAppInfo }

        internal func get_IdImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIAppInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Id(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_AppUserModelIdImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIAppInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AppUserModelId(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_DisplayInfoImpl() throws -> UWP.AppDisplayInfo? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIAppInfo.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_DisplayInfo(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_PackageFamilyNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIAppInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PackageFamilyName(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IAppInstallerInfo: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CIAppInstallerInfo }

        internal func get_UriImpl() throws -> WindowsFoundation.Uri? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIAppInstallerInfo.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Uri(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IPackage: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CIPackage }

        internal func get_IdImpl() throws -> UWP.PackageId? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Id(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_InstalledLocationImpl() throws -> UWP.StorageFolder? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_InstalledLocation(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_IsFrameworkImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsFramework(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_DependenciesImpl() throws -> WindowsFoundation.AnyIVectorView<UWP.Package?>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Dependencies(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CPackageWrapper.unwrapFrom(abi: value)
        }

    }

    public class IPackage2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CIPackage2 }

        internal func get_DisplayNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DisplayName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_PublisherDisplayNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PublisherDisplayName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_DescriptionImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Description(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_LogoImpl() throws -> WindowsFoundation.Uri? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Logo(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_IsResourcePackageImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsResourcePackage(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_IsBundleImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsBundle(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_IsDevelopmentModeImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsDevelopmentMode(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IPackage3: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CIPackage3 }

        internal func get_StatusImpl() throws -> UWP.PackageStatus? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage3.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Status(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_InstalledDateImpl() throws -> WindowsFoundation.DateTime {
            var value: __x_ABI_CWindows_CFoundation_CDateTime = .init()
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_InstalledDate(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func GetAppListEntriesAsyncImpl() throws -> WindowsFoundation.AnyIAsyncOperation<WindowsFoundation.AnyIVectorView<UWP.AppListEntry?>?>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage3.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetAppListEntriesAsync(pThis, &operationAbi))
                }
            }
            return UWP.__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVectorView_1___x_ABI_CWindows__CApplicationModel__CCore__CAppListEntryWrapper.unwrapFrom(abi: operation)
        }

    }

    public class IPackage4: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CIPackage4 }

        internal func get_SignatureKindImpl() throws -> UWP.PackageSignatureKind {
            var value: __x_ABI_CWindows_CApplicationModel_CPackageSignatureKind = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage4.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SignatureKind(pThis, &value))
            }
            return value
        }

        internal func get_IsOptionalImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage4.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsOptional(pThis, &value))
            }
            return .init(from: value)
        }

        internal func VerifyContentIntegrityAsyncImpl() throws -> WindowsFoundation.AnyIAsyncOperation<Bool>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage4.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.VerifyContentIntegrityAsync(pThis, &operationAbi))
                }
            }
            return UWP.__x_ABI_C__FIAsyncOperation_1_booleanWrapper.unwrapFrom(abi: operation)
        }

    }

    public class IPackage5: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CIPackage5 }

        internal func GetContentGroupsAsyncImpl() throws -> WindowsFoundation.AnyIAsyncOperation<WindowsFoundation.AnyIVector<UWP.PackageContentGroup?>?>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage5.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetContentGroupsAsync(pThis, &operationAbi))
                }
            }
            return UWP.__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupWrapper.unwrapFrom(abi: operation)
        }

        internal func GetContentGroupAsyncImpl(_ name: String) throws -> WindowsFoundation.AnyIAsyncOperation<UWP.PackageContentGroup?>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                let _name = try! HString(name)
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage5.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetContentGroupAsync(pThis, _name.get(), &operationAbi))
                }
            }
            return UWP.__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupWrapper.unwrapFrom(abi: operation)
        }

        internal func StageContentGroupsAsyncImpl(_ names: WindowsFoundation.AnyIIterable<String>?) throws -> WindowsFoundation.AnyIAsyncOperation<WindowsFoundation.AnyIVector<UWP.PackageContentGroup?>?>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                let namesWrapper = UWP.__x_ABI_C__FIIterable_1_HSTRINGWrapper(names)
                let _names = try! namesWrapper?.toABI { $0 }
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage5.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.StageContentGroupsAsync(pThis, _names, &operationAbi))
                }
            }
            return UWP.__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupWrapper.unwrapFrom(abi: operation)
        }

        internal func StageContentGroupsWithPriorityAsyncImpl(_ names: WindowsFoundation.AnyIIterable<String>?, _ moveToHeadOfQueue: Bool) throws -> WindowsFoundation.AnyIAsyncOperation<WindowsFoundation.AnyIVector<UWP.PackageContentGroup?>?>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                let namesWrapper = UWP.__x_ABI_C__FIIterable_1_HSTRINGWrapper(names)
                let _names = try! namesWrapper?.toABI { $0 }
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage5.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.StageContentGroupsWithPriorityAsync(pThis, _names, .init(from: moveToHeadOfQueue), &operationAbi))
                }
            }
            return UWP.__x_ABI_C__FIAsyncOperation_1___x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CPackageContentGroupWrapper.unwrapFrom(abi: operation)
        }

        internal func SetInUseAsyncImpl(_ inUse: Bool) throws -> WindowsFoundation.AnyIAsyncOperation<Bool>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage5.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.SetInUseAsync(pThis, .init(from: inUse), &operationAbi))
                }
            }
            return UWP.__x_ABI_C__FIAsyncOperation_1_booleanWrapper.unwrapFrom(abi: operation)
        }

    }

    public class IPackage6: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CIPackage6 }

        internal func GetAppInstallerInfoImpl() throws -> UWP.AppInstallerInfo? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage6.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetAppInstallerInfo(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func CheckUpdateAvailabilityAsyncImpl() throws -> WindowsFoundation.AnyIAsyncOperation<UWP.PackageUpdateAvailabilityResult?>? {
            let (operation) = try ComPtrs.initialize { operationAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage6.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.CheckUpdateAvailabilityAsync(pThis, &operationAbi))
                }
            }
            return UWP.__x_ABI_C__FIAsyncOperation_1___x_ABI_CWindows__CApplicationModel__CPackageUpdateAvailabilityResultWrapper.unwrapFrom(abi: operation)
        }

    }

    public class IPackage7: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CIPackage7 }

        internal func get_MutableLocationImpl() throws -> UWP.StorageFolder? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage7.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_MutableLocation(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_EffectiveLocationImpl() throws -> UWP.StorageFolder? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackage7.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EffectiveLocation(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IPackageContentGroup: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CIPackageContentGroup }

        internal func get_PackageImpl() throws -> UWP.Package? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageContentGroup.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Package(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_NameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageContentGroup.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Name(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_StateImpl() throws -> UWP.PackageContentGroupState {
            var value: __x_ABI_CWindows_CApplicationModel_CPackageContentGroupState = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageContentGroup.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_State(pThis, &value))
            }
            return value
        }

        internal func get_IsRequiredImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageContentGroup.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsRequired(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IPackageContentGroupStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStatics }

        internal func get_RequiredGroupNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageContentGroupStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RequiredGroupName(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IPackageId: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CIPackageId }

        internal func get_NameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageId.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Name(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_VersionImpl() throws -> UWP.PackageVersion {
            var value: __x_ABI_CWindows_CApplicationModel_CPackageVersion = .init()
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageId.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Version(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func get_ArchitectureImpl() throws -> UWP.ProcessorArchitecture {
            var value: __x_ABI_CWindows_CSystem_CProcessorArchitecture = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageId.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Architecture(pThis, &value))
            }
            return value
        }

        internal func get_ResourceIdImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageId.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ResourceId(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_PublisherImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageId.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Publisher(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_PublisherIdImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageId.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PublisherId(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_FullNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageId.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_FullName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_FamilyNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageId.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_FamilyName(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IPackageIdWithMetadata: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata }

        internal func get_ProductIdImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ProductId(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_AuthorImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageIdWithMetadata.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Author(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IPackageStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CIPackageStatics }

        internal func get_CurrentImpl() throws -> UWP.Package? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Current(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IPackageStatus: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CIPackageStatus }

        internal func VerifyIsOKImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageStatus.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.VerifyIsOK(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_NotAvailableImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageStatus.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_NotAvailable(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_PackageOfflineImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageStatus.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PackageOffline(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_DataOfflineImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageStatus.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DataOffline(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_DisabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageStatus.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Disabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_NeedsRemediationImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageStatus.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_NeedsRemediation(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_LicenseIssueImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageStatus.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LicenseIssue(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_ModifiedImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageStatus.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Modified(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_TamperedImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageStatus.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Tampered(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_DependencyIssueImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageStatus.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DependencyIssue(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_ServicingImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageStatus.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Servicing(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_DeploymentInProgressImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageStatus.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DeploymentInProgress(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IPackageStatus2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CIPackageStatus2 }

        internal func get_IsPartiallyStagedImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageStatus2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsPartiallyStaged(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IPackageUpdateAvailabilityResult: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult }

        internal func get_AvailabilityImpl() throws -> UWP.PackageUpdateAvailability {
            var value: __x_ABI_CWindows_CApplicationModel_CPackageUpdateAvailability = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Availability(pThis, &value))
            }
            return value
        }

        internal func get_ExtendedErrorImpl() throws -> HRESULT {
            var value: HRESULT = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageUpdateAvailabilityResult.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExtendedError(pThis, &value))
            }
            return value
        }

    }

    public class IPackageWithMetadata: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata }

        internal func get_InstallDateImpl() throws -> WindowsFoundation.DateTime {
            var value: __x_ABI_CWindows_CFoundation_CDateTime = .init()
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_InstallDate(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func GetThumbnailTokenImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.GetThumbnailToken(pThis, &value))
            }
            return .init(from: value)
        }

        internal func LaunchImpl(_ parameters: String) throws {
            let _parameters = try! HString(parameters)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CIPackageWithMetadata.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Launch(pThis, _parameters.get()))
            }
        }

    }

}
extension __x_ABI_CWindows_CApplicationModel_CPackageVersion {
        public static func from(swift: UWP.PackageVersion) -> __x_ABI_CWindows_CApplicationModel_CPackageVersion {
            .init(Major: swift.major, Minor: swift.minor, Build: swift.build, Revision: swift.revision)
        }
    }
    