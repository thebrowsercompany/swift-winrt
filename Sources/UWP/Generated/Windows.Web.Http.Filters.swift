// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.web.http.filters.ihttpfilter)
public protocol IHttpFilter : WindowsFoundation.IClosable {
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.web.http.filters.ihttpfilter.sendrequestasync)
    func sendRequestAsync(_ request: UWP.HttpRequestMessage!) throws -> WindowsFoundation.AnyIAsyncOperationWithProgress<UWP.HttpResponseMessage?, UWP.HttpProgress>!
}

extension IHttpFilter {
    public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_Windows_Web_Http_Filters.IHttpFilterWrapper.IID:
                let wrapper = __ABI_Windows_Web_Http_Filters.IHttpFilterWrapper(self)
                return wrapper!.queryInterface(iid)
            case __ABI_Windows_Foundation.IClosableWrapper.IID:
                let wrapper = __ABI_Windows_Foundation.IClosableWrapper(self)
                return wrapper!.queryInterface(iid)
            default: return nil
        }
    }
}
public typealias AnyIHttpFilter = any IHttpFilter

