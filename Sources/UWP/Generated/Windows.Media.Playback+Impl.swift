// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

public enum __IMPL_Windows_Media_Playback {
    public enum IMediaPlaybackSourceBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CWindows_CMedia_CPlayback_CIMediaPlaybackSource
        public typealias SwiftABI = __ABI_Windows_Media_Playback.IMediaPlaybackSource
        public typealias SwiftProjection = AnyIMediaPlaybackSource
        public static func from(abi: ComPtr<CABI>?) -> SwiftProjection? {
            guard let abi = abi else { return nil }
            return IMediaPlaybackSourceImpl(abi)
        }

        public static func makeAbi() -> CABI {
            let vtblPtr = withUnsafeMutablePointer(to: &__ABI_Windows_Media_Playback.IMediaPlaybackSourceVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class IMediaPlaybackSourceImpl: IMediaPlaybackSource, WinRTAbiImpl {
        fileprivate typealias Bridge = IMediaPlaybackSourceBridge
        fileprivate let _default: Bridge.SwiftABI
        fileprivate var thisPtr: WindowsFoundation.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.SwiftABI(fromAbi)
        }

    }

}
