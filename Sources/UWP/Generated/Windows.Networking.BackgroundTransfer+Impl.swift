// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

public enum __IMPL_Windows_Networking_BackgroundTransfer {
    public enum IBackgroundTransferOperationBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperation
        public typealias SwiftABI = __ABI_Windows_Networking_BackgroundTransfer.IBackgroundTransferOperation
        public typealias SwiftProjection = AnyIBackgroundTransferOperation
        public static func from(abi: ComPtr<CABI>?) -> SwiftProjection? {
            guard let abi = abi else { return nil }
            return IBackgroundTransferOperationImpl(abi)
        }

        public static func makeAbi() -> CABI {
            let vtblPtr = withUnsafeMutablePointer(to: &__ABI_Windows_Networking_BackgroundTransfer.IBackgroundTransferOperationVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class IBackgroundTransferOperationImpl: IBackgroundTransferOperation, WinRTAbiImpl {
        fileprivate typealias Bridge = IBackgroundTransferOperationBridge
        fileprivate let _default: Bridge.SwiftABI
        fileprivate var thisPtr: WindowsFoundation.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.SwiftABI(fromAbi)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.networking.backgroundtransfer.ibackgroundtransferoperation.getresultstreamat)
        fileprivate func getResultStreamAt(_ position: UInt64) throws -> UWP.AnyIInputStream! {
            try _default.GetResultStreamAtImpl(position)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.networking.backgroundtransfer.ibackgroundtransferoperation.getresponseinformation)
        fileprivate func getResponseInformation() throws -> ResponseInformation! {
            try _default.GetResponseInformationImpl()
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.networking.backgroundtransfer.ibackgroundtransferoperation.costpolicy)
        fileprivate var costPolicy : BackgroundTransferCostPolicy {
            get { try! _default.get_CostPolicyImpl() }
            set { try! _default.put_CostPolicyImpl(newValue) }
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.networking.backgroundtransfer.ibackgroundtransferoperation.group)
        fileprivate var group : String {
            get { try! _default.get_GroupImpl() }
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.networking.backgroundtransfer.ibackgroundtransferoperation.guid)
        fileprivate var guid : Foundation.UUID {
            get { try! _default.get_GuidImpl() }
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.networking.backgroundtransfer.ibackgroundtransferoperation.method)
        fileprivate var method : String {
            get { try! _default.get_MethodImpl() }
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.networking.backgroundtransfer.ibackgroundtransferoperation.requesteduri)
        fileprivate var requestedUri : WindowsFoundation.Uri! {
            get { try! _default.get_RequestedUriImpl() }
        }

    }

    public enum IBackgroundTransferOperationPriorityBridge : AbiInterfaceBridge {
        public typealias CABI = __x_ABI_CWindows_CNetworking_CBackgroundTransfer_CIBackgroundTransferOperationPriority
        public typealias SwiftABI = __ABI_Windows_Networking_BackgroundTransfer.IBackgroundTransferOperationPriority
        public typealias SwiftProjection = AnyIBackgroundTransferOperationPriority
        public static func from(abi: ComPtr<CABI>?) -> SwiftProjection? {
            guard let abi = abi else { return nil }
            return IBackgroundTransferOperationPriorityImpl(abi)
        }

        public static func makeAbi() -> CABI {
            let vtblPtr = withUnsafeMutablePointer(to: &__ABI_Windows_Networking_BackgroundTransfer.IBackgroundTransferOperationPriorityVTable) { $0 }
            return .init(lpVtbl: vtblPtr)
        }
    }

    fileprivate class IBackgroundTransferOperationPriorityImpl: IBackgroundTransferOperationPriority, WinRTAbiImpl {
        fileprivate typealias Bridge = IBackgroundTransferOperationPriorityBridge
        fileprivate let _default: Bridge.SwiftABI
        fileprivate var thisPtr: WindowsFoundation.IInspectable { _default }
        fileprivate init(_ fromAbi: ComPtr<Bridge.CABI>) {
            _default = Bridge.SwiftABI(fromAbi)
        }

        /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.networking.backgroundtransfer.ibackgroundtransferoperationpriority.priority)
        fileprivate var priority : BackgroundTransferPriority {
            get { try! _default.get_PriorityImpl() }
            set { try! _default.put_PriorityImpl(newValue) }
        }

    }

}
