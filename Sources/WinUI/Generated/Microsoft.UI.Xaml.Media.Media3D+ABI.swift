// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMedia3D_CITransform3D: WindowsFoundation.IID {
    .init(Data1: 0xAFEA4941, Data2: 0x2E49, Data3: 0x533C, Data4: ( 0x9F,0x8F,0x2C,0x12,0x6E,0xF9,0x89,0x3A ))// AFEA4941-2E49-533C-9F8F-2C126EF9893A
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMedia3D_CITransform3DFactory: WindowsFoundation.IID {
    .init(Data1: 0x9BCCE0A1, Data2: 0x10AC, Data3: 0x5319, Data4: ( 0xBD,0xF1,0x54,0x8D,0x2E,0x5A,0xE5,0x04 ))// 9BCCE0A1-10AC-5319-BDF1-548D2E5AE504
}

public enum __ABI_Microsoft_UI_Xaml_Media_Media3D {
    public class ITransform3D: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMedia3D_CITransform3D }

    }

    public class ITransform3DFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMedia3D_CITransform3DFactory }

        internal func CreateInstanceImpl(_ baseInterface: UnsealedWinRTClassWrapper<WinUI.Transform3D.Composable>?, _ innerInterface: inout WindowsFoundation.IInspectable?) throws -> ITransform3D {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _baseInterface = baseInterface?.toIInspectableABI { $0 }
                let (_innerInterface) = try ComPtrs.initialize { _innerInterfaceAbi in
                    _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CMedia3D_CITransform3DFactory.self) { pThis in
                        try CHECKED(pThis.pointee.lpVtbl.pointee.CreateInstance(pThis, _baseInterface, &_innerInterfaceAbi, &valueAbi))
                    }
                }
                innerInterface = WindowsFoundation.IInspectable(_innerInterface!)
            }
            return ITransform3D(value!)
        }

    }

}
