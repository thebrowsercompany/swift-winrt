// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.accessibilityview)
public typealias AccessibilityView = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAccessibilityView
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationcontroltype)
public typealias AutomationControlType = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationevents)
public typealias AutomationEvents = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationheadinglevel)
public typealias AutomationHeadingLevel = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationHeadingLevel
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationlandmarktype)
public typealias AutomationLandmarkType = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationLandmarkType
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationlivesetting)
public typealias AutomationLiveSetting = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationLiveSetting
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationnavigationdirection)
public typealias AutomationNavigationDirection = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNavigationDirection
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationnotificationkind)
public typealias AutomationNotificationKind = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNotificationKind
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationnotificationprocessing)
public typealias AutomationNotificationProcessing = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNotificationProcessing
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationorientation)
public typealias AutomationOrientation = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationOrientation
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationstructurechangetype)
public typealias AutomationStructureChangeType = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationStructureChangeType
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.patterninterface)
public typealias PatternInterface = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer)
open class AutomationPeer : WinUI.DependencyObject {
    private typealias SwiftABI = __ABI_Microsoft_UI_Xaml_Automation_Peers.IAutomationPeer
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override open func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer>?) -> AutomationPeer? {
        guard let abi = abi else { return nil }
        return UnsealedWinRTClassWrapper<Composable>.unwrapFrom(base: abi)
    }

    @_spi(WinRTInternal)
    override public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi: fromAbi)
    }

    @_spi(WinRTInternal)
    override public init<Composable: ComposableImpl>(
        composing: Composable.Type,
        _ createCallback: (UnsealedWinRTClassWrapper<Composable>?, inout WindowsFoundation.IInspectable?) -> Composable.Default.SwiftABI)
    {
        super.init(composing: composing, createCallback)
    }
    override open func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_Microsoft_UI_Xaml_Automation_Peers.IAutomationPeerOverridesWrapper.IID:
                let wrapper = __ABI_Microsoft_UI_Xaml_Automation_Peers.IAutomationPeerOverridesWrapper(self)
                return wrapper!.queryInterface(iid)
            default: return super.queryInterface(iid)
        }
    }
    private static var _IAutomationPeerFactory : __ABI_Microsoft_UI_Xaml_Automation_Peers.IAutomationPeerFactory =  try! RoGetActivationFactory(HString("Microsoft.UI.Xaml.Automation.Peers.AutomationPeer"))

    override public init() {
        super.init(composing: Self.Composable.self) { baseInterface, innerInterface in 
            try! Self._IAutomationPeerFactory.CreateInstanceImpl(baseInterface, &innerInterface)
        }
    }

    private static let _IAutomationPeerStatics: __ABI_Microsoft_UI_Xaml_Automation_Peers.IAutomationPeerStatics = try! RoGetActivationFactory(HString("Microsoft.UI.Xaml.Automation.Peers.AutomationPeer"))
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.listenerexists)
    public class func listenerExists(_ eventId: AutomationEvents) -> Bool {
        return try! _IAutomationPeerStatics.ListenerExistsImpl(eventId)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.generaterawelementproviderruntimeid)
    public class func generateRawElementProviderRuntimeId() -> RawElementProviderRuntimeId {
        return try! _IAutomationPeerStatics.GenerateRawElementProviderRuntimeIdImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getpattern)
    public func getPattern(_ patternInterface: PatternInterface) throws -> Any! {
        try _default.GetPatternImpl(patternInterface)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.raiseautomationevent)
    public func raiseAutomationEvent(_ eventId: AutomationEvents) throws {
        try _default.RaiseAutomationEventImpl(eventId)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.raisepropertychangedevent)
    public func raisePropertyChangedEvent(_ automationProperty: WinUI.AutomationProperty!, _ oldValue: Any!, _ newValue: Any!) throws {
        try _default.RaisePropertyChangedEventImpl(automationProperty, oldValue, newValue)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getacceleratorkey)
    public func getAcceleratorKey() throws -> String {
        try _default.GetAcceleratorKeyImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getaccesskey)
    public func getAccessKey() throws -> String {
        try _default.GetAccessKeyImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getautomationcontroltype)
    public func getAutomationControlType() throws -> AutomationControlType {
        try _default.GetAutomationControlTypeImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getautomationid)
    public func getAutomationId() throws -> String {
        try _default.GetAutomationIdImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getboundingrectangle)
    public func getBoundingRectangle() throws -> WindowsFoundation.Rect {
        try _default.GetBoundingRectangleImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getchildren)
    public func getChildren() throws -> WindowsFoundation.AnyIVector<AutomationPeer?>! {
        try _default.GetChildrenImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.navigate)
    public func navigate(_ direction: AutomationNavigationDirection) throws -> Any! {
        try _default.NavigateImpl(direction)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getclassname)
    public func getClassName() throws -> String {
        try _default.GetClassNameImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getclickablepoint)
    public func getClickablePoint() throws -> WindowsFoundation.Point {
        try _default.GetClickablePointImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.gethelptext)
    public func getHelpText() throws -> String {
        try _default.GetHelpTextImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getitemstatus)
    public func getItemStatus() throws -> String {
        try _default.GetItemStatusImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getitemtype)
    public func getItemType() throws -> String {
        try _default.GetItemTypeImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getlabeledby)
    public func getLabeledBy() throws -> AutomationPeer! {
        try _default.GetLabeledByImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getlocalizedcontroltype)
    public func getLocalizedControlType() throws -> String {
        try _default.GetLocalizedControlTypeImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getname)
    public func getName() throws -> String {
        try _default.GetNameImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getorientation)
    public func getOrientation() throws -> AutomationOrientation {
        try _default.GetOrientationImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.haskeyboardfocus)
    public func hasKeyboardFocus() throws -> Bool {
        try _default.HasKeyboardFocusImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.iscontentelement)
    public func isContentElement() throws -> Bool {
        try _default.IsContentElementImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.iscontrolelement)
    public func isControlElement() throws -> Bool {
        try _default.IsControlElementImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.isenabled)
    public func isEnabled() throws -> Bool {
        try _default.IsEnabledImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.iskeyboardfocusable)
    public func isKeyboardFocusable() throws -> Bool {
        try _default.IsKeyboardFocusableImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.isoffscreen)
    public func isOffscreen() throws -> Bool {
        try _default.IsOffscreenImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.ispassword)
    public func isPassword() throws -> Bool {
        try _default.IsPasswordImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.isrequiredforform)
    public func isRequiredForForm() throws -> Bool {
        try _default.IsRequiredForFormImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.setfocus)
    public func setFocus() throws {
        try _default.SetFocusImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getparent)
    public func getParent() throws -> AutomationPeer! {
        try _default.GetParentImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.invalidatepeer)
    public func invalidatePeer() throws {
        try _default.InvalidatePeerImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getpeerfrompoint)
    public func getPeerFromPoint(_ point: WindowsFoundation.Point) throws -> AutomationPeer! {
        try _default.GetPeerFromPointImpl(point)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getelementfrompoint)
    public func getElementFromPoint(_ pointInWindowCoordinates: WindowsFoundation.Point) throws -> Any! {
        try _default.GetElementFromPointImpl(pointInWindowCoordinates)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getfocusedelement)
    public func getFocusedElement() throws -> Any! {
        try _default.GetFocusedElementImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getlivesetting)
    public func getLiveSetting() throws -> AutomationLiveSetting {
        try _default.GetLiveSettingImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.showcontextmenu)
    public func showContextMenu() throws {
        try _default.ShowContextMenuImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getcontrolledpeers)
    public func getControlledPeers() throws -> WindowsFoundation.AnyIVectorView<AutomationPeer?>! {
        try _default.GetControlledPeersImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getannotations)
    public func getAnnotations() throws -> WindowsFoundation.AnyIVector<AutomationPeerAnnotation?>! {
        try _default.GetAnnotationsImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.setparent)
    public func setParent(_ peer: AutomationPeer!) throws {
        try _default.SetParentImpl(peer)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.raisetextedittextchangedevent)
    public func raiseTextEditTextChangedEvent(_ automationTextEditChangeType: WinUI.AutomationTextEditChangeType, _ changedData: WindowsFoundation.AnyIVectorView<String>!) throws {
        try _default.RaiseTextEditTextChangedEventImpl(automationTextEditChangeType, changedData)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getpositioninset)
    public func getPositionInSet() throws -> Int32 {
        try _default.GetPositionInSetImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getsizeofset)
    public func getSizeOfSet() throws -> Int32 {
        try _default.GetSizeOfSetImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getlevel)
    public func getLevel() throws -> Int32 {
        try _default.GetLevelImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.raisestructurechangedevent)
    public func raiseStructureChangedEvent(_ structureChangeType: AutomationStructureChangeType, _ child: AutomationPeer!) throws {
        try _default.RaiseStructureChangedEventImpl(structureChangeType, child)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getlandmarktype)
    public func getLandmarkType() throws -> AutomationLandmarkType {
        try _default.GetLandmarkTypeImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getlocalizedlandmarktype)
    public func getLocalizedLandmarkType() throws -> String {
        try _default.GetLocalizedLandmarkTypeImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.isperipheral)
    public func isPeripheral() throws -> Bool {
        try _default.IsPeripheralImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.isdatavalidforform)
    public func isDataValidForForm() throws -> Bool {
        try _default.IsDataValidForFormImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getfulldescription)
    public func getFullDescription() throws -> String {
        try _default.GetFullDescriptionImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getculture)
    public func getCulture() throws -> Int32 {
        try _default.GetCultureImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.raisenotificationevent)
    public func raiseNotificationEvent(_ notificationKind: AutomationNotificationKind, _ notificationProcessing: AutomationNotificationProcessing, _ displayString: String, _ activityId: String) throws {
        try _default.RaiseNotificationEventImpl(notificationKind, notificationProcessing, displayString, activityId)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getheadinglevel)
    public func getHeadingLevel() throws -> AutomationHeadingLevel {
        try _default.GetHeadingLevelImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.isdialog)
    public func isDialog() throws -> Bool {
        try _default.IsDialogImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.eventssource)
    public var eventsSource : AutomationPeer! {
        get { try! _default.get_EventsSourceImpl() }
        set { try! _default.put_EventsSourceImpl(newValue) }
    }

    private lazy var _IAutomationPeerProtected: __ABI_Microsoft_UI_Xaml_Automation_Peers.IAutomationPeerProtected! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.peerfromprovider)
    public func peerFromProvider(_ provider: WinUI.IRawElementProviderSimple!) throws -> AutomationPeer! {
        try _IAutomationPeerProtected.PeerFromProviderImpl(provider)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.providerfrompeer)
    public func providerFromPeer(_ peer: AutomationPeer!) throws -> WinUI.IRawElementProviderSimple! {
        try _IAutomationPeerProtected.ProviderFromPeerImpl(peer)
    }

    private lazy var _IAutomationPeerOverrides: __ABI_Microsoft_UI_Xaml_Automation_Peers.IAutomationPeerOverrides! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getpatterncore)
    open func getPatternCore(_ patternInterface: PatternInterface) throws -> Any! {
        try _IAutomationPeerOverrides.GetPatternCoreImpl(patternInterface)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getacceleratorkeycore)
    open func getAcceleratorKeyCore() throws -> String {
        try _IAutomationPeerOverrides.GetAcceleratorKeyCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getaccesskeycore)
    open func getAccessKeyCore() throws -> String {
        try _IAutomationPeerOverrides.GetAccessKeyCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getautomationcontroltypecore)
    open func getAutomationControlTypeCore() throws -> AutomationControlType {
        try _IAutomationPeerOverrides.GetAutomationControlTypeCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getautomationidcore)
    open func getAutomationIdCore() throws -> String {
        try _IAutomationPeerOverrides.GetAutomationIdCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getboundingrectanglecore)
    open func getBoundingRectangleCore() throws -> WindowsFoundation.Rect {
        try _IAutomationPeerOverrides.GetBoundingRectangleCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getchildrencore)
    open func getChildrenCore() throws -> WindowsFoundation.AnyIVector<AutomationPeer?>! {
        try _IAutomationPeerOverrides.GetChildrenCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.navigatecore)
    open func navigateCore(_ direction: AutomationNavigationDirection) throws -> Any! {
        try _IAutomationPeerOverrides.NavigateCoreImpl(direction)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getclassnamecore)
    open func getClassNameCore() throws -> String {
        try _IAutomationPeerOverrides.GetClassNameCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getclickablepointcore)
    open func getClickablePointCore() throws -> WindowsFoundation.Point {
        try _IAutomationPeerOverrides.GetClickablePointCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.gethelptextcore)
    open func getHelpTextCore() throws -> String {
        try _IAutomationPeerOverrides.GetHelpTextCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getitemstatuscore)
    open func getItemStatusCore() throws -> String {
        try _IAutomationPeerOverrides.GetItemStatusCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getitemtypecore)
    open func getItemTypeCore() throws -> String {
        try _IAutomationPeerOverrides.GetItemTypeCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getlabeledbycore)
    open func getLabeledByCore() throws -> AutomationPeer! {
        try _IAutomationPeerOverrides.GetLabeledByCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getlocalizedcontroltypecore)
    open func getLocalizedControlTypeCore() throws -> String {
        try _IAutomationPeerOverrides.GetLocalizedControlTypeCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getnamecore)
    open func getNameCore() throws -> String {
        try _IAutomationPeerOverrides.GetNameCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getorientationcore)
    open func getOrientationCore() throws -> AutomationOrientation {
        try _IAutomationPeerOverrides.GetOrientationCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.haskeyboardfocuscore)
    open func hasKeyboardFocusCore() throws -> Bool {
        try _IAutomationPeerOverrides.HasKeyboardFocusCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.iscontentelementcore)
    open func isContentElementCore() throws -> Bool {
        try _IAutomationPeerOverrides.IsContentElementCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.iscontrolelementcore)
    open func isControlElementCore() throws -> Bool {
        try _IAutomationPeerOverrides.IsControlElementCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.isenabledcore)
    open func isEnabledCore() throws -> Bool {
        try _IAutomationPeerOverrides.IsEnabledCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.iskeyboardfocusablecore)
    open func isKeyboardFocusableCore() throws -> Bool {
        try _IAutomationPeerOverrides.IsKeyboardFocusableCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.isoffscreencore)
    open func isOffscreenCore() throws -> Bool {
        try _IAutomationPeerOverrides.IsOffscreenCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.ispasswordcore)
    open func isPasswordCore() throws -> Bool {
        try _IAutomationPeerOverrides.IsPasswordCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.isrequiredforformcore)
    open func isRequiredForFormCore() throws -> Bool {
        try _IAutomationPeerOverrides.IsRequiredForFormCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.setfocuscore)
    open func setFocusCore() throws {
        try _IAutomationPeerOverrides.SetFocusCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getpeerfrompointcore)
    open func getPeerFromPointCore(_ point: WindowsFoundation.Point) throws -> AutomationPeer! {
        try _IAutomationPeerOverrides.GetPeerFromPointCoreImpl(point)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getelementfrompointcore)
    open func getElementFromPointCore(_ pointInWindowCoordinates: WindowsFoundation.Point) throws -> Any! {
        try _IAutomationPeerOverrides.GetElementFromPointCoreImpl(pointInWindowCoordinates)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getfocusedelementcore)
    open func getFocusedElementCore() throws -> Any! {
        try _IAutomationPeerOverrides.GetFocusedElementCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getlivesettingcore)
    open func getLiveSettingCore() throws -> AutomationLiveSetting {
        try _IAutomationPeerOverrides.GetLiveSettingCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.showcontextmenucore)
    open func showContextMenuCore() throws {
        try _IAutomationPeerOverrides.ShowContextMenuCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getcontrolledpeerscore)
    open func getControlledPeersCore() throws -> WindowsFoundation.AnyIVectorView<AutomationPeer?>! {
        try _IAutomationPeerOverrides.GetControlledPeersCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getannotationscore)
    open func getAnnotationsCore() throws -> WindowsFoundation.AnyIVector<AutomationPeerAnnotation?>! {
        try _IAutomationPeerOverrides.GetAnnotationsCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getpositioninsetcore)
    open func getPositionInSetCore() throws -> Int32 {
        try _IAutomationPeerOverrides.GetPositionInSetCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getsizeofsetcore)
    open func getSizeOfSetCore() throws -> Int32 {
        try _IAutomationPeerOverrides.GetSizeOfSetCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getlevelcore)
    open func getLevelCore() throws -> Int32 {
        try _IAutomationPeerOverrides.GetLevelCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getlandmarktypecore)
    open func getLandmarkTypeCore() throws -> AutomationLandmarkType {
        try _IAutomationPeerOverrides.GetLandmarkTypeCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getlocalizedlandmarktypecore)
    open func getLocalizedLandmarkTypeCore() throws -> String {
        try _IAutomationPeerOverrides.GetLocalizedLandmarkTypeCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.isperipheralcore)
    open func isPeripheralCore() throws -> Bool {
        try _IAutomationPeerOverrides.IsPeripheralCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.isdatavalidforformcore)
    open func isDataValidForFormCore() throws -> Bool {
        try _IAutomationPeerOverrides.IsDataValidForFormCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getfulldescriptioncore)
    open func getFullDescriptionCore() throws -> String {
        try _IAutomationPeerOverrides.GetFullDescriptionCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getdescribedbycore)
    open func getDescribedByCore() throws -> WindowsFoundation.AnyIIterable<AutomationPeer?>! {
        try _IAutomationPeerOverrides.GetDescribedByCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getflowstocore)
    open func getFlowsToCore() throws -> WindowsFoundation.AnyIIterable<AutomationPeer?>! {
        try _IAutomationPeerOverrides.GetFlowsToCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getflowsfromcore)
    open func getFlowsFromCore() throws -> WindowsFoundation.AnyIIterable<AutomationPeer?>! {
        try _IAutomationPeerOverrides.GetFlowsFromCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getculturecore)
    open func getCultureCore() throws -> Int32 {
        try _IAutomationPeerOverrides.GetCultureCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.getheadinglevelcore)
    open func getHeadingLevelCore() throws -> AutomationHeadingLevel {
        try _IAutomationPeerOverrides.GetHeadingLevelCoreImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeer.isdialogcore)
    open func isDialogCore() throws -> Bool {
        try _IAutomationPeerOverrides.IsDialogCoreImpl()
    }

    internal enum IAutomationPeerOverrides : ComposableImpl {
        internal typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides
        internal typealias SwiftABI = __ABI_Microsoft_UI_Xaml_Automation_Peers.IAutomationPeerOverrides
        internal typealias Class = AutomationPeer
        internal typealias SwiftProjection = WinRTClassWeakReference<Class>
        internal enum Default : AbiInterface {
            internal typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer
            internal typealias SwiftABI = __ABI_Microsoft_UI_Xaml_Automation_Peers.IAutomationPeer
        }
    }
    internal typealias Composable = IAutomationPeerOverrides
    deinit {
        _default = nil
        _IAutomationPeerProtected = nil
        _IAutomationPeerOverrides = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeerannotation)
public final class AutomationPeerAnnotation : WinUI.DependencyObject {
    private typealias SwiftABI = __ABI_Microsoft_UI_Xaml_Automation_Peers.IAutomationPeerAnnotation
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation>?) -> AutomationPeerAnnotation? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: WindowsFoundation.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    override public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi: fromAbi)
    }

    override public init() {
        super.init(fromAbi: try! RoActivateInstance(HString("Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation")))
    }

    private static let _IAutomationPeerAnnotationFactory: __ABI_Microsoft_UI_Xaml_Automation_Peers.IAutomationPeerAnnotationFactory = try! RoGetActivationFactory(HString("Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation"))
    public init(_ type: WinUI.AnnotationType) {
        super.init(fromAbi: try! Self._IAutomationPeerAnnotationFactory.CreateInstanceImpl(type))
    }

    public init(_ type: WinUI.AnnotationType, _ peer: AutomationPeer!) {
        super.init(fromAbi: try! Self._IAutomationPeerAnnotationFactory.CreateWithPeerParameterImpl(type, peer))
    }

    private static let _IAutomationPeerAnnotationStatics: __ABI_Microsoft_UI_Xaml_Automation_Peers.IAutomationPeerAnnotationStatics = try! RoGetActivationFactory(HString("Microsoft.UI.Xaml.Automation.Peers.AutomationPeerAnnotation"))
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeerannotation.peerproperty)
    public static var peerProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPeerAnnotationStatics.get_PeerPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeerannotation.typeproperty)
    public static var typeProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPeerAnnotationStatics.get_TypePropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeerannotation.peer)
    public var peer : AutomationPeer! {
        get { try! _default.get_PeerImpl() }
        set { try! _default.put_PeerImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.automationpeerannotation.type)
    public var type : WinUI.AnnotationType {
        get { try! _default.get_TypeImpl() }
        set { try! _default.put_TypeImpl(newValue) }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.rawelementproviderruntimeid)
public struct RawElementProviderRuntimeId: Hashable, Codable {
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.rawelementproviderruntimeid.part1)
    public var part1: UInt32 = 0
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.peers.rawelementproviderruntimeid.part2)
    public var part2: UInt32 = 0
    public init() {}
    public init(part1: UInt32, part2: UInt32) {
        self.part1 = part1
        self.part2 = part2
    }
    public static func from(abi: __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CRawElementProviderRuntimeId) -> RawElementProviderRuntimeId {
        .init(part1: abi.Part1, part2: abi.Part2)
    }
}

extension WinUI.AccessibilityView {
    public static var raw : WinUI.AccessibilityView {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAccessibilityView_Raw
    }
    public static var control : WinUI.AccessibilityView {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAccessibilityView_Control
    }
    public static var content : WinUI.AccessibilityView {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAccessibilityView_Content
    }
}
extension WinUI.AccessibilityView: @retroactive Hashable, @retroactive Codable {}

extension WinUI.AutomationControlType {
    public static var button : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_Button
    }
    public static var calendar : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_Calendar
    }
    public static var checkBox : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_CheckBox
    }
    public static var comboBox : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_ComboBox
    }
    public static var edit : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_Edit
    }
    public static var hyperlink : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_Hyperlink
    }
    public static var image : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_Image
    }
    public static var listItem : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_ListItem
    }
    public static var list : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_List
    }
    public static var menu : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_Menu
    }
    public static var menuBar : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_MenuBar
    }
    public static var menuItem : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_MenuItem
    }
    public static var progressBar : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_ProgressBar
    }
    public static var radioButton : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_RadioButton
    }
    public static var scrollBar : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_ScrollBar
    }
    public static var slider : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_Slider
    }
    public static var spinner : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_Spinner
    }
    public static var statusBar : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_StatusBar
    }
    public static var tab : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_Tab
    }
    public static var tabItem : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_TabItem
    }
    public static var text : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_Text
    }
    public static var toolBar : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_ToolBar
    }
    public static var toolTip : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_ToolTip
    }
    public static var tree : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_Tree
    }
    public static var treeItem : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_TreeItem
    }
    public static var custom : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_Custom
    }
    public static var group : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_Group
    }
    public static var thumb : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_Thumb
    }
    public static var dataGrid : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_DataGrid
    }
    public static var dataItem : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_DataItem
    }
    public static var document : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_Document
    }
    public static var splitButton : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_SplitButton
    }
    public static var window : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_Window
    }
    public static var pane : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_Pane
    }
    public static var header : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_Header
    }
    public static var headerItem : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_HeaderItem
    }
    public static var table : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_Table
    }
    public static var titleBar : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_TitleBar
    }
    public static var separator : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_Separator
    }
    public static var semanticZoom : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_SemanticZoom
    }
    public static var appBar : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_AppBar
    }
    public static var flipView : WinUI.AutomationControlType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationControlType_FlipView
    }
}
extension WinUI.AutomationControlType: @retroactive Hashable, @retroactive Codable {}

extension WinUI.AutomationEvents {
    public static var toolTipOpened : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_ToolTipOpened
    }
    public static var toolTipClosed : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_ToolTipClosed
    }
    public static var menuOpened : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_MenuOpened
    }
    public static var menuClosed : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_MenuClosed
    }
    public static var automationFocusChanged : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_AutomationFocusChanged
    }
    public static var invokePatternOnInvoked : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_InvokePatternOnInvoked
    }
    public static var selectionItemPatternOnElementAddedToSelection : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_SelectionItemPatternOnElementAddedToSelection
    }
    public static var selectionItemPatternOnElementRemovedFromSelection : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_SelectionItemPatternOnElementRemovedFromSelection
    }
    public static var selectionItemPatternOnElementSelected : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_SelectionItemPatternOnElementSelected
    }
    public static var selectionPatternOnInvalidated : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_SelectionPatternOnInvalidated
    }
    public static var textPatternOnTextSelectionChanged : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_TextPatternOnTextSelectionChanged
    }
    public static var textPatternOnTextChanged : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_TextPatternOnTextChanged
    }
    public static var asyncContentLoaded : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_AsyncContentLoaded
    }
    public static var propertyChanged : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_PropertyChanged
    }
    public static var structureChanged : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_StructureChanged
    }
    public static var dragStart : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_DragStart
    }
    public static var dragCancel : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_DragCancel
    }
    public static var dragComplete : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_DragComplete
    }
    public static var dragEnter : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_DragEnter
    }
    public static var dragLeave : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_DragLeave
    }
    public static var dropped : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_Dropped
    }
    public static var liveRegionChanged : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_LiveRegionChanged
    }
    public static var inputReachedTarget : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_InputReachedTarget
    }
    public static var inputReachedOtherElement : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_InputReachedOtherElement
    }
    public static var inputDiscarded : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_InputDiscarded
    }
    public static var windowClosed : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_WindowClosed
    }
    public static var windowOpened : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_WindowOpened
    }
    public static var conversionTargetChanged : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_ConversionTargetChanged
    }
    public static var textEditTextChanged : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_TextEditTextChanged
    }
    public static var layoutInvalidated : WinUI.AutomationEvents {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationEvents_LayoutInvalidated
    }
}
extension WinUI.AutomationEvents: @retroactive Hashable, @retroactive Codable {}

extension WinUI.AutomationHeadingLevel {
    public static var none : WinUI.AutomationHeadingLevel {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationHeadingLevel_None
    }
    public static var level1 : WinUI.AutomationHeadingLevel {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationHeadingLevel_Level1
    }
    public static var level2 : WinUI.AutomationHeadingLevel {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationHeadingLevel_Level2
    }
    public static var level3 : WinUI.AutomationHeadingLevel {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationHeadingLevel_Level3
    }
    public static var level4 : WinUI.AutomationHeadingLevel {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationHeadingLevel_Level4
    }
    public static var level5 : WinUI.AutomationHeadingLevel {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationHeadingLevel_Level5
    }
    public static var level6 : WinUI.AutomationHeadingLevel {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationHeadingLevel_Level6
    }
    public static var level7 : WinUI.AutomationHeadingLevel {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationHeadingLevel_Level7
    }
    public static var level8 : WinUI.AutomationHeadingLevel {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationHeadingLevel_Level8
    }
    public static var level9 : WinUI.AutomationHeadingLevel {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationHeadingLevel_Level9
    }
}
extension WinUI.AutomationHeadingLevel: @retroactive Hashable, @retroactive Codable {}

extension WinUI.AutomationLandmarkType {
    public static var none : WinUI.AutomationLandmarkType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationLandmarkType_None
    }
    public static var custom : WinUI.AutomationLandmarkType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationLandmarkType_Custom
    }
    public static var form : WinUI.AutomationLandmarkType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationLandmarkType_Form
    }
    public static var main : WinUI.AutomationLandmarkType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationLandmarkType_Main
    }
    public static var navigation : WinUI.AutomationLandmarkType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationLandmarkType_Navigation
    }
    public static var search : WinUI.AutomationLandmarkType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationLandmarkType_Search
    }
}
extension WinUI.AutomationLandmarkType: @retroactive Hashable, @retroactive Codable {}

extension WinUI.AutomationLiveSetting {
    public static var off : WinUI.AutomationLiveSetting {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationLiveSetting_Off
    }
    public static var polite : WinUI.AutomationLiveSetting {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationLiveSetting_Polite
    }
    public static var assertive : WinUI.AutomationLiveSetting {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationLiveSetting_Assertive
    }
}
extension WinUI.AutomationLiveSetting: @retroactive Hashable, @retroactive Codable {}

extension WinUI.AutomationNavigationDirection {
    public static var parent : WinUI.AutomationNavigationDirection {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNavigationDirection_Parent
    }
    public static var nextSibling : WinUI.AutomationNavigationDirection {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNavigationDirection_NextSibling
    }
    public static var previousSibling : WinUI.AutomationNavigationDirection {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNavigationDirection_PreviousSibling
    }
    public static var firstChild : WinUI.AutomationNavigationDirection {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNavigationDirection_FirstChild
    }
    public static var lastChild : WinUI.AutomationNavigationDirection {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNavigationDirection_LastChild
    }
}
extension WinUI.AutomationNavigationDirection: @retroactive Hashable, @retroactive Codable {}

extension WinUI.AutomationNotificationKind {
    public static var itemAdded : WinUI.AutomationNotificationKind {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNotificationKind_ItemAdded
    }
    public static var itemRemoved : WinUI.AutomationNotificationKind {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNotificationKind_ItemRemoved
    }
    public static var actionCompleted : WinUI.AutomationNotificationKind {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNotificationKind_ActionCompleted
    }
    public static var actionAborted : WinUI.AutomationNotificationKind {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNotificationKind_ActionAborted
    }
    public static var other : WinUI.AutomationNotificationKind {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNotificationKind_Other
    }
}
extension WinUI.AutomationNotificationKind: @retroactive Hashable, @retroactive Codable {}

extension WinUI.AutomationNotificationProcessing {
    public static var importantAll : WinUI.AutomationNotificationProcessing {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNotificationProcessing_ImportantAll
    }
    public static var importantMostRecent : WinUI.AutomationNotificationProcessing {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNotificationProcessing_ImportantMostRecent
    }
    public static var all : WinUI.AutomationNotificationProcessing {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNotificationProcessing_All
    }
    public static var mostRecent : WinUI.AutomationNotificationProcessing {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNotificationProcessing_MostRecent
    }
    public static var currentThenMostRecent : WinUI.AutomationNotificationProcessing {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationNotificationProcessing_CurrentThenMostRecent
    }
}
extension WinUI.AutomationNotificationProcessing: @retroactive Hashable, @retroactive Codable {}

extension WinUI.AutomationOrientation {
    public static var none : WinUI.AutomationOrientation {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationOrientation_None
    }
    public static var horizontal : WinUI.AutomationOrientation {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationOrientation_Horizontal
    }
    public static var vertical : WinUI.AutomationOrientation {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationOrientation_Vertical
    }
}
extension WinUI.AutomationOrientation: @retroactive Hashable, @retroactive Codable {}

extension WinUI.AutomationStructureChangeType {
    public static var childAdded : WinUI.AutomationStructureChangeType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationStructureChangeType_ChildAdded
    }
    public static var childRemoved : WinUI.AutomationStructureChangeType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationStructureChangeType_ChildRemoved
    }
    public static var childrenInvalidated : WinUI.AutomationStructureChangeType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationStructureChangeType_ChildrenInvalidated
    }
    public static var childrenBulkAdded : WinUI.AutomationStructureChangeType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationStructureChangeType_ChildrenBulkAdded
    }
    public static var childrenBulkRemoved : WinUI.AutomationStructureChangeType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationStructureChangeType_ChildrenBulkRemoved
    }
    public static var childrenReordered : WinUI.AutomationStructureChangeType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CAutomationStructureChangeType_ChildrenReordered
    }
}
extension WinUI.AutomationStructureChangeType: @retroactive Hashable, @retroactive Codable {}

extension WinUI.PatternInterface {
    public static var invoke : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_Invoke
    }
    public static var selection : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_Selection
    }
    public static var value : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_Value
    }
    public static var rangeValue : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_RangeValue
    }
    public static var scroll : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_Scroll
    }
    public static var scrollItem : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_ScrollItem
    }
    public static var expandCollapse : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_ExpandCollapse
    }
    public static var grid : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_Grid
    }
    public static var gridItem : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_GridItem
    }
    public static var multipleView : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_MultipleView
    }
    public static var window : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_Window
    }
    public static var selectionItem : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_SelectionItem
    }
    public static var dock : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_Dock
    }
    public static var table : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_Table
    }
    public static var tableItem : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_TableItem
    }
    public static var toggle : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_Toggle
    }
    public static var transform : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_Transform
    }
    public static var text : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_Text
    }
    public static var itemContainer : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_ItemContainer
    }
    public static var virtualizedItem : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_VirtualizedItem
    }
    public static var text2 : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_Text2
    }
    public static var textChild : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_TextChild
    }
    public static var textRange : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_TextRange
    }
    public static var annotation : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_Annotation
    }
    public static var drag : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_Drag
    }
    public static var dropTarget : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_DropTarget
    }
    public static var objectModel : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_ObjectModel
    }
    public static var spreadsheet : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_Spreadsheet
    }
    public static var spreadsheetItem : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_SpreadsheetItem
    }
    public static var styles : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_Styles
    }
    public static var transform2 : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_Transform2
    }
    public static var synchronizedInput : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_SynchronizedInput
    }
    public static var textEdit : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_TextEdit
    }
    public static var customNavigation : WinUI.PatternInterface {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CPatternInterface_CustomNavigation
    }
}
extension WinUI.PatternInterface: @retroactive Hashable, @retroactive Codable {}

