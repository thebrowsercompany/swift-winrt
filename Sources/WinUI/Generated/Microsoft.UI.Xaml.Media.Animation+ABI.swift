// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import UWP
@_spi(WinRTInternal) @_spi(WinRTImplements) import WinAppSDK
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition: WindowsFoundation.IID {
    .init(Data1: 0x3728595E, Data2: 0x0EA2, Data3: 0x524B, Data4: ( 0x93,0x48,0x86,0xCF,0xB8,0x60,0xA0,0xFF ))// 3728595E-0EA2-524B-9348-86CFB860A0FF
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBackEase: WindowsFoundation.IID {
    .init(Data1: 0x1775BD43, Data2: 0x1939, Data3: 0x57CB, Data4: ( 0x8C,0x31,0xCD,0x75,0x90,0xEC,0x95,0x43 ))// 1775BD43-1939-57CB-8C31-CD7590EC9543
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics: WindowsFoundation.IID {
    .init(Data1: 0x1EAD2EF9, Data2: 0x7901, Data3: 0x542D, Data4: ( 0xAE,0x08,0x7B,0x59,0x37,0xB3,0x2E,0xF0 ))// 1EAD2EF9-7901-542D-AE08-7B5937B32EF0
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfiguration: WindowsFoundation.IID {
    .init(Data1: 0x7FF18AFE, Data2: 0x91E8, Data3: 0x52FA, Data4: ( 0xA1,0xC1,0x7B,0x2C,0x1A,0x14,0x01,0x18 ))// 7FF18AFE-91E8-52FA-A1C1-7B2C1A140118
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactory: WindowsFoundation.IID {
    .init(Data1: 0x2D156A02, Data2: 0x0FB5, Data3: 0x5AD1, Data4: ( 0xAF,0x9B,0xBC,0x9C,0x27,0x20,0xFE,0xCB ))// 2D156A02-0FB5-5AD1-AF9B-BC9C2720FECB
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard: WindowsFoundation.IID {
    .init(Data1: 0xBB364720, Data2: 0xEE5A, Data3: 0x5B32, Data4: ( 0x91,0xE2,0x62,0x58,0x97,0x29,0xFD,0x3A ))// BB364720-EE5A-5B32-91E2-62589729FD3A
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics: WindowsFoundation.IID {
    .init(Data1: 0x4D5FDBEB, Data2: 0x6B0E, Data3: 0x5A8F, Data4: ( 0xA8,0xF0,0x01,0xF4,0x38,0xDF,0x8F,0xB2 ))// 4D5FDBEB-6B0E-5A8F-A8F0-01F438DF8FB2
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBounceEase: WindowsFoundation.IID {
    .init(Data1: 0xC138BFFF, Data2: 0x87C8, Data3: 0x5C60, Data4: ( 0xB2,0x80,0x68,0x2A,0x49,0x9C,0x58,0xC3 ))// C138BFFF-87C8-5C60-B280-682A499C58C3
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics: WindowsFoundation.IID {
    .init(Data1: 0xD7716B38, Data2: 0xC705, Data3: 0x5093, Data4: ( 0x96,0xD6,0x73,0x5C,0x13,0x10,0x5A,0x30 ))// D7716B38-C705-5093-96D6-735C13105A30
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CICircleEase: WindowsFoundation.IID {
    .init(Data1: 0x88209080, Data2: 0x2929, Data3: 0x5924, Data4: ( 0x9B,0x52,0xF9,0x51,0x96,0x56,0x87,0x13 ))// 88209080-2929-5924-9B52-F95196568713
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimation: WindowsFoundation.IID {
    .init(Data1: 0x6DF862D2, Data2: 0x65F2, Data3: 0x53A8, Data4: ( 0x8B,0x1B,0x1B,0x6C,0x17,0x63,0xC1,0x75 ))// 6DF862D2-65F2-53A8-8B1B-1B6C1763C175
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics: WindowsFoundation.IID {
    .init(Data1: 0x99AEBE0F, Data2: 0x928E, Data3: 0x52CB, Data4: ( 0x84,0x2F,0xF4,0x3F,0xE6,0x60,0xFF,0x06 ))// 99AEBE0F-928E-52CB-842F-F43FE660FF06
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames: WindowsFoundation.IID {
    .init(Data1: 0x96F28C97, Data2: 0x67EB, Data3: 0x5393, Data4: ( 0x8E,0x37,0xA8,0x1D,0x8F,0xDA,0x18,0xB3 ))// 96F28C97-67EB-5393-8E37-A81D8FDA18B3
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics: WindowsFoundation.IID {
    .init(Data1: 0x5B0F4840, Data2: 0x0EF7, Data3: 0x5AD7, Data4: ( 0xA8,0xF2,0xD4,0x94,0x24,0xED,0x90,0x6F ))// 5B0F4840-0EF7-5AD7-A8F2-D49424ED906F
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame: WindowsFoundation.IID {
    .init(Data1: 0x02848C7E, Data2: 0xC772, Data3: 0x5F66, Data4: ( 0x84,0x2B,0xFD,0x49,0x4D,0x0D,0xA6,0x69 ))// 02848C7E-C772-5F66-842B-FD494D0DA669
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory: WindowsFoundation.IID {
    .init(Data1: 0xA82CC182, Data2: 0x9D80, Data3: 0x508C, Data4: ( 0xB9,0x62,0xD7,0x42,0x25,0x58,0x72,0x00 ))// A82CC182-9D80-508C-B962-D74225587200
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics: WindowsFoundation.IID {
    .init(Data1: 0xB62FDD68, Data2: 0x15C7, Data3: 0x5C6C, Data4: ( 0xA4,0xFA,0x0C,0xEE,0x10,0xE0,0x45,0x56 ))// B62FDD68-15C7-5C6C-A4FA-0CEE10E04556
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo: WindowsFoundation.IID {
    .init(Data1: 0xB21CC95F, Data2: 0x9E3D, Data3: 0x540A, Data4: ( 0xB3,0x5A,0x17,0xB9,0x9D,0xC4,0x1B,0x1E ))// B21CC95F-9E3D-540A-B35A-17B99DC41B1E
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics: WindowsFoundation.IID {
    .init(Data1: 0x20020BE1, Data2: 0xC1BA, Data3: 0x59F5, Data4: ( 0x99,0x7A,0xC0,0x4F,0x5E,0x38,0x33,0xB0 ))// 20020BE1-C1BA-59F5-997A-C04F5E3833B0
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation: WindowsFoundation.IID {
    .init(Data1: 0xA9C1C6AD, Data2: 0x7670, Data3: 0x589C, Data4: ( 0xA6,0x08,0x9B,0x5C,0x01,0xCE,0xC7,0x1F ))// A9C1C6AD-7670-589C-A608-9B5C01CEC71F
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfiguration: WindowsFoundation.IID {
    .init(Data1: 0xE848379D, Data2: 0x7E25, Data3: 0x5976, Data4: ( 0xBF,0xB3,0x08,0x6B,0xAC,0x4E,0x88,0x49 ))// E848379D-7E25-5976-BFB3-086BAC4E8849
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationFactory: WindowsFoundation.IID {
    .init(Data1: 0x71008845, Data2: 0x4A12, Data3: 0x5A1A, Data4: ( 0x96,0x9C,0x41,0x52,0xB5,0x17,0x49,0x22 ))// 71008845-4A12-5A1A-969C-4152B5174922
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService: WindowsFoundation.IID {
    .init(Data1: 0x85F72163, Data2: 0xC3C8, Data3: 0x586A, Data4: ( 0x91,0xFE,0x3E,0x03,0x15,0xA3,0xA4,0xFC ))// 85F72163-C3C8-586A-91FE-3E0315A3A4FC
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStatics: WindowsFoundation.IID {
    .init(Data1: 0xF30AD68D, Data2: 0x3426, Data3: 0x5564, Data4: ( 0x92,0xC6,0x28,0x8B,0x81,0x9E,0x65,0x2A ))// F30AD68D-3426-5564-92C6-288B819E652A
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition: WindowsFoundation.IID {
    .init(Data1: 0xDFF47071, Data2: 0xCC51, Data3: 0x556C, Data4: ( 0xA3,0xFE,0x8B,0xBB,0x4C,0xBA,0x61,0x95 ))// DFF47071-CC51-556C-A3FE-8BBB4CBA6195
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics: WindowsFoundation.IID {
    .init(Data1: 0x95CDA8B1, Data2: 0x6667, Data3: 0x56E3, Data4: ( 0xBE,0x40,0x86,0x6E,0xEF,0x53,0x66,0x3C ))// 95CDA8B1-6667-56E3-BE40-866EEF53663C
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo: WindowsFoundation.IID {
    .init(Data1: 0xC55DA70F, Data2: 0xFF2A, Data3: 0x5FC3, Data4: ( 0x81,0xC5,0x96,0x70,0xF4,0xD7,0x87,0x52 ))// C55DA70F-FF2A-5FC3-81C5-9670F4D78752
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics: WindowsFoundation.IID {
    .init(Data1: 0xCA9006FD, Data2: 0xF513, Data3: 0x5F34, Data4: ( 0xAD,0x7F,0x49,0xF9,0xD7,0xA9,0x94,0x32 ))// CA9006FD-F513-5F34-AD7F-49F9D7A99432
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CICubicEase: WindowsFoundation.IID {
    .init(Data1: 0x01A218B4, Data2: 0xEB7E, Data3: 0x54F9, Data4: ( 0xBF,0xB6,0xC6,0xEE,0x12,0x80,0x13,0xD2 ))// 01A218B4-EB7E-54F9-BFB6-C6EE128013D2
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfiguration: WindowsFoundation.IID {
    .init(Data1: 0x44F192EB, Data2: 0xCC11, Data3: 0x545E, Data4: ( 0x8F,0xA2,0x1F,0x0E,0xC9,0xC4,0x43,0x8A ))// 44F192EB-CC11-545E-8FA2-1F0EC9C4438A
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactory: WindowsFoundation.IID {
    .init(Data1: 0x604ABA9B, Data2: 0x4EB8, Data3: 0x5310, Data4: ( 0x91,0xDC,0x30,0x96,0x2E,0x25,0xAB,0x00 ))// 604ABA9B-4EB8-5310-91DC-30962E25AB00
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame: WindowsFoundation.IID {
    .init(Data1: 0x9B3D88A7, Data2: 0x31D3, Data3: 0x5912, Data4: ( 0x86,0x46,0x64,0x1A,0x8A,0x56,0x5C,0xA1 ))// 9B3D88A7-31D3-5912-8646-641A8A565CA1
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame: WindowsFoundation.IID {
    .init(Data1: 0xEC16A555, Data2: 0xC083, Data3: 0x5A18, Data4: ( 0x80,0x5B,0xA1,0x4B,0x90,0xBC,0x80,0xE2 ))// EC16A555-C083-5A18-805B-A14B90BC80E2
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame: WindowsFoundation.IID {
    .init(Data1: 0x542FA813, Data2: 0x6892, Data3: 0x559D, Data4: ( 0x9F,0x69,0x1F,0x2A,0xC6,0x66,0xAF,0x13 ))// 542FA813-6892-559D-9F69-1F2AC666AF13
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame: WindowsFoundation.IID {
    .init(Data1: 0x2255A291, Data2: 0x007E, Data3: 0x57CE, Data4: ( 0xAA,0x53,0x97,0xD1,0xE4,0xA0,0xD7,0xE2 ))// 2255A291-007E-57CE-AA53-97D1E4A0D7E2
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation: WindowsFoundation.IID {
    .init(Data1: 0x651EC97E, Data2: 0xE483, Data3: 0x5985, Data4: ( 0xAA,0x0B,0x49,0xCF,0xB0,0x74,0x32,0xDD ))// 651EC97E-E483-5985-AA0B-49CFB07432DD
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics: WindowsFoundation.IID {
    .init(Data1: 0x4E098387, Data2: 0xADC6, Data3: 0x5549, Data4: ( 0xAD,0x21,0x63,0x3E,0x4F,0xA2,0x44,0xC2 ))// 4E098387-ADC6-5549-AD21-633E4FA244C2
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames: WindowsFoundation.IID {
    .init(Data1: 0x815437D5, Data2: 0x63CF, Data3: 0x54A5, Data4: ( 0xAE,0xA5,0x24,0xB8,0x47,0x08,0xD1,0x2D ))// 815437D5-63CF-54A5-AEA5-24B84708D12D
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics: WindowsFoundation.IID {
    .init(Data1: 0x4C1C9BF1, Data2: 0x3A03, Data3: 0x5689, Data4: ( 0xB1,0x8F,0x6C,0x44,0x25,0x1E,0x13,0xD9 ))// 4C1C9BF1-3A03-5689-B18F-6C44251E13D9
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame: WindowsFoundation.IID {
    .init(Data1: 0x94C82AE6, Data2: 0xCA62, Data3: 0x5F52, Data4: ( 0x93,0x4C,0x3E,0x42,0x7E,0x75,0xD6,0x9A ))// 94C82AE6-CA62-5F52-934C-3E427E75D69A
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory: WindowsFoundation.IID {
    .init(Data1: 0x2D492CB3, Data2: 0xF488, Data3: 0x5D30, Data4: ( 0xB0,0x0C,0xB6,0xF2,0x54,0x7D,0x0E,0xFE ))// 2D492CB3-F488-5D30-B00C-B6F2547D0EFE
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics: WindowsFoundation.IID {
    .init(Data1: 0x0E56914C, Data2: 0xB430, Data3: 0x538F, Data4: ( 0xBB,0x66,0x0B,0x8E,0x83,0xAB,0x3D,0xB6 ))// 0E56914C-B430-538F-BB66-0B8E83AB3DB6
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation: WindowsFoundation.IID {
    .init(Data1: 0x648E690E, Data2: 0xA2C0, Data3: 0x58CA, Data4: ( 0xB1,0x5D,0xDB,0x6F,0xCC,0xC6,0x63,0xF2 ))// 648E690E-A2C0-58CA-B15D-DB6FCCC663F2
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics: WindowsFoundation.IID {
    .init(Data1: 0xCDBDB41A, Data2: 0xCE84, Data3: 0x50A1, Data4: ( 0x8B,0x96,0x96,0x59,0x9C,0xD9,0x61,0x9D ))// CDBDB41A-CE84-50A1-8B96-96599CD9619D
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation: WindowsFoundation.IID {
    .init(Data1: 0x633CD3C0, Data2: 0x71AF, Data3: 0x52FD, Data4: ( 0x99,0x3E,0x50,0x4E,0x3E,0x6F,0x56,0xD4 ))// 633CD3C0-71AF-52FD-993E-504E3E6F56D4
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics: WindowsFoundation.IID {
    .init(Data1: 0x8301AFD2, Data2: 0x68B2, Data3: 0x5C6C, Data4: ( 0xAA,0xDF,0x9A,0x98,0xD6,0x20,0xE8,0xD2 ))// 8301AFD2-68B2-5C6C-AADF-9A98D620E8D2
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo: WindowsFoundation.IID {
    .init(Data1: 0x5D5863D6, Data2: 0x4BBF, Data3: 0x5B30, Data4: ( 0x94,0xFA,0x03,0x45,0x31,0xCF,0xA2,0xAA ))// 5D5863D6-4BBF-5B30-94FA-034531CFA2AA
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation: WindowsFoundation.IID {
    .init(Data1: 0x097577E0, Data2: 0x3027, Data3: 0x5F24, Data4: ( 0xAF,0x8C,0x97,0x6D,0x9F,0xAE,0xD8,0x30 ))// 097577E0-3027-5F24-AF8C-976D9FAED830
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics: WindowsFoundation.IID {
    .init(Data1: 0xBA24258E, Data2: 0x3A8E, Data3: 0x5804, Data4: ( 0x91,0x5A,0x76,0x70,0x89,0x3D,0xBE,0xA4 ))// BA24258E-3A8E-5804-915A-7670893DBEA4
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation: WindowsFoundation.IID {
    .init(Data1: 0x9A93B9CC, Data2: 0x925F, Data3: 0x525A, Data4: ( 0x9E,0xAC,0x55,0xD3,0x9D,0xB3,0xD3,0x14 ))// 9A93B9CC-925F-525A-9EAC-55D39DB3D314
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics: WindowsFoundation.IID {
    .init(Data1: 0x6EB9693B, Data2: 0xC0D0, Data3: 0x5BAE, Data4: ( 0x9C,0xD2,0x10,0xD8,0x0B,0x8D,0x38,0x67 ))// 6EB9693B-C0D0-5BAE-9CD2-10D80B8D3867
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation: WindowsFoundation.IID {
    .init(Data1: 0xB97F19C0, Data2: 0xF1E2, Data3: 0x5705, Data4: ( 0xA2,0x52,0x2D,0xB0,0x5D,0x2E,0x5A,0x54 ))// B97F19C0-F1E2-5705-A252-2DB05D2E5A54
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics: WindowsFoundation.IID {
    .init(Data1: 0xA0CE9E16, Data2: 0xAE12, Data3: 0x55FC, Data4: ( 0xA9,0xE5,0x29,0xDC,0x94,0xA7,0x13,0xBD ))// A0CE9E16-AE12-55FC-A9E5-29DC94A713BD
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame: WindowsFoundation.IID {
    .init(Data1: 0xA137A710, Data2: 0xDA3C, Data3: 0x5426, Data4: ( 0xA1,0xA2,0x3A,0x5A,0x67,0x2A,0x42,0x64 ))// A137A710-DA3C-5426-A1A2-3A5A672A4264
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics: WindowsFoundation.IID {
    .init(Data1: 0xC57818C0, Data2: 0x3361, Data3: 0x587D, Data4: ( 0xB3,0x81,0x62,0x0B,0x69,0x25,0x1B,0xCF ))// C57818C0-3361-587D-B381-620B69251BCF
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame: WindowsFoundation.IID {
    .init(Data1: 0x935D9B7E, Data2: 0xDA61, Data3: 0x5BB2, Data4: ( 0xA5,0x74,0x7D,0x2E,0x53,0xB6,0x05,0x61 ))// 935D9B7E-DA61-5BB2-A574-7D2E53B60561
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics: WindowsFoundation.IID {
    .init(Data1: 0x8CC08735, Data2: 0x4221, Data3: 0x5127, Data4: ( 0xAB,0x2F,0x1E,0x7E,0x3D,0xF9,0x5F,0xB9 ))// 8CC08735-4221-5127-AB2F-1E7E3DF95FB9
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase: WindowsFoundation.IID {
    .init(Data1: 0x4FAB519A, Data2: 0xA93D, Data3: 0x5D28, Data4: ( 0xAF,0x18,0x84,0x53,0x2B,0xD3,0x2E,0xFE ))// 4FAB519A-A93D-5D28-AF18-84532BD32EFE
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory: WindowsFoundation.IID {
    .init(Data1: 0xB1B92F4C, Data2: 0x5EC7, Data3: 0x5CDA, Data4: ( 0xB1,0xD4,0xFD,0x15,0x95,0x95,0xCA,0x47 ))// B1B92F4C-5EC7-5CDA-B1D4-FD159595CA47
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics: WindowsFoundation.IID {
    .init(Data1: 0x09032445, Data2: 0x967C, Data3: 0x52B8, Data4: ( 0xB7,0x12,0x15,0xF0,0x66,0xB3,0x28,0x21 ))// 09032445-967C-52B8-B712-15F066B32821
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame: WindowsFoundation.IID {
    .init(Data1: 0x9406EE8E, Data2: 0x3641, Data3: 0x54FE, Data4: ( 0xA4,0x24,0x83,0x42,0x0E,0xA4,0x5C,0xD3 ))// 9406EE8E-3641-54FE-A424-83420EA45CD3
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics: WindowsFoundation.IID {
    .init(Data1: 0xAC727659, Data2: 0x92A3, Data3: 0x52EA, Data4: ( 0x89,0x49,0xB6,0x09,0xE4,0x8C,0x23,0x3D ))// AC727659-92A3-52EA-8949-B609E48C233D
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition: WindowsFoundation.IID {
    .init(Data1: 0x57089964, Data2: 0xE358, Data3: 0x5FE2, Data4: ( 0x84,0xE7,0x15,0xE8,0x2B,0xBA,0x9C,0x06 ))// 57089964-E358-5FE2-84E7-15E82BBA9C06
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics: WindowsFoundation.IID {
    .init(Data1: 0x316AF8D4, Data2: 0xD2A0, Data3: 0x5D27, Data4: ( 0x9A,0xF6,0x74,0x77,0x97,0x96,0x5D,0x46 ))// 316AF8D4-D2A0-5D27-9AF6-747797965D46
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIElasticEase: WindowsFoundation.IID {
    .init(Data1: 0x2B18D50B, Data2: 0x4D34, Data3: 0x509B, Data4: ( 0x91,0x5C,0x61,0xB1,0xAA,0x6F,0x83,0xD8 ))// 2B18D50B-4D34-509B-915C-61B1AA6F83D8
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics: WindowsFoundation.IID {
    .init(Data1: 0x95FD9290, Data2: 0xD279, Data3: 0x5857, Data4: ( 0x9F,0x50,0x3F,0x29,0x9A,0x2D,0x02,0xF4 ))// 95FD9290-D279-5857-9F50-3F299A2D02F4
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo: WindowsFoundation.IID {
    .init(Data1: 0xDEC74921, Data2: 0x0ED7, Data3: 0x54E1, Data4: ( 0x8C,0x1D,0x30,0xB8,0xCC,0xCC,0x4B,0x8D ))// DEC74921-0ED7-54E1-8C1D-30B8CCCC4B8D
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics: WindowsFoundation.IID {
    .init(Data1: 0xF1096DE1, Data2: 0x1F79, Data3: 0x5D38, Data4: ( 0xA4,0xD6,0x16,0xF3,0xBD,0xAA,0xB7,0xF0 ))// F1096DE1-1F79-5D38-A4D6-16F3BDAAB7F0
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition: WindowsFoundation.IID {
    .init(Data1: 0x8EB681FA, Data2: 0x1629, Data3: 0x5E29, Data4: ( 0xAC,0x1E,0x70,0xF3,0x63,0x93,0x29,0xF8 ))// 8EB681FA-1629-5E29-AC1E-70F3639329F8
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics: WindowsFoundation.IID {
    .init(Data1: 0xC99E5435, Data2: 0xFACC, Data3: 0x50AF, Data4: ( 0xB9,0x6C,0x63,0xB1,0x4F,0xE7,0x15,0x6E ))// C99E5435-FACC-50AF-B96C-63B14FE7156E
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIExponentialEase: WindowsFoundation.IID {
    .init(Data1: 0x4D289262, Data2: 0xE832, Data3: 0x5FBC, Data4: ( 0xA9,0x8B,0x87,0xA6,0xEC,0xB3,0xB6,0xCC ))// 4D289262-E832-5FBC-A98B-87A6ECB3B6CC
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics: WindowsFoundation.IID {
    .init(Data1: 0x8394AB8F, Data2: 0xDDF1, Data3: 0x55D0, Data4: ( 0xAC,0xF1,0x07,0xFE,0xDD,0x92,0x9B,0xB5 ))// 8394AB8F-DDF1-55D0-ACF1-07FEDD929BB5
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation: WindowsFoundation.IID {
    .init(Data1: 0x0DCA074A, Data2: 0x31CC, Data3: 0x5E70, Data4: ( 0x8B,0x6B,0x8D,0xBD,0x7F,0xFF,0x01,0xF6 ))// 0DCA074A-31CC-5E70-8B6B-8DBD7FFF01F6
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics: WindowsFoundation.IID {
    .init(Data1: 0x5D74A6A6, Data2: 0x92C6, Data3: 0x5E49, Data4: ( 0x86,0x5F,0x67,0x60,0x87,0x24,0x71,0x79 ))// 5D74A6A6-92C6-5E49-865F-676087247179
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation: WindowsFoundation.IID {
    .init(Data1: 0x114024D6, Data2: 0x5D67, Data3: 0x5C9C, Data4: ( 0x83,0xC5,0x54,0xA8,0xBD,0x7B,0x67,0x1A ))// 114024D6-5D67-5C9C-83C5-54A8BD7B671A
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics: WindowsFoundation.IID {
    .init(Data1: 0x0277BEA1, Data2: 0xA0A5, Data3: 0x5E26, Data4: ( 0x9B,0x56,0x6A,0x42,0x08,0x86,0x27,0x38 ))// 0277BEA1-A0A5-5E26-9B56-6A4208862738
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration: WindowsFoundation.IID {
    .init(Data1: 0x04C8B276, Data2: 0xCFF3, Data3: 0x5A55, Data4: ( 0x92,0x29,0x33,0xDC,0x66,0xC9,0x9E,0x20 ))// 04C8B276-CFF3-5A55-9229-33DC66C99E20
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactory: WindowsFoundation.IID {
    .init(Data1: 0xBC7A71B5, Data2: 0x7CDA, Data3: 0x5BB7, Data4: ( 0x96,0x7E,0xD6,0xA0,0x31,0x28,0x5A,0x9C ))// BC7A71B5-7CDA-5BB7-967E-D6A031285A9C
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIKeySpline: WindowsFoundation.IID {
    .init(Data1: 0x130D8B2B, Data2: 0x0B52, Data3: 0x5253, Data4: ( 0x88,0x1B,0x36,0xAB,0x48,0x59,0x2E,0x6B ))// 130D8B2B-0B52-5253-881B-36AB48592E6B
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper: WindowsFoundation.IID {
    .init(Data1: 0xE354DA44, Data2: 0x1F24, Data3: 0x59C6, Data4: ( 0xBC,0x5B,0xD6,0xB1,0xBA,0x26,0x7E,0x9C ))// E354DA44-1F24-59C6-BC5B-D6B1BA267E9C
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics: WindowsFoundation.IID {
    .init(Data1: 0xAE5D22C9, Data2: 0x0FDB, Data3: 0x5823, Data4: ( 0x88,0x46,0x8A,0x4D,0x0B,0x9E,0xEB,0xFA ))// AE5D22C9-0FDB-5823-8846-8A4D0B9EEBFA
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame: WindowsFoundation.IID {
    .init(Data1: 0x0BCE4CD6, Data2: 0x3A80, Data3: 0x5F2F, Data4: ( 0x93,0x2E,0x61,0x9A,0x85,0x46,0xD0,0xBD ))// 0BCE4CD6-3A80-5F2F-932E-619A8546D0BD
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame: WindowsFoundation.IID {
    .init(Data1: 0x38A635B9, Data2: 0xF613, Data3: 0x55E0, Data4: ( 0xAA,0xEC,0x9D,0x4E,0x09,0x7E,0xFF,0x91 ))// 38A635B9-F613-55E0-AAEC-9D4E097EFF91
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame: WindowsFoundation.IID {
    .init(Data1: 0x4EC22493, Data2: 0xBACB, Data3: 0x5105, Data4: ( 0xAC,0x16,0x8E,0xA5,0x41,0x8A,0xB7,0x6E ))// 4EC22493-BACB-5105-AC16-8EA5418AB76E
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition: WindowsFoundation.IID {
    .init(Data1: 0xD7CFBD3B, Data2: 0x0D27, Data3: 0x5EA1, Data4: ( 0xBE,0xB7,0xF6,0xB8,0x47,0x52,0x0D,0xC6 ))// D7CFBD3B-0D27-5EA1-BEB7-F6B847520DC6
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics: WindowsFoundation.IID {
    .init(Data1: 0x78323EFF, Data2: 0xD543, Data3: 0x551D, Data4: ( 0xB2,0xC7,0x94,0xE9,0x3A,0x16,0x06,0x5B ))// 78323EFF-D543-551D-B2C7-94E93A16065B
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo: WindowsFoundation.IID {
    .init(Data1: 0x25BB17FB, Data2: 0x6E15, Data3: 0x514E, Data4: ( 0xB2,0x78,0x19,0x75,0x37,0xA4,0xD9,0x90 ))// 25BB17FB-6E15-514E-B278-197537A4D990
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory: WindowsFoundation.IID {
    .init(Data1: 0xC514B6FF, Data2: 0xF6ED, Data3: 0x572E, Data4: ( 0x83,0x92,0x3E,0xA1,0x7B,0xC7,0xD4,0xC4 ))// C514B6FF-F6ED-572E-8392-3EA17BC7D4C4
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides: WindowsFoundation.IID {
    .init(Data1: 0x3D6AF190, Data2: 0x5A56, Data3: 0x513D, Data4: ( 0xAF,0xF9,0x63,0x19,0x25,0xD0,0xFA,0x43 ))// 3D6AF190-5A56-513D-AFF9-631925D0FA43
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames: WindowsFoundation.IID {
    .init(Data1: 0xAA08DC4C, Data2: 0x0B03, Data3: 0x5C0A, Data4: ( 0xB0,0x84,0xD9,0x5D,0x27,0x2B,0x2F,0x0D ))// AA08DC4C-0B03-5C0A-B084-D95D272B2F0D
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics: WindowsFoundation.IID {
    .init(Data1: 0x411A09B0, Data2: 0x9AB4, Data3: 0x54B9, Data4: ( 0x99,0xB9,0x54,0xF9,0x55,0xA6,0x75,0x4E ))// 411A09B0-9AB4-54B9-99B9-54F955A6754E
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame: WindowsFoundation.IID {
    .init(Data1: 0xC5A9F65B, Data2: 0xFC69, Data3: 0x5A88, Data4: ( 0xA7,0x97,0x34,0xF4,0x6D,0x76,0x13,0x81 ))// C5A9F65B-FC69-5A88-A797-34F46D761381
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory: WindowsFoundation.IID {
    .init(Data1: 0xDC59DA6E, Data2: 0x82B9, Data3: 0x55F7, Data4: ( 0xA3,0x58,0xBA,0x2A,0x07,0x66,0x5A,0xA9 ))// DC59DA6E-82B9-55F7-A358-BA2A07665AA9
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics: WindowsFoundation.IID {
    .init(Data1: 0x39E59CEB, Data2: 0x2859, Data3: 0x5A5F, Data4: ( 0xAC,0xD8,0xBC,0x49,0x1D,0x49,0xC4,0xB6 ))// 39E59CEB-2859-5A5F-ACD8-BC491D49C4B6
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition: WindowsFoundation.IID {
    .init(Data1: 0x321BCD80, Data2: 0x157C, Data3: 0x5E10, Data4: ( 0xB0,0xFE,0x64,0x40,0xBD,0x92,0x52,0x9A ))// 321BCD80-157C-5E10-B0FE-6440BD92529A
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics: WindowsFoundation.IID {
    .init(Data1: 0x47E01752, Data2: 0x5264, Data3: 0x5FB1, Data4: ( 0x89,0x46,0xAB,0x49,0xFE,0x6A,0xF8,0xFD ))// 47E01752-5264-5FB1-8946-AB49FE6AF8FD
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimation: WindowsFoundation.IID {
    .init(Data1: 0xA0737CC4, Data2: 0x2EAB, Data3: 0x5C13, Data4: ( 0xA5,0xD7,0x78,0x36,0x1D,0xF1,0x00,0x0E ))// A0737CC4-2EAB-5C13-A5D7-78361DF1000E
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics: WindowsFoundation.IID {
    .init(Data1: 0x71CFB43B, Data2: 0xBADA, Data3: 0x554B, Data4: ( 0x8F,0xCA,0xB5,0x58,0xD6,0x23,0xBB,0xC0 ))// 71CFB43B-BADA-554B-8FCA-B558D623BBC0
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames: WindowsFoundation.IID {
    .init(Data1: 0xBDD63992, Data2: 0xDF13, Data3: 0x5514, Data4: ( 0x86,0x11,0x49,0x52,0xF7,0x22,0xF6,0xD0 ))// BDD63992-DF13-5514-8611-4952F722F6D0
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics: WindowsFoundation.IID {
    .init(Data1: 0x04152B3B, Data2: 0xF0DA, Data3: 0x5B28, Data4: ( 0x87,0x7D,0x9A,0xC9,0x6D,0x33,0x4A,0x77 ))// 04152B3B-F0DA-5B28-877D-9AC96D334A77
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame: WindowsFoundation.IID {
    .init(Data1: 0x59D5C07D, Data2: 0xA3A7, Data3: 0x5450, Data4: ( 0x9D,0xFB,0x4B,0x7E,0x77,0xD5,0x8F,0x93 ))// 59D5C07D-A3A7-5450-9DFB-4B7E77D58F93
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory: WindowsFoundation.IID {
    .init(Data1: 0xC52EE293, Data2: 0xF10E, Data3: 0x5252, Data4: ( 0xBC,0x08,0xA2,0x86,0x59,0x74,0x0F,0x0E ))// C52EE293-F10E-5252-BC08-A28659740F0E
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics: WindowsFoundation.IID {
    .init(Data1: 0x96CD72FD, Data2: 0xD834, Data3: 0x5B23, Data4: ( 0x9A,0x17,0x15,0x48,0x96,0x1D,0xC3,0x48 ))// 96CD72FD-D834-5B23-9A17-1548961DC348
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation: WindowsFoundation.IID {
    .init(Data1: 0xABDD1ACC, Data2: 0x40DF, Data3: 0x595D, Data4: ( 0xBE,0x68,0x03,0x62,0xFE,0x68,0x1B,0x91 ))// ABDD1ACC-40DF-595D-BE68-0362FE681B91
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics: WindowsFoundation.IID {
    .init(Data1: 0x12268B39, Data2: 0xFB7D, Data3: 0x53DA, Data4: ( 0x8C,0xCC,0x59,0x67,0xDC,0x06,0xBC,0xE9 ))// 12268B39-FB7D-53DA-8CCC-5967DC06BCE9
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation: WindowsFoundation.IID {
    .init(Data1: 0x94896D1C, Data2: 0xC938, Data3: 0x5D68, Data4: ( 0x84,0xDA,0x55,0x2B,0xDE,0x81,0x58,0x10 ))// 94896D1C-C938-5D68-84DA-552BDE815810
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics: WindowsFoundation.IID {
    .init(Data1: 0x51A3117E, Data2: 0xC6FA, Data3: 0x5DC5, Data4: ( 0x8D,0xB8,0x73,0xF0,0x60,0x00,0x3A,0xE4 ))// 51A3117E-C6FA-5DC5-8DB8-73F060003AE4
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation: WindowsFoundation.IID {
    .init(Data1: 0x20136388, Data2: 0xB4E4, Data3: 0x5CBB, Data4: ( 0x9C,0xB2,0xDF,0x2E,0xA7,0xE6,0xC4,0x4B ))// 20136388-B4E4-5CBB-9CB2-DF2EA7E6C44B
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics: WindowsFoundation.IID {
    .init(Data1: 0x8C9378A9, Data2: 0xD276, Data3: 0x5A1D, Data4: ( 0x81,0x88,0xF4,0x8F,0x07,0x84,0x0A,0x16 ))// 8C9378A9-D276-5A1D-8188-F48F07840A16
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation: WindowsFoundation.IID {
    .init(Data1: 0x1BB20DD3, Data2: 0x5648, Data3: 0x541A, Data4: ( 0xA0,0xC9,0x37,0xA9,0x55,0xDB,0x10,0xA6 ))// 1BB20DD3-5648-541A-A0C9-37A955DB10A6
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics: WindowsFoundation.IID {
    .init(Data1: 0x3F569F96, Data2: 0x367E, Data3: 0x595C, Data4: ( 0x97,0x32,0x2F,0xB9,0x19,0x38,0x8D,0x84 ))// 3F569F96-367E-595C-9732-2FB919388D84
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition: WindowsFoundation.IID {
    .init(Data1: 0xE1FA6B8A, Data2: 0xADD3, Data3: 0x5299, Data4: ( 0xA0,0x00,0x12,0x1D,0x6D,0xBA,0xCC,0x80 ))// E1FA6B8A-ADD3-5299-A000-121D6DBACC80
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics: WindowsFoundation.IID {
    .init(Data1: 0x538B2114, Data2: 0x415C, Data3: 0x5F99, Data4: ( 0xB7,0x4D,0xA8,0x59,0x66,0xDA,0xCC,0x54 ))// 538B2114-415C-5F99-B74D-A85966DACC54
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPowerEase: WindowsFoundation.IID {
    .init(Data1: 0x372DFAD0, Data2: 0x5177, Data3: 0x5DF9, Data4: ( 0x8E,0x1E,0x92,0x09,0x62,0x46,0x87,0x14 ))// 372DFAD0-5177-5DF9-8E1E-920962468714
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics: WindowsFoundation.IID {
    .init(Data1: 0x8EB72EDB, Data2: 0x3E7E, Data3: 0x5D40, Data4: ( 0x92,0x8B,0x45,0x05,0xD5,0x7C,0x21,0xCE ))// 8EB72EDB-3E7E-5D40-928B-4505D57C21CE
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase: WindowsFoundation.IID {
    .init(Data1: 0xDB85FDA1, Data2: 0x03B7, Data3: 0x57CD, Data4: ( 0xA1,0xEF,0x88,0x55,0xCB,0xF6,0x21,0x91 ))// DB85FDA1-03B7-57CD-A1EF-8855CBF62191
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIQuarticEase: WindowsFoundation.IID {
    .init(Data1: 0x48215273, Data2: 0x05F1, Data3: 0x58AA, Data4: ( 0xBA,0xDE,0x0B,0x71,0xD7,0xBD,0x04,0x84 ))// 48215273-05F1-58AA-BADE-0B71D7BD0484
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIQuinticEase: WindowsFoundation.IID {
    .init(Data1: 0xDC2F05D5, Data2: 0xA3AC, Data3: 0x5DCE, Data4: ( 0x9B,0x85,0x75,0x3A,0x0C,0x80,0x0F,0xC2 ))// DC2F05D5-A3AC-5DCE-9B85-753A0C800FC2
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition: WindowsFoundation.IID {
    .init(Data1: 0x0D5A0874, Data2: 0x1DF5, Data3: 0x5379, Data4: ( 0xB6,0x26,0x74,0x72,0x17,0x59,0x43,0x8A ))// 0D5A0874-1DF5-5379-B626-74721759438A
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper: WindowsFoundation.IID {
    .init(Data1: 0x4643F139, Data2: 0xFFEF, Data3: 0x5C6A, Data4: ( 0x8D,0xE6,0x14,0x2B,0x41,0xCD,0x51,0xA5 ))// 4643F139-FFEF-5C6A-8DE6-142B41CD51A5
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics: WindowsFoundation.IID {
    .init(Data1: 0xC66D4425, Data2: 0x6461, Data3: 0x5189, Data4: ( 0xB1,0x7D,0xCC,0xA0,0xCC,0xA3,0x4C,0xA0 ))// C66D4425-6461-5189-B17D-CCA0CCA34CA0
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation: WindowsFoundation.IID {
    .init(Data1: 0x36F7E025, Data2: 0x23C1, Data3: 0x53DE, Data4: ( 0x8D,0xF9,0x7D,0xC1,0xE9,0xC7,0x88,0xFD ))// 36F7E025-23C1-53DE-8DF9-7DC1E9C788FD
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics: WindowsFoundation.IID {
    .init(Data1: 0xC04118DE, Data2: 0xAFF5, Data3: 0x5FA9, Data4: ( 0xAE,0xE7,0x94,0xA6,0x21,0xC8,0x26,0x18 ))// C04118DE-AFF5-5FA9-AEE7-94A621C82618
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition: WindowsFoundation.IID {
    .init(Data1: 0x7728E3F0, Data2: 0x24B1, Data3: 0x5484, Data4: ( 0x82,0x4A,0xC0,0xB4,0x1C,0x27,0x45,0xD5 ))// 7728E3F0-24B1-5484-824A-C0B41C2745D5
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics: WindowsFoundation.IID {
    .init(Data1: 0xC70A0F9A, Data2: 0x485E, Data3: 0x53BB, Data4: ( 0xAD,0x3C,0x8B,0x41,0xB6,0x78,0x8B,0xF9 ))// C70A0F9A-485E-53BB-AD3C-8B41B6788BF9
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISineEase: WindowsFoundation.IID {
    .init(Data1: 0x6115539B, Data2: 0x663D, Data3: 0x5131, Data4: ( 0xB7,0xC2,0x74,0xBB,0x5F,0xDC,0x6A,0x1D ))// 6115539B-663D-5131-B7C2-74BB5FDC6A1D
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo: WindowsFoundation.IID {
    .init(Data1: 0x53EADE0E, Data2: 0x6B01, Data3: 0x511F, Data4: ( 0xA5,0x63,0x6F,0x57,0x24,0xA6,0xC1,0xC1 ))// 53EADE0E-6B01-511F-A563-6F5724A6C1C1
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics: WindowsFoundation.IID {
    .init(Data1: 0x90BA0C6C, Data2: 0xCD45, Data3: 0x5A6C, Data4: ( 0xBB,0xB2,0x88,0x03,0x7D,0x43,0xCD,0x79 ))// 90BA0C6C-CD45-5A6C-BBB2-88037D43CD79
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame: WindowsFoundation.IID {
    .init(Data1: 0x60C5905F, Data2: 0x4343, Data3: 0x504D, Data4: ( 0xA2,0xC6,0x64,0xB8,0xD9,0x24,0xB4,0x38 ))// 60C5905F-4343-504D-A2C6-64B8D924B438
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics: WindowsFoundation.IID {
    .init(Data1: 0xD89C7062, Data2: 0x753D, Data3: 0x5652, Data4: ( 0xB2,0x15,0xC1,0x95,0xAE,0x2C,0x7A,0x18 ))// D89C7062-753D-5652-B215-C195AE2C7A18
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame: WindowsFoundation.IID {
    .init(Data1: 0xAEA80957, Data2: 0xBB56, Data3: 0x59B6, Data4: ( 0xBB,0x7A,0x62,0x95,0xF9,0x4B,0xC9,0x61 ))// AEA80957-BB56-59B6-BB7A-6295F94BC961
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics: WindowsFoundation.IID {
    .init(Data1: 0xCA88552E, Data2: 0x7237, Data3: 0x51F8, Data4: ( 0xA8,0xCA,0x79,0x95,0x2C,0x77,0x88,0x3A ))// CA88552E-7237-51F8-A8CA-79952C77883A
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame: WindowsFoundation.IID {
    .init(Data1: 0x2B7EB049, Data2: 0x708C, Data3: 0x5220, Data4: ( 0xA1,0x78,0xA2,0x5D,0xBC,0x14,0xFF,0xBE ))// 2B7EB049-708C-5220-A178-A25DBC14FFBE
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics: WindowsFoundation.IID {
    .init(Data1: 0x1E100E36, Data2: 0xBED1, Data3: 0x5060, Data4: ( 0x8D,0xCF,0x0D,0x5B,0x32,0x57,0x5E,0xD1 ))// 1E100E36-BED1-5060-8DCF-0D5B32575ED1
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation: WindowsFoundation.IID {
    .init(Data1: 0xB0DD1490, Data2: 0xF646, Data3: 0x5C18, Data4: ( 0xB3,0xEF,0x02,0xF9,0xB1,0x7F,0x57,0xDF ))// B0DD1490-F646-5C18-B3EF-02F9B17F57DF
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics: WindowsFoundation.IID {
    .init(Data1: 0x32345CDD, Data2: 0x2A3C, Data3: 0x5571, Data4: ( 0xB2,0xEB,0x2F,0xCA,0xBC,0x2E,0x92,0xC6 ))// 32345CDD-2A3C-5571-B2EB-2FCABC2E92C6
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation: WindowsFoundation.IID {
    .init(Data1: 0x79FDFACA, Data2: 0x4245, Data3: 0x53F0, Data4: ( 0xB5,0xC7,0xDA,0x1C,0xE2,0xB0,0xB8,0x51 ))// 79FDFACA-4245-53F0-B5C7-DA1CE2B0B851
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics: WindowsFoundation.IID {
    .init(Data1: 0xE5A73B84, Data2: 0xA4AE, Data3: 0x5C38, Data4: ( 0x84,0xDA,0xF7,0xED,0x30,0xFC,0x9B,0x6E ))// E5A73B84-A4AE-5C38-84DA-F7ED30FC9B6E
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard: WindowsFoundation.IID {
    .init(Data1: 0x04D41BB3, Data2: 0x8721, Data3: 0x519E, Data4: ( 0x8E,0x53,0xFB,0x8B,0x34,0x92,0x03,0x05 ))// 04D41BB3-8721-519E-8E53-FB8B34920305
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics: WindowsFoundation.IID {
    .init(Data1: 0xDD18519B, Data2: 0xD4E4, Data3: 0x597D, Data4: ( 0xA0,0xB7,0x65,0x5E,0xBD,0xD3,0x5E,0xFA ))// DD18519B-D4E4-597D-A0B7-655EBDD35EFA
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo: WindowsFoundation.IID {
    .init(Data1: 0x3ECD2BD1, Data2: 0x9805, Data3: 0x5F51, Data4: ( 0xBB,0x9E,0x05,0x1F,0xEA,0x8D,0xC3,0x55 ))// 3ECD2BD1-9805-5F51-BB9E-051FEA8DC355
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation: WindowsFoundation.IID {
    .init(Data1: 0xF095D058, Data2: 0xBC9E, Data3: 0x58EE, Data4: ( 0x88,0x77,0xE0,0x84,0x72,0x3B,0x43,0x33 ))// F095D058-BC9E-58EE-8877-E084723B4333
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics: WindowsFoundation.IID {
    .init(Data1: 0x18A7A588, Data2: 0xB9A2, Data3: 0x573B, Data4: ( 0x8E,0x2B,0x38,0x04,0x8C,0x46,0x35,0xA7 ))// 18A7A588-B9A2-573B-8E2B-38048C4635A7
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation: WindowsFoundation.IID {
    .init(Data1: 0x09DE03D7, Data2: 0x4B8A, Data3: 0x55E1, Data4: ( 0xAF,0xAD,0x5F,0x60,0x59,0x87,0x33,0xEA ))// 09DE03D7-4B8A-55E1-AFAD-5F60598733EA
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics: WindowsFoundation.IID {
    .init(Data1: 0xF3308304, Data2: 0x4F09, Data3: 0x54D7, Data4: ( 0xA4,0xD5,0xCA,0x55,0x8B,0xBF,0xE2,0x6F ))// F3308304-4F09-54D7-A4D5-CA558BBFE26F
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimeline: WindowsFoundation.IID {
    .init(Data1: 0xD0F9B330, Data2: 0xCC2A, Data3: 0x5B05, Data4: ( 0x97,0x86,0x2D,0xA4,0xC6,0x58,0x45,0x81 ))// D0F9B330-CC2A-5B05-9786-2DA4C6584581
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimelineFactory: WindowsFoundation.IID {
    .init(Data1: 0x6A635732, Data2: 0xA827, Data3: 0x5398, Data4: ( 0x9F,0xC8,0xDF,0xBC,0x3B,0x97,0xE3,0xC1 ))// 6A635732-A827-5398-9FC8-DFBC3B97E3C1
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimelineStatics: WindowsFoundation.IID {
    .init(Data1: 0x778B8471, Data2: 0xC831, Data3: 0x503A, Data4: ( 0x87,0x48,0xFE,0x6B,0xBC,0x71,0x53,0xB7 ))// 778B8471-C831-503A-8748-FE6BBC7153B7
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition: WindowsFoundation.IID {
    .init(Data1: 0xE5B71956, Data2: 0x8E44, Data3: 0x5A38, Data4: ( 0xB4,0x1E,0x27,0x4D,0x70,0x61,0x02,0xBF ))// E5B71956-8E44-5A38-B41E-274D706102BF
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransitionFactory: WindowsFoundation.IID {
    .init(Data1: 0xB7023E3B, Data2: 0xBCD3, Data3: 0x50EC, Data4: ( 0xAA,0xCF,0x8C,0xFC,0xEC,0xE2,0x5F,0x17 ))// B7023E3B-BCD3-50EC-AACF-8CFCECE25F17
}

public enum __ABI_Microsoft_UI_Xaml_Media_Animation {
    public class IAddDeleteThemeTransition: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIAddDeleteThemeTransition }

    }

    public class IBackEase: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBackEase }

        internal func get_AmplitudeImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBackEase.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Amplitude(pThis, &value))
            }
            return value
        }

        internal func put_AmplitudeImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBackEase.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Amplitude(pThis, value))
            }
        }

    }

    public class IBackEaseStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics }

        internal func get_AmplitudePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBackEaseStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_AmplitudeProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IBasicConnectedAnimationConfiguration: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfiguration }

    }

    public class IBasicConnectedAnimationConfigurationFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactory }

        internal func CreateInstanceImpl(_ baseInterface: UnsealedWinRTClassWrapper<WinUI.BasicConnectedAnimationConfiguration.Composable>?, _ innerInterface: inout WindowsFoundation.IInspectable?) throws -> IBasicConnectedAnimationConfiguration {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _baseInterface = baseInterface?.toIInspectableABI { $0 }
                let (_innerInterface) = try ComPtrs.initialize { _innerInterfaceAbi in
                    _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBasicConnectedAnimationConfigurationFactory.self) { pThis in
                        try CHECKED(pThis.pointee.lpVtbl.pointee.CreateInstance(pThis, _baseInterface, &_innerInterfaceAbi, &valueAbi))
                    }
                }
                innerInterface = WindowsFoundation.IInspectable(_innerInterface!)
            }
            return IBasicConnectedAnimationConfiguration(value!)
        }

    }

    public class IBeginStoryboard: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard }

        internal func get_StoryboardImpl() throws -> WinUI.Storyboard? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Storyboard(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_StoryboardImpl(_ value: WinUI.Storyboard?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboard.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Storyboard(pThis, RawPointer(value)))
            }
        }

    }

    public class IBeginStoryboardStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics }

        internal func get_StoryboardPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBeginStoryboardStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_StoryboardProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IBounceEase: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBounceEase }

        internal func get_BouncesImpl() throws -> Int32 {
            var value: INT32 = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBounceEase.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Bounces(pThis, &value))
            }
            return value
        }

        internal func put_BouncesImpl(_ value: Int32) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBounceEase.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Bounces(pThis, value))
            }
        }

        internal func get_BouncinessImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBounceEase.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Bounciness(pThis, &value))
            }
            return value
        }

        internal func put_BouncinessImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBounceEase.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Bounciness(pThis, value))
            }
        }

    }

    public class IBounceEaseStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics }

        internal func get_BouncesPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_BouncesProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_BouncinessPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIBounceEaseStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_BouncinessProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class ICircleEase: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CICircleEase }

    }

    public class IColorAnimation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimation }

        internal func get_FromImpl() throws -> UWP.Color? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_From(pThis, &valueAbi))
                }
            }
            return WinUI.__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorWrapper.unwrapFrom(abi: value)
        }

        internal func put_FromImpl(_ value: UWP.Color?) throws {
            let valueWrapper = WinUI.__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_From(pThis, _value))
            }
        }

        internal func get_ToImpl() throws -> UWP.Color? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_To(pThis, &valueAbi))
                }
            }
            return WinUI.__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorWrapper.unwrapFrom(abi: value)
        }

        internal func put_ToImpl(_ value: UWP.Color?) throws {
            let valueWrapper = WinUI.__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_To(pThis, _value))
            }
        }

        internal func get_ByImpl() throws -> UWP.Color? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_By(pThis, &valueAbi))
                }
            }
            return WinUI.__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorWrapper.unwrapFrom(abi: value)
        }

        internal func put_ByImpl(_ value: UWP.Color?) throws {
            let valueWrapper = WinUI.__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_By(pThis, _value))
            }
        }

        internal func get_EasingFunctionImpl() throws -> WinUI.EasingFunctionBase? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EasingFunction(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_EasingFunctionImpl(_ value: WinUI.EasingFunctionBase?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_EasingFunction(pThis, RawPointer(value)))
            }
        }

        internal func get_EnableDependentAnimationImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_EnableDependentAnimation(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_EnableDependentAnimationImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_EnableDependentAnimation(pThis, .init(from: value)))
            }
        }

    }

    public class IColorAnimationStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics }

        internal func get_FromPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ToPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ToProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ByPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ByProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_EasingFunctionPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EasingFunctionProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_EnableDependentAnimationPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EnableDependentAnimationProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IColorAnimationUsingKeyFrames: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames }

        internal func get_KeyFramesImpl() throws -> WinUI.ColorKeyFrameCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_KeyFrames(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_EnableDependentAnimationImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_EnableDependentAnimation(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_EnableDependentAnimationImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFrames.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_EnableDependentAnimation(pThis, .init(from: value)))
            }
        }

    }

    public class IColorAnimationUsingKeyFramesStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics }

        internal func get_EnableDependentAnimationPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorAnimationUsingKeyFramesStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EnableDependentAnimationProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IColorKeyFrame: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame }

        internal func get_ValueImpl() throws -> UWP.Color {
            var value: __x_ABI_CWindows_CUI_CColor = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Value(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_ValueImpl(_ value: UWP.Color) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Value(pThis, .from(swift: value)))
            }
        }

        internal func get_KeyTimeImpl() throws -> WinUI.KeyTime {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CKeyTime = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_KeyTime(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_KeyTimeImpl(_ value: WinUI.KeyTime) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrame.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_KeyTime(pThis, .from(swift: value)))
            }
        }

    }

    public class IColorKeyFrameFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory }

        internal func CreateInstanceImpl(_ baseInterface: UnsealedWinRTClassWrapper<WinUI.ColorKeyFrame.Composable>?, _ innerInterface: inout WindowsFoundation.IInspectable?) throws -> IColorKeyFrame {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _baseInterface = baseInterface?.toIInspectableABI { $0 }
                let (_innerInterface) = try ComPtrs.initialize { _innerInterfaceAbi in
                    _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameFactory.self) { pThis in
                        try CHECKED(pThis.pointee.lpVtbl.pointee.CreateInstance(pThis, _baseInterface, &_innerInterfaceAbi, &valueAbi))
                    }
                }
                innerInterface = WindowsFoundation.IInspectable(_innerInterface!)
            }
            return IColorKeyFrame(value!)
        }

    }

    public class IColorKeyFrameStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics }

        internal func get_ValuePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ValueProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_KeyTimePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIColorKeyFrameStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_KeyTimeProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class ICommonNavigationTransitionInfo: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo }

        internal func get_IsStaggeringEnabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsStaggeringEnabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsStaggeringEnabledImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsStaggeringEnabled(pThis, .init(from: value)))
            }
        }

    }

    public class ICommonNavigationTransitionInfoStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics }

        internal func get_IsStaggeringEnabledPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsStaggeringEnabledProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_IsStaggerElementPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsStaggerElementProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func GetIsStaggerElementImpl(_ element: WinUI.UIElement?) throws -> Bool {
            var result: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.GetIsStaggerElement(pThis, RawPointer(element), &result))
            }
            return .init(from: result)
        }

        internal func SetIsStaggerElementImpl(_ element: WinUI.UIElement?, _ value: Bool) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CICommonNavigationTransitionInfoStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SetIsStaggerElement(pThis, RawPointer(element), .init(from: value)))
            }
        }

    }

    public class IConnectedAnimation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation }

        internal func get_IsScaleAnimationEnabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsScaleAnimationEnabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsScaleAnimationEnabledImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsScaleAnimationEnabled(pThis, .init(from: value)))
            }
        }

        internal func get_ConfigurationImpl() throws -> WinUI.ConnectedAnimationConfiguration? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Configuration(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_ConfigurationImpl(_ value: WinUI.ConnectedAnimationConfiguration?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Configuration(pThis, RawPointer(value)))
            }
        }

        internal func add_CompletedImpl(_ handler: TypedEventHandler<WinUI.ConnectedAnimation?, Any?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = WinUI.__x_ABI_C__FITypedEventHandler_2___x_ABI_CMicrosoft__CUI__CXaml__CMedia__CAnimation__CConnectedAnimation_IInspectableWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_Completed(pThis, _handler, &token))
            }
            return token
        }

        internal func remove_CompletedImpl(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_Completed(pThis, token))
            }
        }

        internal func TryStartImpl(_ destination: WinUI.UIElement?) throws -> Bool {
            var result: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryStart(pThis, RawPointer(destination), &result))
            }
            return .init(from: result)
        }

        internal func TryStartWithCoordinatedElementsImpl(_ destination: WinUI.UIElement?, _ coordinatedElements: WindowsFoundation.AnyIIterable<WinUI.UIElement?>?) throws -> Bool {
            var result: boolean = 0
            let coordinatedElementsWrapper = WinUI.__x_ABI_C__FIIterable_1___x_ABI_CMicrosoft__CUI__CXaml__CUIElementWrapper(coordinatedElements)
            let _coordinatedElements = try! coordinatedElementsWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.TryStartWithCoordinatedElements(pThis, RawPointer(destination), _coordinatedElements, &result))
            }
            return .init(from: result)
        }

        internal func CancelImpl() throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Cancel(pThis))
            }
        }

        internal func SetAnimationComponentImpl(_ component: WinUI.ConnectedAnimationComponent, _ animation: WinAppSDK.AnyICompositionAnimationBase?) throws {
            let animationWrapper = __ABI_Microsoft_UI_Composition.ICompositionAnimationBaseWrapper(animation)
            let _animation = try! animationWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SetAnimationComponent(pThis, component, _animation))
            }
        }

    }

    public class IConnectedAnimationConfiguration: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfiguration }

    }

    public class IConnectedAnimationConfigurationFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationConfigurationFactory }

    }

    public class IConnectedAnimationService: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService }

        internal func get_DefaultDurationImpl() throws -> WindowsFoundation.TimeSpan {
            var value: __x_ABI_CWindows_CFoundation_CTimeSpan = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DefaultDuration(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_DefaultDurationImpl(_ value: WindowsFoundation.TimeSpan) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_DefaultDuration(pThis, .from(swift: value)))
            }
        }

        internal func get_DefaultEasingFunctionImpl() throws -> WinAppSDK.CompositionEasingFunction? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_DefaultEasingFunction(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_DefaultEasingFunctionImpl(_ value: WinAppSDK.CompositionEasingFunction?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_DefaultEasingFunction(pThis, RawPointer(value)))
            }
        }

        internal func PrepareToAnimateImpl(_ key: String, _ source: WinUI.UIElement?) throws -> WinUI.ConnectedAnimation? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let _key = try! HString(key)
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.PrepareToAnimate(pThis, _key.get(), RawPointer(source), &resultAbi))
                }
            }
            return .from(abi: result)
        }

        internal func GetAnimationImpl(_ key: String) throws -> WinUI.ConnectedAnimation? {
            let (result) = try ComPtrs.initialize { resultAbi in
                let _key = try! HString(key)
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationService.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetAnimation(pThis, _key.get(), &resultAbi))
                }
            }
            return .from(abi: result)
        }

    }

    public class IConnectedAnimationServiceStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStatics }

        internal func GetForCurrentViewImpl() throws -> WinUI.ConnectedAnimationService? {
            let (result) = try ComPtrs.initialize { resultAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIConnectedAnimationServiceStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetForCurrentView(pThis, &resultAbi))
                }
            }
            return .from(abi: result)
        }

    }

    public class IContentThemeTransition: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition }

        internal func get_HorizontalOffsetImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_HorizontalOffset(pThis, &value))
            }
            return value
        }

        internal func put_HorizontalOffsetImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_HorizontalOffset(pThis, value))
            }
        }

        internal func get_VerticalOffsetImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_VerticalOffset(pThis, &value))
            }
            return value
        }

        internal func put_VerticalOffsetImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_VerticalOffset(pThis, value))
            }
        }

    }

    public class IContentThemeTransitionStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics }

        internal func get_HorizontalOffsetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_HorizontalOffsetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_VerticalOffsetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContentThemeTransitionStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_VerticalOffsetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IContinuumNavigationTransitionInfo: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo }

        internal func get_ExitElementImpl() throws -> WinUI.UIElement? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExitElement(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_ExitElementImpl(_ value: WinUI.UIElement?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ExitElement(pThis, RawPointer(value)))
            }
        }

    }

    public class IContinuumNavigationTransitionInfoStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics }

        internal func get_ExitElementPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExitElementProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_IsEntranceElementPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsEntranceElementProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func GetIsEntranceElementImpl(_ element: WinUI.UIElement?) throws -> Bool {
            var result: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.GetIsEntranceElement(pThis, RawPointer(element), &result))
            }
            return .init(from: result)
        }

        internal func SetIsEntranceElementImpl(_ element: WinUI.UIElement?, _ value: Bool) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SetIsEntranceElement(pThis, RawPointer(element), .init(from: value)))
            }
        }

        internal func get_IsExitElementPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsExitElementProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func GetIsExitElementImpl(_ element: WinUI.UIElement?) throws -> Bool {
            var result: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.GetIsExitElement(pThis, RawPointer(element), &result))
            }
            return .init(from: result)
        }

        internal func SetIsExitElementImpl(_ element: WinUI.UIElement?, _ value: Bool) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SetIsExitElement(pThis, RawPointer(element), .init(from: value)))
            }
        }

        internal func get_ExitElementContainerPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExitElementContainerProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func GetExitElementContainerImpl(_ element: WinUI.ListViewBase?) throws -> Bool {
            var result: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.GetExitElementContainer(pThis, RawPointer(element), &result))
            }
            return .init(from: result)
        }

        internal func SetExitElementContainerImpl(_ element: WinUI.ListViewBase?, _ value: Bool) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIContinuumNavigationTransitionInfoStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SetExitElementContainer(pThis, RawPointer(element), .init(from: value)))
            }
        }

    }

    public class ICubicEase: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CICubicEase }

    }

    public class IDirectConnectedAnimationConfiguration: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfiguration }

    }

    public class IDirectConnectedAnimationConfigurationFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactory }

        internal func CreateInstanceImpl(_ baseInterface: UnsealedWinRTClassWrapper<WinUI.DirectConnectedAnimationConfiguration.Composable>?, _ innerInterface: inout WindowsFoundation.IInspectable?) throws -> IDirectConnectedAnimationConfiguration {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _baseInterface = baseInterface?.toIInspectableABI { $0 }
                let (_innerInterface) = try ComPtrs.initialize { _innerInterfaceAbi in
                    _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDirectConnectedAnimationConfigurationFactory.self) { pThis in
                        try CHECKED(pThis.pointee.lpVtbl.pointee.CreateInstance(pThis, _baseInterface, &_innerInterfaceAbi, &valueAbi))
                    }
                }
                innerInterface = WindowsFoundation.IInspectable(_innerInterface!)
            }
            return IDirectConnectedAnimationConfiguration(value!)
        }

    }

    public class IDiscreteColorKeyFrame: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDiscreteColorKeyFrame }

    }

    public class IDiscreteDoubleKeyFrame: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDiscreteDoubleKeyFrame }

    }

    public class IDiscreteObjectKeyFrame: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDiscreteObjectKeyFrame }

    }

    public class IDiscretePointKeyFrame: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDiscretePointKeyFrame }

    }

    public class IDoubleAnimation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation }

        internal func get_FromImpl() throws -> Double? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_From(pThis, &valueAbi))
                }
            }
            return WinUI.__x_ABI_C__FIReference_1_doubleWrapper.unwrapFrom(abi: value)
        }

        internal func put_FromImpl(_ value: Double?) throws {
            let valueWrapper = WinUI.__x_ABI_C__FIReference_1_doubleWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_From(pThis, _value))
            }
        }

        internal func get_ToImpl() throws -> Double? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_To(pThis, &valueAbi))
                }
            }
            return WinUI.__x_ABI_C__FIReference_1_doubleWrapper.unwrapFrom(abi: value)
        }

        internal func put_ToImpl(_ value: Double?) throws {
            let valueWrapper = WinUI.__x_ABI_C__FIReference_1_doubleWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_To(pThis, _value))
            }
        }

        internal func get_ByImpl() throws -> Double? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_By(pThis, &valueAbi))
                }
            }
            return WinUI.__x_ABI_C__FIReference_1_doubleWrapper.unwrapFrom(abi: value)
        }

        internal func put_ByImpl(_ value: Double?) throws {
            let valueWrapper = WinUI.__x_ABI_C__FIReference_1_doubleWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_By(pThis, _value))
            }
        }

        internal func get_EasingFunctionImpl() throws -> WinUI.EasingFunctionBase? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EasingFunction(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_EasingFunctionImpl(_ value: WinUI.EasingFunctionBase?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_EasingFunction(pThis, RawPointer(value)))
            }
        }

        internal func get_EnableDependentAnimationImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_EnableDependentAnimation(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_EnableDependentAnimationImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_EnableDependentAnimation(pThis, .init(from: value)))
            }
        }

    }

    public class IDoubleAnimationStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics }

        internal func get_FromPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ToPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ToProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ByPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ByProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_EasingFunctionPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EasingFunctionProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_EnableDependentAnimationPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EnableDependentAnimationProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IDoubleAnimationUsingKeyFrames: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames }

        internal func get_KeyFramesImpl() throws -> WinUI.DoubleKeyFrameCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_KeyFrames(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_EnableDependentAnimationImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_EnableDependentAnimation(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_EnableDependentAnimationImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFrames.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_EnableDependentAnimation(pThis, .init(from: value)))
            }
        }

    }

    public class IDoubleAnimationUsingKeyFramesStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics }

        internal func get_EnableDependentAnimationPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleAnimationUsingKeyFramesStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EnableDependentAnimationProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IDoubleKeyFrame: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame }

        internal func get_ValueImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Value(pThis, &value))
            }
            return value
        }

        internal func put_ValueImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Value(pThis, value))
            }
        }

        internal func get_KeyTimeImpl() throws -> WinUI.KeyTime {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CKeyTime = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_KeyTime(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_KeyTimeImpl(_ value: WinUI.KeyTime) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrame.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_KeyTime(pThis, .from(swift: value)))
            }
        }

    }

    public class IDoubleKeyFrameFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory }

        internal func CreateInstanceImpl(_ baseInterface: UnsealedWinRTClassWrapper<WinUI.DoubleKeyFrame.Composable>?, _ innerInterface: inout WindowsFoundation.IInspectable?) throws -> IDoubleKeyFrame {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _baseInterface = baseInterface?.toIInspectableABI { $0 }
                let (_innerInterface) = try ComPtrs.initialize { _innerInterfaceAbi in
                    _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameFactory.self) { pThis in
                        try CHECKED(pThis.pointee.lpVtbl.pointee.CreateInstance(pThis, _baseInterface, &_innerInterfaceAbi, &valueAbi))
                    }
                }
                innerInterface = WindowsFoundation.IInspectable(_innerInterface!)
            }
            return IDoubleKeyFrame(value!)
        }

    }

    public class IDoubleKeyFrameStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics }

        internal func get_ValuePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ValueProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_KeyTimePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDoubleKeyFrameStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_KeyTimeProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IDragItemThemeAnimation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation }

        internal func get_TargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_TargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_TargetName(pThis, _value.get()))
            }
        }

    }

    public class IDragItemThemeAnimationStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics }

        internal func get_TargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDragItemThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IDragOverThemeAnimation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation }

        internal func get_TargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_TargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_TargetName(pThis, _value.get()))
            }
        }

        internal func get_ToOffsetImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ToOffset(pThis, &value))
            }
            return value
        }

        internal func put_ToOffsetImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ToOffset(pThis, value))
            }
        }

        internal func get_DirectionImpl() throws -> WinUI.AnimationDirection {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CAnimationDirection = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Direction(pThis, &value))
            }
            return value
        }

        internal func put_DirectionImpl(_ value: WinUI.AnimationDirection) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Direction(pThis, value))
            }
        }

    }

    public class IDragOverThemeAnimationStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics }

        internal func get_TargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ToOffsetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ToOffsetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_DirectionPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDragOverThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_DirectionProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IDrillInNavigationTransitionInfo: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillInNavigationTransitionInfo }

    }

    public class IDrillInThemeAnimation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation }

        internal func get_EntranceTargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_EntranceTargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_EntranceTargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_EntranceTargetName(pThis, _value.get()))
            }
        }

        internal func get_EntranceTargetImpl() throws -> WinUI.DependencyObject? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EntranceTarget(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_EntranceTargetImpl(_ value: WinUI.DependencyObject?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_EntranceTarget(pThis, RawPointer(value)))
            }
        }

        internal func get_ExitTargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExitTargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_ExitTargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ExitTargetName(pThis, _value.get()))
            }
        }

        internal func get_ExitTargetImpl() throws -> WinUI.DependencyObject? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExitTarget(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_ExitTargetImpl(_ value: WinUI.DependencyObject?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ExitTarget(pThis, RawPointer(value)))
            }
        }

    }

    public class IDrillInThemeAnimationStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics }

        internal func get_EntranceTargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EntranceTargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_EntranceTargetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EntranceTargetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ExitTargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExitTargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ExitTargetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillInThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExitTargetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IDrillOutThemeAnimation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation }

        internal func get_EntranceTargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_EntranceTargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_EntranceTargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_EntranceTargetName(pThis, _value.get()))
            }
        }

        internal func get_EntranceTargetImpl() throws -> WinUI.DependencyObject? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EntranceTarget(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_EntranceTargetImpl(_ value: WinUI.DependencyObject?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_EntranceTarget(pThis, RawPointer(value)))
            }
        }

        internal func get_ExitTargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExitTargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_ExitTargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ExitTargetName(pThis, _value.get()))
            }
        }

        internal func get_ExitTargetImpl() throws -> WinUI.DependencyObject? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExitTarget(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_ExitTargetImpl(_ value: WinUI.DependencyObject?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ExitTarget(pThis, RawPointer(value)))
            }
        }

    }

    public class IDrillOutThemeAnimationStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics }

        internal func get_EntranceTargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EntranceTargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_EntranceTargetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EntranceTargetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ExitTargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExitTargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ExitTargetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDrillOutThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExitTargetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IDropTargetItemThemeAnimation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation }

        internal func get_TargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_TargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_TargetName(pThis, _value.get()))
            }
        }

    }

    public class IDropTargetItemThemeAnimationStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics }

        internal func get_TargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIDropTargetItemThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IEasingColorKeyFrame: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame }

        internal func get_EasingFunctionImpl() throws -> WinUI.EasingFunctionBase? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EasingFunction(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_EasingFunctionImpl(_ value: WinUI.EasingFunctionBase?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrame.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_EasingFunction(pThis, RawPointer(value)))
            }
        }

    }

    public class IEasingColorKeyFrameStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics }

        internal func get_EasingFunctionPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingColorKeyFrameStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EasingFunctionProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IEasingDoubleKeyFrame: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame }

        internal func get_EasingFunctionImpl() throws -> WinUI.EasingFunctionBase? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EasingFunction(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_EasingFunctionImpl(_ value: WinUI.EasingFunctionBase?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrame.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_EasingFunction(pThis, RawPointer(value)))
            }
        }

    }

    public class IEasingDoubleKeyFrameStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics }

        internal func get_EasingFunctionPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingDoubleKeyFrameStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EasingFunctionProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IEasingFunctionBase: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase }

        internal func get_EasingModeImpl() throws -> WinUI.EasingMode {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CEasingMode = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_EasingMode(pThis, &value))
            }
            return value
        }

        internal func put_EasingModeImpl(_ value: WinUI.EasingMode) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_EasingMode(pThis, value))
            }
        }

        internal func EaseImpl(_ normalizedTime: Double) throws -> Double {
            var result: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Ease(pThis, normalizedTime, &result))
            }
            return result
        }

    }

    public class IEasingFunctionBaseFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseFactory }

    }

    public class IEasingFunctionBaseStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics }

        internal func get_EasingModePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBaseStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EasingModeProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IEasingPointKeyFrame: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame }

        internal func get_EasingFunctionImpl() throws -> WinUI.EasingFunctionBase? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EasingFunction(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_EasingFunctionImpl(_ value: WinUI.EasingFunctionBase?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrame.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_EasingFunction(pThis, RawPointer(value)))
            }
        }

    }

    public class IEasingPointKeyFrameStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics }

        internal func get_EasingFunctionPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEasingPointKeyFrameStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EasingFunctionProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IEdgeUIThemeTransition: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition }

        internal func get_EdgeImpl() throws -> WinUI.EdgeTransitionLocation {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CEdgeTransitionLocation = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Edge(pThis, &value))
            }
            return value
        }

        internal func put_EdgeImpl(_ value: WinUI.EdgeTransitionLocation) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Edge(pThis, value))
            }
        }

    }

    public class IEdgeUIThemeTransitionStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics }

        internal func get_EdgePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEdgeUIThemeTransitionStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EdgeProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IElasticEase: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIElasticEase }

        internal func get_OscillationsImpl() throws -> Int32 {
            var value: INT32 = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIElasticEase.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Oscillations(pThis, &value))
            }
            return value
        }

        internal func put_OscillationsImpl(_ value: Int32) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIElasticEase.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Oscillations(pThis, value))
            }
        }

        internal func get_SpringinessImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIElasticEase.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Springiness(pThis, &value))
            }
            return value
        }

        internal func put_SpringinessImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIElasticEase.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Springiness(pThis, value))
            }
        }

    }

    public class IElasticEaseStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics }

        internal func get_OscillationsPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_OscillationsProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_SpringinessPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIElasticEaseStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_SpringinessProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IEntranceNavigationTransitionInfo: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfo }

    }

    public class IEntranceNavigationTransitionInfoStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics }

        internal func get_IsTargetElementPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsTargetElementProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func GetIsTargetElementImpl(_ element: WinUI.UIElement?) throws -> Bool {
            var result: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.GetIsTargetElement(pThis, RawPointer(element), &result))
            }
            return .init(from: result)
        }

        internal func SetIsTargetElementImpl(_ element: WinUI.UIElement?, _ value: Bool) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEntranceNavigationTransitionInfoStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SetIsTargetElement(pThis, RawPointer(element), .init(from: value)))
            }
        }

    }

    public class IEntranceThemeTransition: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition }

        internal func get_FromHorizontalOffsetImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromHorizontalOffset(pThis, &value))
            }
            return value
        }

        internal func put_FromHorizontalOffsetImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_FromHorizontalOffset(pThis, value))
            }
        }

        internal func get_FromVerticalOffsetImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromVerticalOffset(pThis, &value))
            }
            return value
        }

        internal func put_FromVerticalOffsetImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_FromVerticalOffset(pThis, value))
            }
        }

        internal func get_IsStaggeringEnabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsStaggeringEnabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsStaggeringEnabledImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsStaggeringEnabled(pThis, .init(from: value)))
            }
        }

    }

    public class IEntranceThemeTransitionStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics }

        internal func get_FromHorizontalOffsetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromHorizontalOffsetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_FromVerticalOffsetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromVerticalOffsetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_IsStaggeringEnabledPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIEntranceThemeTransitionStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsStaggeringEnabledProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IExponentialEase: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIExponentialEase }

        internal func get_ExponentImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIExponentialEase.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Exponent(pThis, &value))
            }
            return value
        }

        internal func put_ExponentImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIExponentialEase.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Exponent(pThis, value))
            }
        }

    }

    public class IExponentialEaseStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics }

        internal func get_ExponentPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIExponentialEaseStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ExponentProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IFadeInThemeAnimation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation }

        internal func get_TargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_TargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_TargetName(pThis, _value.get()))
            }
        }

    }

    public class IFadeInThemeAnimationStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics }

        internal func get_TargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIFadeInThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IFadeOutThemeAnimation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation }

        internal func get_TargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_TargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_TargetName(pThis, _value.get()))
            }
        }

    }

    public class IFadeOutThemeAnimationStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics }

        internal func get_TargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIFadeOutThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IGravityConnectedAnimationConfiguration: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration }

        internal func get_IsShadowEnabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsShadowEnabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsShadowEnabledImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfiguration.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsShadowEnabled(pThis, .init(from: value)))
            }
        }

    }

    public class IGravityConnectedAnimationConfigurationFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactory }

        internal func CreateInstanceImpl(_ baseInterface: UnsealedWinRTClassWrapper<WinUI.GravityConnectedAnimationConfiguration.Composable>?, _ innerInterface: inout WindowsFoundation.IInspectable?) throws -> IGravityConnectedAnimationConfiguration {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _baseInterface = baseInterface?.toIInspectableABI { $0 }
                let (_innerInterface) = try ComPtrs.initialize { _innerInterfaceAbi in
                    _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIGravityConnectedAnimationConfigurationFactory.self) { pThis in
                        try CHECKED(pThis.pointee.lpVtbl.pointee.CreateInstance(pThis, _baseInterface, &_innerInterfaceAbi, &valueAbi))
                    }
                }
                innerInterface = WindowsFoundation.IInspectable(_innerInterface!)
            }
            return IGravityConnectedAnimationConfiguration(value!)
        }

    }

    public class IKeySpline: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIKeySpline }

        internal func get_ControlPoint1Impl() throws -> WindowsFoundation.Point {
            var value: __x_ABI_CWindows_CFoundation_CPoint = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIKeySpline.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ControlPoint1(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_ControlPoint1Impl(_ value: WindowsFoundation.Point) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIKeySpline.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ControlPoint1(pThis, .from(swift: value)))
            }
        }

        internal func get_ControlPoint2Impl() throws -> WindowsFoundation.Point {
            var value: __x_ABI_CWindows_CFoundation_CPoint = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIKeySpline.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ControlPoint2(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_ControlPoint2Impl(_ value: WindowsFoundation.Point) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIKeySpline.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ControlPoint2(pThis, .from(swift: value)))
            }
        }

    }

    public class IKeyTimeHelper: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelper }

    }

    public class IKeyTimeHelperStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics }

        internal func FromTimeSpanImpl(_ timeSpan: WindowsFoundation.TimeSpan) throws -> WinUI.KeyTime {
            var result: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CKeyTime = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIKeyTimeHelperStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.FromTimeSpan(pThis, .from(swift: timeSpan), &result))
            }
            return .from(abi: result)
        }

    }

    public class ILinearColorKeyFrame: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CILinearColorKeyFrame }

    }

    public class ILinearDoubleKeyFrame: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CILinearDoubleKeyFrame }

    }

    public class ILinearPointKeyFrame: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CILinearPointKeyFrame }

    }

    public class INavigationThemeTransition: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition }

        internal func get_DefaultNavigationTransitionInfoImpl() throws -> WinUI.NavigationTransitionInfo? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_DefaultNavigationTransitionInfo(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_DefaultNavigationTransitionInfoImpl(_ value: WinUI.NavigationTransitionInfo?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_DefaultNavigationTransitionInfo(pThis, RawPointer(value)))
            }
        }

    }

    public class INavigationThemeTransitionStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics }

        internal func get_DefaultNavigationTransitionInfoPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CINavigationThemeTransitionStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_DefaultNavigationTransitionInfoProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class INavigationTransitionInfo: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfo }

    }

    public class INavigationTransitionInfoFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory }

        internal func CreateInstanceImpl(_ baseInterface: UnsealedWinRTClassWrapper<WinUI.NavigationTransitionInfo.Composable>?, _ innerInterface: inout WindowsFoundation.IInspectable?) throws -> INavigationTransitionInfo {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _baseInterface = baseInterface?.toIInspectableABI { $0 }
                let (_innerInterface) = try ComPtrs.initialize { _innerInterfaceAbi in
                    _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoFactory.self) { pThis in
                        try CHECKED(pThis.pointee.lpVtbl.pointee.CreateInstance(pThis, _baseInterface, &_innerInterfaceAbi, &valueAbi))
                    }
                }
                innerInterface = WindowsFoundation.IInspectable(_innerInterface!)
            }
            return INavigationTransitionInfo(value!)
        }

    }

    public class INavigationTransitionInfoOverrides: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides }

        internal func GetNavigationStateCoreImpl() throws -> String {
            var result: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.GetNavigationStateCore(pThis, &result))
            }
            return .init(from: result)
        }

        internal func SetNavigationStateCoreImpl(_ navigationState: String) throws {
            let _navigationState = try! HString(navigationState)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SetNavigationStateCore(pThis, _navigationState.get()))
            }
        }

    }

    public class IObjectAnimationUsingKeyFrames: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames }

        internal func get_KeyFramesImpl() throws -> WinUI.ObjectKeyFrameCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_KeyFrames(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_EnableDependentAnimationImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_EnableDependentAnimation(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_EnableDependentAnimationImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFrames.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_EnableDependentAnimation(pThis, .init(from: value)))
            }
        }

    }

    public class IObjectAnimationUsingKeyFramesStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics }

        internal func get_EnableDependentAnimationPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIObjectAnimationUsingKeyFramesStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EnableDependentAnimationProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IObjectKeyFrame: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame }

        internal func get_ValueImpl() throws -> Any? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Value(pThis, &valueAbi))
                }
            }
            return __ABI_.AnyWrapper.unwrapFrom(abi: value)
        }

        internal func put_ValueImpl(_ value: Any?) throws {
            let valueWrapper = __ABI_.AnyWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Value(pThis, _value))
            }
        }

        internal func get_KeyTimeImpl() throws -> WinUI.KeyTime {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CKeyTime = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_KeyTime(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_KeyTimeImpl(_ value: WinUI.KeyTime) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrame.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_KeyTime(pThis, .from(swift: value)))
            }
        }

    }

    public class IObjectKeyFrameFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory }

        internal func CreateInstanceImpl(_ baseInterface: UnsealedWinRTClassWrapper<WinUI.ObjectKeyFrame.Composable>?, _ innerInterface: inout WindowsFoundation.IInspectable?) throws -> IObjectKeyFrame {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _baseInterface = baseInterface?.toIInspectableABI { $0 }
                let (_innerInterface) = try ComPtrs.initialize { _innerInterfaceAbi in
                    _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameFactory.self) { pThis in
                        try CHECKED(pThis.pointee.lpVtbl.pointee.CreateInstance(pThis, _baseInterface, &_innerInterfaceAbi, &valueAbi))
                    }
                }
                innerInterface = WindowsFoundation.IInspectable(_innerInterface!)
            }
            return IObjectKeyFrame(value!)
        }

    }

    public class IObjectKeyFrameStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics }

        internal func get_ValuePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ValueProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_KeyTimePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIObjectKeyFrameStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_KeyTimeProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IPaneThemeTransition: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition }

        internal func get_EdgeImpl() throws -> WinUI.EdgeTransitionLocation {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CEdgeTransitionLocation = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Edge(pThis, &value))
            }
            return value
        }

        internal func put_EdgeImpl(_ value: WinUI.EdgeTransitionLocation) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Edge(pThis, value))
            }
        }

    }

    public class IPaneThemeTransitionStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics }

        internal func get_EdgePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPaneThemeTransitionStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EdgeProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IPointAnimation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimation }

        internal func get_FromImpl() throws -> WindowsFoundation.Point? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_From(pThis, &valueAbi))
                }
            }
            return WinUI.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPointWrapper.unwrapFrom(abi: value)
        }

        internal func put_FromImpl(_ value: WindowsFoundation.Point?) throws {
            let valueWrapper = WinUI.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPointWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_From(pThis, _value))
            }
        }

        internal func get_ToImpl() throws -> WindowsFoundation.Point? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_To(pThis, &valueAbi))
                }
            }
            return WinUI.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPointWrapper.unwrapFrom(abi: value)
        }

        internal func put_ToImpl(_ value: WindowsFoundation.Point?) throws {
            let valueWrapper = WinUI.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPointWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_To(pThis, _value))
            }
        }

        internal func get_ByImpl() throws -> WindowsFoundation.Point? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_By(pThis, &valueAbi))
                }
            }
            return WinUI.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPointWrapper.unwrapFrom(abi: value)
        }

        internal func put_ByImpl(_ value: WindowsFoundation.Point?) throws {
            let valueWrapper = WinUI.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CPointWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_By(pThis, _value))
            }
        }

        internal func get_EasingFunctionImpl() throws -> WinUI.EasingFunctionBase? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EasingFunction(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_EasingFunctionImpl(_ value: WinUI.EasingFunctionBase?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_EasingFunction(pThis, RawPointer(value)))
            }
        }

        internal func get_EnableDependentAnimationImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_EnableDependentAnimation(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_EnableDependentAnimationImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_EnableDependentAnimation(pThis, .init(from: value)))
            }
        }

    }

    public class IPointAnimationStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics }

        internal func get_FromPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ToPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ToProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ByPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ByProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_EasingFunctionPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EasingFunctionProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_EnableDependentAnimationPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EnableDependentAnimationProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IPointAnimationUsingKeyFrames: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames }

        internal func get_KeyFramesImpl() throws -> WinUI.PointKeyFrameCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_KeyFrames(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_EnableDependentAnimationImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_EnableDependentAnimation(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_EnableDependentAnimationImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFrames.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_EnableDependentAnimation(pThis, .init(from: value)))
            }
        }

    }

    public class IPointAnimationUsingKeyFramesStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics }

        internal func get_EnableDependentAnimationPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointAnimationUsingKeyFramesStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EnableDependentAnimationProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IPointKeyFrame: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame }

        internal func get_ValueImpl() throws -> WindowsFoundation.Point {
            var value: __x_ABI_CWindows_CFoundation_CPoint = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Value(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_ValueImpl(_ value: WindowsFoundation.Point) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Value(pThis, .from(swift: value)))
            }
        }

        internal func get_KeyTimeImpl() throws -> WinUI.KeyTime {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CKeyTime = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_KeyTime(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_KeyTimeImpl(_ value: WinUI.KeyTime) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrame.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_KeyTime(pThis, .from(swift: value)))
            }
        }

    }

    public class IPointKeyFrameFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory }

        internal func CreateInstanceImpl(_ baseInterface: UnsealedWinRTClassWrapper<WinUI.PointKeyFrame.Composable>?, _ innerInterface: inout WindowsFoundation.IInspectable?) throws -> IPointKeyFrame {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _baseInterface = baseInterface?.toIInspectableABI { $0 }
                let (_innerInterface) = try ComPtrs.initialize { _innerInterfaceAbi in
                    _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameFactory.self) { pThis in
                        try CHECKED(pThis.pointee.lpVtbl.pointee.CreateInstance(pThis, _baseInterface, &_innerInterfaceAbi, &valueAbi))
                    }
                }
                innerInterface = WindowsFoundation.IInspectable(_innerInterface!)
            }
            return IPointKeyFrame(value!)
        }

    }

    public class IPointKeyFrameStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics }

        internal func get_ValuePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ValueProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_KeyTimePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointKeyFrameStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_KeyTimeProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IPointerDownThemeAnimation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation }

        internal func get_TargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_TargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_TargetName(pThis, _value.get()))
            }
        }

    }

    public class IPointerDownThemeAnimationStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics }

        internal func get_TargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointerDownThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IPointerUpThemeAnimation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation }

        internal func get_TargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_TargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_TargetName(pThis, _value.get()))
            }
        }

    }

    public class IPointerUpThemeAnimationStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics }

        internal func get_TargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPointerUpThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IPopInThemeAnimation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation }

        internal func get_TargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_TargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_TargetName(pThis, _value.get()))
            }
        }

        internal func get_FromHorizontalOffsetImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromHorizontalOffset(pThis, &value))
            }
            return value
        }

        internal func put_FromHorizontalOffsetImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_FromHorizontalOffset(pThis, value))
            }
        }

        internal func get_FromVerticalOffsetImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromVerticalOffset(pThis, &value))
            }
            return value
        }

        internal func put_FromVerticalOffsetImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_FromVerticalOffset(pThis, value))
            }
        }

    }

    public class IPopInThemeAnimationStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics }

        internal func get_TargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_FromHorizontalOffsetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromHorizontalOffsetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_FromVerticalOffsetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopInThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromVerticalOffsetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IPopOutThemeAnimation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation }

        internal func get_TargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_TargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_TargetName(pThis, _value.get()))
            }
        }

    }

    public class IPopOutThemeAnimationStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics }

        internal func get_TargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopOutThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IPopupThemeTransition: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition }

        internal func get_FromHorizontalOffsetImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromHorizontalOffset(pThis, &value))
            }
            return value
        }

        internal func put_FromHorizontalOffsetImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_FromHorizontalOffset(pThis, value))
            }
        }

        internal func get_FromVerticalOffsetImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromVerticalOffset(pThis, &value))
            }
            return value
        }

        internal func put_FromVerticalOffsetImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_FromVerticalOffset(pThis, value))
            }
        }

    }

    public class IPopupThemeTransitionStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics }

        internal func get_FromHorizontalOffsetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromHorizontalOffsetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_FromVerticalOffsetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPopupThemeTransitionStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromVerticalOffsetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IPowerEase: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPowerEase }

        internal func get_PowerImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPowerEase.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Power(pThis, &value))
            }
            return value
        }

        internal func put_PowerImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPowerEase.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Power(pThis, value))
            }
        }

    }

    public class IPowerEaseStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics }

        internal func get_PowerPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIPowerEaseStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_PowerProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IQuadraticEase: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIQuadraticEase }

    }

    public class IQuarticEase: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIQuarticEase }

    }

    public class IQuinticEase: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIQuinticEase }

    }

    public class IReorderThemeTransition: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIReorderThemeTransition }

    }

    public class IRepeatBehaviorHelper: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelper }

    }

    public class IRepeatBehaviorHelperStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics }

        internal func get_ForeverImpl() throws -> WinUI.RepeatBehavior {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Forever(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func FromCountImpl(_ count: Double) throws -> WinUI.RepeatBehavior {
            var result: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.FromCount(pThis, count, &result))
            }
            return .from(abi: result)
        }

        internal func FromDurationImpl(_ duration: WindowsFoundation.TimeSpan) throws -> WinUI.RepeatBehavior {
            var result: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.FromDuration(pThis, .from(swift: duration), &result))
            }
            return .from(abi: result)
        }

        internal func GetHasCountImpl(_ target: WinUI.RepeatBehavior) throws -> Bool {
            var result: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.GetHasCount(pThis, .from(swift: target), &result))
            }
            return .init(from: result)
        }

        internal func GetHasDurationImpl(_ target: WinUI.RepeatBehavior) throws -> Bool {
            var result: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.GetHasDuration(pThis, .from(swift: target), &result))
            }
            return .init(from: result)
        }

        internal func EqualsImpl(_ target: WinUI.RepeatBehavior, _ value: WinUI.RepeatBehavior) throws -> Bool {
            var result: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepeatBehaviorHelperStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Equals(pThis, .from(swift: target), .from(swift: value), &result))
            }
            return .init(from: result)
        }

    }

    public class IRepositionThemeAnimation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation }

        internal func get_TargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_TargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_TargetName(pThis, _value.get()))
            }
        }

        internal func get_FromHorizontalOffsetImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromHorizontalOffset(pThis, &value))
            }
            return value
        }

        internal func put_FromHorizontalOffsetImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_FromHorizontalOffset(pThis, value))
            }
        }

        internal func get_FromVerticalOffsetImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromVerticalOffset(pThis, &value))
            }
            return value
        }

        internal func put_FromVerticalOffsetImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_FromVerticalOffset(pThis, value))
            }
        }

    }

    public class IRepositionThemeAnimationStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics }

        internal func get_TargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_FromHorizontalOffsetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromHorizontalOffsetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_FromVerticalOffsetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromVerticalOffsetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IRepositionThemeTransition: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition }

        internal func get_IsStaggeringEnabledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsStaggeringEnabled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsStaggeringEnabledImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransition.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsStaggeringEnabled(pThis, .init(from: value)))
            }
        }

    }

    public class IRepositionThemeTransitionStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics }

        internal func get_IsStaggeringEnabledPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIRepositionThemeTransitionStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsStaggeringEnabledProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class ISineEase: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISineEase }

    }

    public class ISlideNavigationTransitionInfo: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo }

        internal func get_EffectImpl() throws -> WinUI.SlideNavigationTransitionEffect {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CSlideNavigationTransitionEffect = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Effect(pThis, &value))
            }
            return value
        }

        internal func put_EffectImpl(_ value: WinUI.SlideNavigationTransitionEffect) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Effect(pThis, value))
            }
        }

    }

    public class ISlideNavigationTransitionInfoStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics }

        internal func get_EffectPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISlideNavigationTransitionInfoStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_EffectProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class ISplineColorKeyFrame: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame }

        internal func get_KeySplineImpl() throws -> WinUI.KeySpline? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_KeySpline(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_KeySplineImpl(_ value: WinUI.KeySpline?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrame.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_KeySpline(pThis, RawPointer(value)))
            }
        }

    }

    public class ISplineColorKeyFrameStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics }

        internal func get_KeySplinePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplineColorKeyFrameStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_KeySplineProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class ISplineDoubleKeyFrame: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame }

        internal func get_KeySplineImpl() throws -> WinUI.KeySpline? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_KeySpline(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_KeySplineImpl(_ value: WinUI.KeySpline?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrame.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_KeySpline(pThis, RawPointer(value)))
            }
        }

    }

    public class ISplineDoubleKeyFrameStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics }

        internal func get_KeySplinePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplineDoubleKeyFrameStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_KeySplineProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class ISplinePointKeyFrame: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame }

        internal func get_KeySplineImpl() throws -> WinUI.KeySpline? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_KeySpline(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_KeySplineImpl(_ value: WinUI.KeySpline?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrame.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_KeySpline(pThis, RawPointer(value)))
            }
        }

    }

    public class ISplinePointKeyFrameStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics }

        internal func get_KeySplinePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplinePointKeyFrameStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_KeySplineProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class ISplitCloseThemeAnimation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation }

        internal func get_OpenedTargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_OpenedTargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_OpenedTargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_OpenedTargetName(pThis, _value.get()))
            }
        }

        internal func get_OpenedTargetImpl() throws -> WinUI.DependencyObject? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_OpenedTarget(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_OpenedTargetImpl(_ value: WinUI.DependencyObject?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_OpenedTarget(pThis, RawPointer(value)))
            }
        }

        internal func get_ClosedTargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ClosedTargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_ClosedTargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ClosedTargetName(pThis, _value.get()))
            }
        }

        internal func get_ClosedTargetImpl() throws -> WinUI.DependencyObject? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ClosedTarget(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_ClosedTargetImpl(_ value: WinUI.DependencyObject?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ClosedTarget(pThis, RawPointer(value)))
            }
        }

        internal func get_ContentTargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentTargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_ContentTargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ContentTargetName(pThis, _value.get()))
            }
        }

        internal func get_ContentTargetImpl() throws -> WinUI.DependencyObject? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentTarget(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_ContentTargetImpl(_ value: WinUI.DependencyObject?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ContentTarget(pThis, RawPointer(value)))
            }
        }

        internal func get_OpenedLengthImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_OpenedLength(pThis, &value))
            }
            return value
        }

        internal func put_OpenedLengthImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_OpenedLength(pThis, value))
            }
        }

        internal func get_ClosedLengthImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ClosedLength(pThis, &value))
            }
            return value
        }

        internal func put_ClosedLengthImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ClosedLength(pThis, value))
            }
        }

        internal func get_OffsetFromCenterImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_OffsetFromCenter(pThis, &value))
            }
            return value
        }

        internal func put_OffsetFromCenterImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_OffsetFromCenter(pThis, value))
            }
        }

        internal func get_ContentTranslationDirectionImpl() throws -> WinUI.AnimationDirection {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CAnimationDirection = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentTranslationDirection(pThis, &value))
            }
            return value
        }

        internal func put_ContentTranslationDirectionImpl(_ value: WinUI.AnimationDirection) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ContentTranslationDirection(pThis, value))
            }
        }

        internal func get_ContentTranslationOffsetImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentTranslationOffset(pThis, &value))
            }
            return value
        }

        internal func put_ContentTranslationOffsetImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ContentTranslationOffset(pThis, value))
            }
        }

    }

    public class ISplitCloseThemeAnimationStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics }

        internal func get_OpenedTargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_OpenedTargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_OpenedTargetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_OpenedTargetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ClosedTargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ClosedTargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ClosedTargetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ClosedTargetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ContentTargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentTargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ContentTargetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentTargetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_OpenedLengthPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_OpenedLengthProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ClosedLengthPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ClosedLengthProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_OffsetFromCenterPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_OffsetFromCenterProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ContentTranslationDirectionPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentTranslationDirectionProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ContentTranslationOffsetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitCloseThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentTranslationOffsetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class ISplitOpenThemeAnimation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation }

        internal func get_OpenedTargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_OpenedTargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_OpenedTargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_OpenedTargetName(pThis, _value.get()))
            }
        }

        internal func get_OpenedTargetImpl() throws -> WinUI.DependencyObject? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_OpenedTarget(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_OpenedTargetImpl(_ value: WinUI.DependencyObject?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_OpenedTarget(pThis, RawPointer(value)))
            }
        }

        internal func get_ClosedTargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ClosedTargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_ClosedTargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ClosedTargetName(pThis, _value.get()))
            }
        }

        internal func get_ClosedTargetImpl() throws -> WinUI.DependencyObject? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ClosedTarget(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_ClosedTargetImpl(_ value: WinUI.DependencyObject?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ClosedTarget(pThis, RawPointer(value)))
            }
        }

        internal func get_ContentTargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentTargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_ContentTargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ContentTargetName(pThis, _value.get()))
            }
        }

        internal func get_ContentTargetImpl() throws -> WinUI.DependencyObject? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentTarget(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_ContentTargetImpl(_ value: WinUI.DependencyObject?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ContentTarget(pThis, RawPointer(value)))
            }
        }

        internal func get_OpenedLengthImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_OpenedLength(pThis, &value))
            }
            return value
        }

        internal func put_OpenedLengthImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_OpenedLength(pThis, value))
            }
        }

        internal func get_ClosedLengthImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ClosedLength(pThis, &value))
            }
            return value
        }

        internal func put_ClosedLengthImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ClosedLength(pThis, value))
            }
        }

        internal func get_OffsetFromCenterImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_OffsetFromCenter(pThis, &value))
            }
            return value
        }

        internal func put_OffsetFromCenterImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_OffsetFromCenter(pThis, value))
            }
        }

        internal func get_ContentTranslationDirectionImpl() throws -> WinUI.AnimationDirection {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CControls_CPrimitives_CAnimationDirection = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentTranslationDirection(pThis, &value))
            }
            return value
        }

        internal func put_ContentTranslationDirectionImpl(_ value: WinUI.AnimationDirection) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ContentTranslationDirection(pThis, value))
            }
        }

        internal func get_ContentTranslationOffsetImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentTranslationOffset(pThis, &value))
            }
            return value
        }

        internal func put_ContentTranslationOffsetImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ContentTranslationOffset(pThis, value))
            }
        }

    }

    public class ISplitOpenThemeAnimationStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics }

        internal func get_OpenedTargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_OpenedTargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_OpenedTargetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_OpenedTargetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ClosedTargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ClosedTargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ClosedTargetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ClosedTargetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ContentTargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentTargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ContentTargetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentTargetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_OpenedLengthPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_OpenedLengthProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ClosedLengthPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ClosedLengthProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_OffsetFromCenterPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_OffsetFromCenterProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ContentTranslationDirectionPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentTranslationDirectionProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ContentTranslationOffsetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISplitOpenThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContentTranslationOffsetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IStoryboard: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard }

        internal func get_ChildrenImpl() throws -> WinUI.TimelineCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Children(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func SeekImpl(_ offset: WindowsFoundation.TimeSpan) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Seek(pThis, .from(swift: offset)))
            }
        }

        internal func StopImpl() throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Stop(pThis))
            }
        }

        internal func BeginImpl() throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Begin(pThis))
            }
        }

        internal func PauseImpl() throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Pause(pThis))
            }
        }

        internal func ResumeImpl() throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Resume(pThis))
            }
        }

        internal func GetCurrentStateImpl() throws -> WinUI.ClockState {
            var result: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CClockState = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.GetCurrentState(pThis, &result))
            }
            return result
        }

        internal func GetCurrentTimeImpl() throws -> WindowsFoundation.TimeSpan {
            var result: __x_ABI_CWindows_CFoundation_CTimeSpan = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.GetCurrentTime(pThis, &result))
            }
            return .from(abi: result)
        }

        internal func SeekAlignedToLastTickImpl(_ offset: WindowsFoundation.TimeSpan) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SeekAlignedToLastTick(pThis, .from(swift: offset)))
            }
        }

        internal func SkipToFillImpl() throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SkipToFill(pThis))
            }
        }

    }

    public class IStoryboardStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics }

        internal func get_TargetPropertyPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetPropertyProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func GetTargetPropertyImpl(_ element: WinUI.Timeline?) throws -> String {
            var result: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.GetTargetProperty(pThis, RawPointer(element), &result))
            }
            return .init(from: result)
        }

        internal func SetTargetPropertyImpl(_ element: WinUI.Timeline?, _ path: String) throws {
            let _path = try! HString(path)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SetTargetProperty(pThis, RawPointer(element), _path.get()))
            }
        }

        internal func get_TargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func GetTargetNameImpl(_ element: WinUI.Timeline?) throws -> String {
            var result: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.GetTargetName(pThis, RawPointer(element), &result))
            }
            return .init(from: result)
        }

        internal func SetTargetNameImpl(_ element: WinUI.Timeline?, _ name: String) throws {
            let _name = try! HString(name)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SetTargetName(pThis, RawPointer(element), _name.get()))
            }
        }

        internal func SetTargetImpl(_ timeline: WinUI.Timeline?, _ target: WinUI.DependencyObject?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CIStoryboardStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SetTarget(pThis, RawPointer(timeline), RawPointer(target)))
            }
        }

    }

    public class ISuppressNavigationTransitionInfo: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISuppressNavigationTransitionInfo }

    }

    public class ISwipeBackThemeAnimation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation }

        internal func get_TargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_TargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_TargetName(pThis, _value.get()))
            }
        }

        internal func get_FromHorizontalOffsetImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromHorizontalOffset(pThis, &value))
            }
            return value
        }

        internal func put_FromHorizontalOffsetImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_FromHorizontalOffset(pThis, value))
            }
        }

        internal func get_FromVerticalOffsetImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromVerticalOffset(pThis, &value))
            }
            return value
        }

        internal func put_FromVerticalOffsetImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_FromVerticalOffset(pThis, value))
            }
        }

    }

    public class ISwipeBackThemeAnimationStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics }

        internal func get_TargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_FromHorizontalOffsetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromHorizontalOffsetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_FromVerticalOffsetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeBackThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_FromVerticalOffsetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class ISwipeHintThemeAnimation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation }

        internal func get_TargetNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_TargetNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_TargetName(pThis, _value.get()))
            }
        }

        internal func get_ToHorizontalOffsetImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ToHorizontalOffset(pThis, &value))
            }
            return value
        }

        internal func put_ToHorizontalOffsetImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ToHorizontalOffset(pThis, value))
            }
        }

        internal func get_ToVerticalOffsetImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ToVerticalOffset(pThis, &value))
            }
            return value
        }

        internal func put_ToVerticalOffsetImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ToVerticalOffset(pThis, value))
            }
        }

    }

    public class ISwipeHintThemeAnimationStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics }

        internal func get_TargetNamePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_TargetNameProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ToHorizontalOffsetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ToHorizontalOffsetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_ToVerticalOffsetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CISwipeHintThemeAnimationStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ToVerticalOffsetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class ITimeline: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimeline }

        internal func get_AutoReverseImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimeline.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AutoReverse(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_AutoReverseImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimeline.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_AutoReverse(pThis, .init(from: value)))
            }
        }

        internal func get_BeginTimeImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimeline.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_BeginTime(pThis, &valueAbi))
                }
            }
            return WinUI.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

        internal func put_BeginTimeImpl(_ value: WindowsFoundation.TimeSpan?) throws {
            let valueWrapper = WinUI.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimeline.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_BeginTime(pThis, _value))
            }
        }

        internal func get_DurationImpl() throws -> WinUI.Duration {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CDuration = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimeline.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Duration(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_DurationImpl(_ value: WinUI.Duration) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimeline.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Duration(pThis, .from(swift: value)))
            }
        }

        internal func get_SpeedRatioImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimeline.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SpeedRatio(pThis, &value))
            }
            return value
        }

        internal func put_SpeedRatioImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimeline.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_SpeedRatio(pThis, value))
            }
        }

        internal func get_FillBehaviorImpl() throws -> WinUI.FillBehavior {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CFillBehavior = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimeline.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_FillBehavior(pThis, &value))
            }
            return value
        }

        internal func put_FillBehaviorImpl(_ value: WinUI.FillBehavior) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimeline.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_FillBehavior(pThis, value))
            }
        }

        internal func get_RepeatBehaviorImpl() throws -> WinUI.RepeatBehavior {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior = .init()
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimeline.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RepeatBehavior(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_RepeatBehaviorImpl(_ value: WinUI.RepeatBehavior) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimeline.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_RepeatBehavior(pThis, .from(swift: value)))
            }
        }

        internal func add_CompletedImpl(_ handler: EventHandler<Any?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = WinUI.__x_ABI_C__FIEventHandler_1_IInspectableWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimeline.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_Completed(pThis, _handler, &token))
            }
            return token
        }

        internal func remove_CompletedImpl(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimeline.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_Completed(pThis, token))
            }
        }

    }

    public class ITimelineFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimelineFactory }

        internal func CreateInstanceImpl(_ baseInterface: UnsealedWinRTClassWrapper<WinUI.Timeline.Composable>?, _ innerInterface: inout WindowsFoundation.IInspectable?) throws -> ITimeline {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _baseInterface = baseInterface?.toIInspectableABI { $0 }
                let (_innerInterface) = try ComPtrs.initialize { _innerInterfaceAbi in
                    _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimelineFactory.self) { pThis in
                        try CHECKED(pThis.pointee.lpVtbl.pointee.CreateInstance(pThis, _baseInterface, &_innerInterfaceAbi, &valueAbi))
                    }
                }
                innerInterface = WindowsFoundation.IInspectable(_innerInterface!)
            }
            return ITimeline(value!)
        }

    }

    public class ITimelineStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimelineStatics }

        internal func get_AllowDependentAnimationsImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimelineStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AllowDependentAnimations(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_AllowDependentAnimationsImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimelineStatics.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_AllowDependentAnimations(pThis, .init(from: value)))
            }
        }

        internal func get_AutoReversePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimelineStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_AutoReverseProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_BeginTimePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimelineStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_BeginTimeProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_DurationPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimelineStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_DurationProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_SpeedRatioPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimelineStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_SpeedRatioProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_FillBehaviorPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimelineStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_FillBehaviorProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_RepeatBehaviorPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITimelineStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_RepeatBehaviorProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class ITransition: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransition }

    }

    public class ITransitionFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CITransitionFactory }

    }

    internal typealias INavigationTransitionInfoOverridesWrapper = UnsealedWinRTClassWrapper<WinUI.NavigationTransitionInfo.INavigationTransitionInfoOverrides>
    internal static var INavigationTransitionInfoOverridesVTable: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverridesVtbl = .init(
        QueryInterface: { INavigationTransitionInfoOverridesWrapper.queryInterface($0, $1, $2) },
        AddRef: { INavigationTransitionInfoOverridesWrapper.addRef($0) },
        Release: { INavigationTransitionInfoOverridesWrapper.release($0) },
        GetIids: {
            let size = MemoryLayout<WindowsFoundation.IID>.size
            let iids = CoTaskMemAlloc(UInt64(size) * 3).assumingMemoryBound(to: WindowsFoundation.IID.self)
            iids[0] = IUnknown.IID
            iids[1] = IInspectable.IID
            iids[2] = __ABI_Microsoft_UI_Xaml_Media_Animation.INavigationTransitionInfoOverridesWrapper.IID
            $1!.pointee = 3
            $2!.pointee = iids
            return S_OK
        },

        GetRuntimeClassName: {
            guard let instance = INavigationTransitionInfoOverridesWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let hstring = instance.GetRuntimeClassName().detach()
            $1!.pointee = hstring
            return S_OK
        },

        GetTrustLevel: {
            _ = $0
            $1!.pointee = TrustLevel(rawValue: 0)
            return S_OK
        },

        GetNavigationStateCore: {
            do {
                guard let __unwrapped__instance = INavigationTransitionInfoOverridesWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
                let result = try __unwrapped__instance.getNavigationStateCore()
                $1?.initialize(to: try! HString(result).detach())
                return S_OK
            } catch { return failWith(err: E_FAIL) } 
        },

        SetNavigationStateCore: {
            do {
                guard let __unwrapped__instance = INavigationTransitionInfoOverridesWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
                let navigationState: String = .init(from: $1)
                try __unwrapped__instance.setNavigationStateCore(navigationState)
                return S_OK
            } catch { return failWith(err: E_FAIL) } 
        }
    )
}
extension __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CKeyTime {
        public static func from(swift: WinUI.KeyTime) -> __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CKeyTime {
            .init(TimeSpan: .from(swift: swift.timeSpan))
        }
    }
    extension __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior {
        public static func from(swift: WinUI.RepeatBehavior) -> __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CRepeatBehavior {
            .init(Count: swift.count, Duration: .from(swift: swift.duration), Type: swift.type)
        }
    }
    extension ComposableImpl where CABI == __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CAnimation_CINavigationTransitionInfoOverrides {
    public static func makeAbi() -> CABI {
        let vtblPtr = withUnsafeMutablePointer(to: &__ABI_Microsoft_UI_Xaml_Media_Animation.INavigationTransitionInfoOverridesVTable) { $0 }
        return .init(lpVtbl: vtblPtr)
    }
}
