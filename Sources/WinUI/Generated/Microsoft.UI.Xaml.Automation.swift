// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.annotationtype)
public typealias AnnotationType = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationtexteditchangetype)
public typealias AutomationTextEditChangeType = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAutomationTextEditChangeType
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationannotation)
public final class AutomationAnnotation : WinUI.DependencyObject {
    private typealias SwiftABI = __ABI_Microsoft_UI_Xaml_Automation.IAutomationAnnotation
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CIAutomationAnnotation
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CIAutomationAnnotation>?) -> AutomationAnnotation? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: WindowsFoundation.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    override public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi: fromAbi)
    }

    override public init() {
        super.init(fromAbi: try! RoActivateInstance(HString("Microsoft.UI.Xaml.Automation.AutomationAnnotation")))
    }

    private static let _IAutomationAnnotationFactory: __ABI_Microsoft_UI_Xaml_Automation.IAutomationAnnotationFactory = try! RoGetActivationFactory(HString("Microsoft.UI.Xaml.Automation.AutomationAnnotation"))
    public init(_ type: AnnotationType) {
        super.init(fromAbi: try! Self._IAutomationAnnotationFactory.CreateInstanceImpl(type))
    }

    public init(_ type: AnnotationType, _ element: WinUI.UIElement!) {
        super.init(fromAbi: try! Self._IAutomationAnnotationFactory.CreateWithElementParameterImpl(type, element))
    }

    private static let _IAutomationAnnotationStatics: __ABI_Microsoft_UI_Xaml_Automation.IAutomationAnnotationStatics = try! RoGetActivationFactory(HString("Microsoft.UI.Xaml.Automation.AutomationAnnotation"))
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationannotation.elementproperty)
    public static var elementProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationAnnotationStatics.get_ElementPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationannotation.typeproperty)
    public static var typeProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationAnnotationStatics.get_TypePropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationannotation.element)
    public var element : WinUI.UIElement! {
        get { try! _default.get_ElementImpl() }
        set { try! _default.put_ElementImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationannotation.type)
    public var type : AnnotationType {
        get { try! _default.get_TypeImpl() }
        set { try! _default.put_TypeImpl(newValue) }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties)
public final class AutomationProperties : WinRTClass {
    private typealias SwiftABI = __ABI_Microsoft_UI_Xaml_Automation.IAutomationProperties
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CIAutomationProperties
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CIAutomationProperties>?) -> AutomationProperties? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: WindowsFoundation.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    private static let _IAutomationPropertiesStatics: __ABI_Microsoft_UI_Xaml_Automation.IAutomationPropertiesStatics = try! RoGetActivationFactory(HString("Microsoft.UI.Xaml.Automation.AutomationProperties"))
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getacceleratorkey)
    public static func getAcceleratorKey(_ element: WinUI.DependencyObject!) -> String {
        return try! _IAutomationPropertiesStatics.GetAcceleratorKeyImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setacceleratorkey)
    public static func setAcceleratorKey(_ element: WinUI.DependencyObject!, _ value: String) {
        try! _IAutomationPropertiesStatics.SetAcceleratorKeyImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getaccesskey)
    public static func getAccessKey(_ element: WinUI.DependencyObject!) -> String {
        return try! _IAutomationPropertiesStatics.GetAccessKeyImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setaccesskey)
    public static func setAccessKey(_ element: WinUI.DependencyObject!, _ value: String) {
        try! _IAutomationPropertiesStatics.SetAccessKeyImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getautomationid)
    public static func getAutomationId(_ element: WinUI.DependencyObject!) -> String {
        return try! _IAutomationPropertiesStatics.GetAutomationIdImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setautomationid)
    public static func setAutomationId(_ element: WinUI.DependencyObject!, _ value: String) {
        try! _IAutomationPropertiesStatics.SetAutomationIdImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.gethelptext)
    public static func getHelpText(_ element: WinUI.DependencyObject!) -> String {
        return try! _IAutomationPropertiesStatics.GetHelpTextImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.sethelptext)
    public static func setHelpText(_ element: WinUI.DependencyObject!, _ value: String) {
        try! _IAutomationPropertiesStatics.SetHelpTextImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getisrequiredforform)
    public static func getIsRequiredForForm(_ element: WinUI.DependencyObject!) -> Bool {
        return try! _IAutomationPropertiesStatics.GetIsRequiredForFormImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setisrequiredforform)
    public static func setIsRequiredForForm(_ element: WinUI.DependencyObject!, _ value: Bool) {
        try! _IAutomationPropertiesStatics.SetIsRequiredForFormImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getitemstatus)
    public static func getItemStatus(_ element: WinUI.DependencyObject!) -> String {
        return try! _IAutomationPropertiesStatics.GetItemStatusImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setitemstatus)
    public static func setItemStatus(_ element: WinUI.DependencyObject!, _ value: String) {
        try! _IAutomationPropertiesStatics.SetItemStatusImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getitemtype)
    public static func getItemType(_ element: WinUI.DependencyObject!) -> String {
        return try! _IAutomationPropertiesStatics.GetItemTypeImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setitemtype)
    public static func setItemType(_ element: WinUI.DependencyObject!, _ value: String) {
        try! _IAutomationPropertiesStatics.SetItemTypeImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getlabeledby)
    public static func getLabeledBy(_ element: WinUI.DependencyObject!) -> WinUI.UIElement! {
        return try! _IAutomationPropertiesStatics.GetLabeledByImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setlabeledby)
    public static func setLabeledBy(_ element: WinUI.DependencyObject!, _ value: WinUI.UIElement!) {
        try! _IAutomationPropertiesStatics.SetLabeledByImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getname)
    public static func getName(_ element: WinUI.DependencyObject!) -> String {
        return try! _IAutomationPropertiesStatics.GetNameImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setname)
    public static func setName(_ element: WinUI.DependencyObject!, _ value: String) {
        try! _IAutomationPropertiesStatics.SetNameImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getlivesetting)
    public static func getLiveSetting(_ element: WinUI.DependencyObject!) -> WinUI.AutomationLiveSetting {
        return try! _IAutomationPropertiesStatics.GetLiveSettingImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setlivesetting)
    public static func setLiveSetting(_ element: WinUI.DependencyObject!, _ value: WinUI.AutomationLiveSetting) {
        try! _IAutomationPropertiesStatics.SetLiveSettingImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getaccessibilityview)
    public static func getAccessibilityView(_ element: WinUI.DependencyObject!) -> WinUI.AccessibilityView {
        return try! _IAutomationPropertiesStatics.GetAccessibilityViewImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setaccessibilityview)
    public static func setAccessibilityView(_ element: WinUI.DependencyObject!, _ value: WinUI.AccessibilityView) {
        try! _IAutomationPropertiesStatics.SetAccessibilityViewImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getcontrolledpeers)
    public static func getControlledPeers(_ element: WinUI.DependencyObject!) -> WindowsFoundation.AnyIVector<WinUI.UIElement?>! {
        return try! _IAutomationPropertiesStatics.GetControlledPeersImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getpositioninset)
    public static func getPositionInSet(_ element: WinUI.DependencyObject!) -> Int32 {
        return try! _IAutomationPropertiesStatics.GetPositionInSetImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setpositioninset)
    public static func setPositionInSet(_ element: WinUI.DependencyObject!, _ value: Int32) {
        try! _IAutomationPropertiesStatics.SetPositionInSetImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getsizeofset)
    public static func getSizeOfSet(_ element: WinUI.DependencyObject!) -> Int32 {
        return try! _IAutomationPropertiesStatics.GetSizeOfSetImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setsizeofset)
    public static func setSizeOfSet(_ element: WinUI.DependencyObject!, _ value: Int32) {
        try! _IAutomationPropertiesStatics.SetSizeOfSetImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getlevel)
    public static func getLevel(_ element: WinUI.DependencyObject!) -> Int32 {
        return try! _IAutomationPropertiesStatics.GetLevelImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setlevel)
    public static func setLevel(_ element: WinUI.DependencyObject!, _ value: Int32) {
        try! _IAutomationPropertiesStatics.SetLevelImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getannotations)
    public static func getAnnotations(_ element: WinUI.DependencyObject!) -> WindowsFoundation.AnyIVector<AutomationAnnotation?>! {
        return try! _IAutomationPropertiesStatics.GetAnnotationsImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getlandmarktype)
    public static func getLandmarkType(_ element: WinUI.DependencyObject!) -> WinUI.AutomationLandmarkType {
        return try! _IAutomationPropertiesStatics.GetLandmarkTypeImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setlandmarktype)
    public static func setLandmarkType(_ element: WinUI.DependencyObject!, _ value: WinUI.AutomationLandmarkType) {
        try! _IAutomationPropertiesStatics.SetLandmarkTypeImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getlocalizedlandmarktype)
    public static func getLocalizedLandmarkType(_ element: WinUI.DependencyObject!) -> String {
        return try! _IAutomationPropertiesStatics.GetLocalizedLandmarkTypeImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setlocalizedlandmarktype)
    public static func setLocalizedLandmarkType(_ element: WinUI.DependencyObject!, _ value: String) {
        try! _IAutomationPropertiesStatics.SetLocalizedLandmarkTypeImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getisperipheral)
    public static func getIsPeripheral(_ element: WinUI.DependencyObject!) -> Bool {
        return try! _IAutomationPropertiesStatics.GetIsPeripheralImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setisperipheral)
    public static func setIsPeripheral(_ element: WinUI.DependencyObject!, _ value: Bool) {
        try! _IAutomationPropertiesStatics.SetIsPeripheralImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getisdatavalidforform)
    public static func getIsDataValidForForm(_ element: WinUI.DependencyObject!) -> Bool {
        return try! _IAutomationPropertiesStatics.GetIsDataValidForFormImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setisdatavalidforform)
    public static func setIsDataValidForForm(_ element: WinUI.DependencyObject!, _ value: Bool) {
        try! _IAutomationPropertiesStatics.SetIsDataValidForFormImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getfulldescription)
    public static func getFullDescription(_ element: WinUI.DependencyObject!) -> String {
        return try! _IAutomationPropertiesStatics.GetFullDescriptionImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setfulldescription)
    public static func setFullDescription(_ element: WinUI.DependencyObject!, _ value: String) {
        try! _IAutomationPropertiesStatics.SetFullDescriptionImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getlocalizedcontroltype)
    public static func getLocalizedControlType(_ element: WinUI.DependencyObject!) -> String {
        return try! _IAutomationPropertiesStatics.GetLocalizedControlTypeImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setlocalizedcontroltype)
    public static func setLocalizedControlType(_ element: WinUI.DependencyObject!, _ value: String) {
        try! _IAutomationPropertiesStatics.SetLocalizedControlTypeImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getdescribedby)
    public static func getDescribedBy(_ element: WinUI.DependencyObject!) -> WindowsFoundation.AnyIVector<WinUI.DependencyObject?>! {
        return try! _IAutomationPropertiesStatics.GetDescribedByImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getflowsto)
    public static func getFlowsTo(_ element: WinUI.DependencyObject!) -> WindowsFoundation.AnyIVector<WinUI.DependencyObject?>! {
        return try! _IAutomationPropertiesStatics.GetFlowsToImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getflowsfrom)
    public static func getFlowsFrom(_ element: WinUI.DependencyObject!) -> WindowsFoundation.AnyIVector<WinUI.DependencyObject?>! {
        return try! _IAutomationPropertiesStatics.GetFlowsFromImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getculture)
    public static func getCulture(_ element: WinUI.DependencyObject!) -> Int32 {
        return try! _IAutomationPropertiesStatics.GetCultureImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setculture)
    public static func setCulture(_ element: WinUI.DependencyObject!, _ value: Int32) {
        try! _IAutomationPropertiesStatics.SetCultureImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getheadinglevel)
    public static func getHeadingLevel(_ element: WinUI.DependencyObject!) -> WinUI.AutomationHeadingLevel {
        return try! _IAutomationPropertiesStatics.GetHeadingLevelImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setheadinglevel)
    public static func setHeadingLevel(_ element: WinUI.DependencyObject!, _ value: WinUI.AutomationHeadingLevel) {
        try! _IAutomationPropertiesStatics.SetHeadingLevelImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getisdialog)
    public static func getIsDialog(_ element: WinUI.DependencyObject!) -> Bool {
        return try! _IAutomationPropertiesStatics.GetIsDialogImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setisdialog)
    public static func setIsDialog(_ element: WinUI.DependencyObject!, _ value: Bool) {
        try! _IAutomationPropertiesStatics.SetIsDialogImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.acceleratorkeyproperty)
    public static var acceleratorKeyProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_AcceleratorKeyPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.accesskeyproperty)
    public static var accessKeyProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_AccessKeyPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.accessibilityviewproperty)
    public static var accessibilityViewProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_AccessibilityViewPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.annotationsproperty)
    public static var annotationsProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_AnnotationsPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.automationidproperty)
    public static var automationIdProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_AutomationIdPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.controlledpeersproperty)
    public static var controlledPeersProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_ControlledPeersPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.cultureproperty)
    public static var cultureProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_CulturePropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.describedbyproperty)
    public static var describedByProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_DescribedByPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.flowsfromproperty)
    public static var flowsFromProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_FlowsFromPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.flowstoproperty)
    public static var flowsToProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_FlowsToPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.fulldescriptionproperty)
    public static var fullDescriptionProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_FullDescriptionPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.headinglevelproperty)
    public static var headingLevelProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_HeadingLevelPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.helptextproperty)
    public static var helpTextProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_HelpTextPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.isdatavalidforformproperty)
    public static var isDataValidForFormProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_IsDataValidForFormPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.isdialogproperty)
    public static var isDialogProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_IsDialogPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.isperipheralproperty)
    public static var isPeripheralProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_IsPeripheralPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.isrequiredforformproperty)
    public static var isRequiredForFormProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_IsRequiredForFormPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.itemstatusproperty)
    public static var itemStatusProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_ItemStatusPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.itemtypeproperty)
    public static var itemTypeProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_ItemTypePropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.labeledbyproperty)
    public static var labeledByProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_LabeledByPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.landmarktypeproperty)
    public static var landmarkTypeProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_LandmarkTypePropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.levelproperty)
    public static var levelProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_LevelPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.livesettingproperty)
    public static var liveSettingProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_LiveSettingPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.localizedcontroltypeproperty)
    public static var localizedControlTypeProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_LocalizedControlTypePropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.localizedlandmarktypeproperty)
    public static var localizedLandmarkTypeProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_LocalizedLandmarkTypePropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.nameproperty)
    public static var nameProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_NamePropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.positioninsetproperty)
    public static var positionInSetProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_PositionInSetPropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.sizeofsetproperty)
    public static var sizeOfSetProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics.get_SizeOfSetPropertyImpl() }
    }

    private static let _IAutomationPropertiesStatics2: __ABI_Microsoft_UI_Xaml_Automation.IAutomationPropertiesStatics2 = try! RoGetActivationFactory(HString("Microsoft.UI.Xaml.Automation.AutomationProperties"))
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.getautomationcontroltype)
    public static func getAutomationControlType(_ element: WinUI.UIElement!) -> WinUI.AutomationControlType {
        return try! _IAutomationPropertiesStatics2.GetAutomationControlTypeImpl(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.setautomationcontroltype)
    public static func setAutomationControlType(_ element: WinUI.UIElement!, _ value: WinUI.AutomationControlType) {
        try! _IAutomationPropertiesStatics2.SetAutomationControlTypeImpl(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperties.automationcontroltypeproperty)
    public static var automationControlTypeProperty : WinUI.DependencyProperty! {
        get { try! _IAutomationPropertiesStatics2.get_AutomationControlTypePropertyImpl() }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.automation.automationproperty)
public final class AutomationProperty : WinRTClass {
    private typealias SwiftABI = __ABI_Microsoft_UI_Xaml_Automation.IAutomationProperty
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CIAutomationProperty
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CIAutomationProperty>?) -> AutomationProperty? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: WindowsFoundation.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    deinit {
        _default = nil
    }
}

extension WinUI.AnnotationType {
    public static var unknown : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_Unknown
    }
    public static var spellingError : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_SpellingError
    }
    public static var grammarError : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_GrammarError
    }
    public static var comment : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_Comment
    }
    public static var formulaError : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_FormulaError
    }
    public static var trackChanges : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_TrackChanges
    }
    public static var header : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_Header
    }
    public static var footer : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_Footer
    }
    public static var highlighted : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_Highlighted
    }
    public static var endnote : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_Endnote
    }
    public static var footnote : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_Footnote
    }
    public static var insertionChange : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_InsertionChange
    }
    public static var deletionChange : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_DeletionChange
    }
    public static var moveChange : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_MoveChange
    }
    public static var formatChange : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_FormatChange
    }
    public static var unsyncedChange : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_UnsyncedChange
    }
    public static var editingLockedChange : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_EditingLockedChange
    }
    public static var externalChange : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_ExternalChange
    }
    public static var conflictingChange : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_ConflictingChange
    }
    public static var author : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_Author
    }
    public static var advancedProofingIssue : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_AdvancedProofingIssue
    }
    public static var dataValidationError : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_DataValidationError
    }
    public static var circularReferenceError : WinUI.AnnotationType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAnnotationType_CircularReferenceError
    }
}
extension WinUI.AnnotationType: @retroactive Hashable, @retroactive Codable {}

extension WinUI.AutomationTextEditChangeType {
    public static var none : WinUI.AutomationTextEditChangeType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAutomationTextEditChangeType_None
    }
    public static var autoCorrect : WinUI.AutomationTextEditChangeType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAutomationTextEditChangeType_AutoCorrect
    }
    public static var composition : WinUI.AutomationTextEditChangeType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAutomationTextEditChangeType_Composition
    }
    public static var compositionFinalized : WinUI.AutomationTextEditChangeType {
        __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CAutomationTextEditChangeType_CompositionFinalized
    }
}
extension WinUI.AutomationTextEditChangeType: @retroactive Hashable, @retroactive Codable {}

