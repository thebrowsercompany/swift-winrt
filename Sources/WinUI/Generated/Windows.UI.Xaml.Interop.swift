// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.ui.xaml.interop.typekind)
public typealias TypeKind = __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeKind
/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.ui.xaml.interop.typename)
public struct TypeName: Hashable, Codable {
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.ui.xaml.interop.typename.name)
    public var name: String = ""
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.ui.xaml.interop.typename.kind)
    public var kind: TypeKind = .init(0)
    public init() {}
    public init(name: String, kind: TypeKind) {
        self.name = name
        self.kind = kind
    }
    public static func from(abi: __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName) -> TypeName {
        .init(name: .init(from: abi.Name), kind: abi.Kind)
    }
}

extension WinUI.TypeKind {
    public static var primitive : WinUI.TypeKind {
        __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeKind_Primitive
    }
    public static var metadata : WinUI.TypeKind {
        __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeKind_Metadata
    }
    public static var custom : WinUI.TypeKind {
        __x_ABI_CWindows_CUI_CXaml_CInterop_CTypeKind_Custom
    }
}
extension WinUI.TypeKind: @retroactive Hashable, @retroactive Codable {}

