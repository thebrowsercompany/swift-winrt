// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

fileprivate func makeIDataTemplateExtensionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml.IDataTemplateExtension = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml.IDataTemplateExtensionBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIElementFactoryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml.IElementFactory = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml.IElementFactoryBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIInsertionPanelFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Controls.IInsertionPanel = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Controls.IInsertionPanelBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIItemContainerMappingFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Controls.IItemContainerMapping = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Controls.IItemContainerMappingBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIKeyIndexMappingFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Controls.IKeyIndexMapping = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Controls.IKeyIndexMappingBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeINavigateFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Controls.INavigate = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Controls.INavigateBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIScrollAnchorProviderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Controls.IScrollAnchorProvider = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Controls.IScrollAnchorProviderBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeISemanticZoomInformationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Controls.ISemanticZoomInformation = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Controls.ISemanticZoomInformationBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIScrollControllerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Controls_Primitives.IScrollController = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Controls_Primitives.IScrollControllerBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIScrollControllerPanningInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Controls_Primitives.IScrollControllerPanningInfo = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Controls_Primitives.IScrollControllerPanningInfoBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIScrollSnapPointsInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Controls_Primitives.IScrollSnapPointsInfo = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Controls_Primitives.IScrollSnapPointsInfoBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeINotifyPropertyChangedFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Data.INotifyPropertyChanged = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Data.INotifyPropertyChangedBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIValueConverterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Data.IValueConverter = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Data.IValueConverterBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICommandFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Input.ICommand = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Input.ICommandBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIBindableIterableFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Interop.IBindableIterable = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Interop.IBindableIterableBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIBindableIteratorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Interop.IBindableIterator = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Interop.IBindableIteratorBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIBindableVectorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Interop.IBindableVector = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Interop.IBindableVectorBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIBindableVectorViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Interop.IBindableVectorView = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Interop.IBindableVectorViewBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeINotifyCollectionChangedFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Interop.INotifyCollectionChanged = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Interop.INotifyCollectionChangedBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIComponentConnectorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Markup.IComponentConnector = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Markup.IComponentConnectorBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIDataTemplateComponentFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Markup.IDataTemplateComponent = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Markup.IDataTemplateComponentBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIXamlMemberFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Markup.IXamlMember = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Markup.IXamlMemberBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIXamlMetadataProviderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Markup.IXamlMetadataProvider = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Markup.IXamlMetadataProviderBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIXamlTypeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Microsoft_UI_Xaml_Markup.IXamlType = try! abi.QueryInterface()
    return __IMPL_Microsoft_UI_Xaml_Markup.IXamlTypeBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeApplicationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Application(fromAbi: abi)
}

fileprivate func makeApplicationInitializationCallbackParamsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ApplicationInitializationCallbackParams(fromAbi: abi)
}

fileprivate func makeBindingFailedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BindingFailedEventArgs(fromAbi: abi)
}

fileprivate func makeBringIntoViewOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BringIntoViewOptions(fromAbi: abi)
}

fileprivate func makeBringIntoViewRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BringIntoViewRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeBrushTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BrushTransition(fromAbi: abi)
}

fileprivate func makeDataContextChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataContextChangedEventArgs(fromAbi: abi)
}

fileprivate func makeDataTemplateFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataTemplate(fromAbi: abi)
}

fileprivate func makeDebugSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DebugSettings(fromAbi: abi)
}

fileprivate func makeDependencyObjectFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DependencyObject(fromAbi: abi)
}

fileprivate func makeDependencyPropertyFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DependencyProperty(fromAbi: abi)
}

fileprivate func makeDependencyPropertyChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DependencyPropertyChangedEventArgs(fromAbi: abi)
}

fileprivate func makeDragEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DragEventArgs(fromAbi: abi)
}

fileprivate func makeDragOperationDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DragOperationDeferral(fromAbi: abi)
}

fileprivate func makeDragStartingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DragStartingEventArgs(fromAbi: abi)
}

fileprivate func makeDragUIFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DragUI(fromAbi: abi)
}

fileprivate func makeDragUIOverrideFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DragUIOverride(fromAbi: abi)
}

fileprivate func makeDropCompletedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DropCompletedEventArgs(fromAbi: abi)
}

fileprivate func makeEffectiveViewportChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EffectiveViewportChangedEventArgs(fromAbi: abi)
}

fileprivate func makeElementFactoryGetArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ElementFactoryGetArgs(fromAbi: abi)
}

fileprivate func makeElementFactoryRecycleArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ElementFactoryRecycleArgs(fromAbi: abi)
}

fileprivate func makeExceptionRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ExceptionRoutedEventArgs(fromAbi: abi)
}

fileprivate func makeFrameworkElementFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FrameworkElement(fromAbi: abi)
}

fileprivate func makeFrameworkTemplateFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FrameworkTemplate(fromAbi: abi)
}

fileprivate func makeLaunchActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LaunchActivatedEventArgs(fromAbi: abi)
}

fileprivate func makePropertyMetadataFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PropertyMetadata(fromAbi: abi)
}

fileprivate func makePropertyPathFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PropertyPath(fromAbi: abi)
}

fileprivate func makeResourceDictionaryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ResourceDictionary(fromAbi: abi)
}

fileprivate func makeResourceManagerRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ResourceManagerRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeRoutedEventFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RoutedEvent(fromAbi: abi)
}

fileprivate func makeRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RoutedEventArgs(fromAbi: abi)
}

fileprivate func makeScalarTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScalarTransition(fromAbi: abi)
}

fileprivate func makeSetterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Setter(fromAbi: abi)
}

fileprivate func makeSetterBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SetterBase(fromAbi: abi)
}

fileprivate func makeSetterBaseCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SetterBaseCollection(fromAbi: abi)
}

fileprivate func makeSizeChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SizeChangedEventArgs(fromAbi: abi)
}

fileprivate func makeStyleFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Style(fromAbi: abi)
}

fileprivate func makeTargetPropertyPathFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TargetPropertyPath(fromAbi: abi)
}

fileprivate func makeTriggerActionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TriggerAction(fromAbi: abi)
}

fileprivate func makeTriggerBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TriggerBase(fromAbi: abi)
}

fileprivate func makeTriggerCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TriggerCollection(fromAbi: abi)
}

fileprivate func makeUIElementFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UIElement(fromAbi: abi)
}

fileprivate func makeUIElementWeakCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UIElementWeakCollection(fromAbi: abi)
}

fileprivate func makeUnhandledExceptionEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UnhandledExceptionEventArgs(fromAbi: abi)
}

fileprivate func makeVector3TransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Vector3Transition(fromAbi: abi)
}

fileprivate func makeWindowFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Window(fromAbi: abi)
}

fileprivate func makeWindowActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WindowActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeWindowEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WindowEventArgs(fromAbi: abi)
}

fileprivate func makeWindowSizeChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WindowSizeChangedEventArgs(fromAbi: abi)
}

fileprivate func makeWindowVisibilityChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WindowVisibilityChangedEventArgs(fromAbi: abi)
}

fileprivate func makeXamlResourceReferenceFailedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XamlResourceReferenceFailedEventArgs(fromAbi: abi)
}

fileprivate func makeXamlRootFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XamlRoot(fromAbi: abi)
}

fileprivate func makeXamlRootChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XamlRootChangedEventArgs(fromAbi: abi)
}

fileprivate func makeAutomationAnnotationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AutomationAnnotation(fromAbi: abi)
}

fileprivate func makeAutomationPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AutomationProperties(fromAbi: abi)
}

fileprivate func makeAutomationPropertyFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AutomationProperty(fromAbi: abi)
}

fileprivate func makeAutomationPeerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AutomationPeer(fromAbi: abi)
}

fileprivate func makeAutomationPeerAnnotationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AutomationPeerAnnotation(fromAbi: abi)
}

fileprivate func makeIRawElementProviderSimpleFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return IRawElementProviderSimple(fromAbi: abi)
}

fileprivate func makeAnchorRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AnchorRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeAppBarFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppBar(fromAbi: abi)
}

fileprivate func makeBitmapIconFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BitmapIcon(fromAbi: abi)
}

fileprivate func makeBorderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Border(fromAbi: abi)
}

fileprivate func makeButtonFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Button(fromAbi: abi)
}

fileprivate func makeCandidateWindowBoundsChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CandidateWindowBoundsChangedEventArgs(fromAbi: abi)
}

fileprivate func makeCanvasFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Canvas(fromAbi: abi)
}

fileprivate func makeCheckBoxFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CheckBox(fromAbi: abi)
}

fileprivate func makeChoosingGroupHeaderContainerEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ChoosingGroupHeaderContainerEventArgs(fromAbi: abi)
}

fileprivate func makeChoosingItemContainerEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ChoosingItemContainerEventArgs(fromAbi: abi)
}

fileprivate func makeColumnDefinitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ColumnDefinition(fromAbi: abi)
}

fileprivate func makeColumnDefinitionCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ColumnDefinitionCollection(fromAbi: abi)
}

fileprivate func makeComboBoxFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ComboBox(fromAbi: abi)
}

fileprivate func makeComboBoxTextSubmittedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ComboBoxTextSubmittedEventArgs(fromAbi: abi)
}

fileprivate func makeContainerContentChangingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContainerContentChangingEventArgs(fromAbi: abi)
}

fileprivate func makeContentControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentControl(fromAbi: abi)
}

fileprivate func makeContentDialogFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentDialog(fromAbi: abi)
}

fileprivate func makeContentDialogButtonClickDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentDialogButtonClickDeferral(fromAbi: abi)
}

fileprivate func makeContentDialogButtonClickEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentDialogButtonClickEventArgs(fromAbi: abi)
}

fileprivate func makeContentDialogClosedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentDialogClosedEventArgs(fromAbi: abi)
}

fileprivate func makeContentDialogClosingDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentDialogClosingDeferral(fromAbi: abi)
}

fileprivate func makeContentDialogClosingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentDialogClosingEventArgs(fromAbi: abi)
}

fileprivate func makeContentDialogOpenedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentDialogOpenedEventArgs(fromAbi: abi)
}

fileprivate func makeContentPresenterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentPresenter(fromAbi: abi)
}

fileprivate func makeContextMenuEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContextMenuEventArgs(fromAbi: abi)
}

fileprivate func makeControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Control(fromAbi: abi)
}

fileprivate func makeControlTemplateFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ControlTemplate(fromAbi: abi)
}

fileprivate func makeCoreWebView2InitializedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CoreWebView2InitializedEventArgs(fromAbi: abi)
}

fileprivate func makeDataTemplateSelectorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataTemplateSelector(fromAbi: abi)
}

fileprivate func makeDragItemsCompletedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DragItemsCompletedEventArgs(fromAbi: abi)
}

fileprivate func makeDragItemsStartingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DragItemsStartingEventArgs(fromAbi: abi)
}

fileprivate func makeFlipViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FlipView(fromAbi: abi)
}

fileprivate func makeFlipViewItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FlipViewItem(fromAbi: abi)
}

fileprivate func makeFlyoutFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Flyout(fromAbi: abi)
}

fileprivate func makeFlyoutPresenterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FlyoutPresenter(fromAbi: abi)
}

fileprivate func makeFocusDisengagedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FocusDisengagedEventArgs(fromAbi: abi)
}

fileprivate func makeFocusEngagedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FocusEngagedEventArgs(fromAbi: abi)
}

fileprivate func makeFontIconFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FontIcon(fromAbi: abi)
}

fileprivate func makeFontIconSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FontIconSource(fromAbi: abi)
}

fileprivate func makeFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Frame(fromAbi: abi)
}

fileprivate func makeGridFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Grid(fromAbi: abi)
}

fileprivate func makeGridViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return GridView(fromAbi: abi)
}

fileprivate func makeGroupStyleFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return GroupStyle(fromAbi: abi)
}

fileprivate func makeGroupStyleSelectorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return GroupStyleSelector(fromAbi: abi)
}

fileprivate func makeHyperlinkButtonFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HyperlinkButton(fromAbi: abi)
}

fileprivate func makeIconElementFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return IconElement(fromAbi: abi)
}

fileprivate func makeIconSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return IconSource(fromAbi: abi)
}

fileprivate func makeIconSourceElementFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return IconSourceElement(fromAbi: abi)
}

fileprivate func makeImageFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Image(fromAbi: abi)
}

fileprivate func makeImageIconFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ImageIcon(fromAbi: abi)
}

fileprivate func makeInfoBarFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InfoBar(fromAbi: abi)
}

fileprivate func makeInfoBarClosedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InfoBarClosedEventArgs(fromAbi: abi)
}

fileprivate func makeInfoBarClosingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InfoBarClosingEventArgs(fromAbi: abi)
}

fileprivate func makeInfoBarTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InfoBarTemplateSettings(fromAbi: abi)
}

fileprivate func makeIsTextTrimmedChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return IsTextTrimmedChangedEventArgs(fromAbi: abi)
}

fileprivate func makeItemClickEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemClickEventArgs(fromAbi: abi)
}

fileprivate func makeItemCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemCollection(fromAbi: abi)
}

fileprivate func makeItemCollectionTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemCollectionTransition(fromAbi: abi)
}

fileprivate func makeItemCollectionTransitionCompletedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemCollectionTransitionCompletedEventArgs(fromAbi: abi)
}

fileprivate func makeItemCollectionTransitionProgressFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemCollectionTransitionProgress(fromAbi: abi)
}

fileprivate func makeItemCollectionTransitionProviderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemCollectionTransitionProvider(fromAbi: abi)
}

fileprivate func makeItemContainerGeneratorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemContainerGenerator(fromAbi: abi)
}

fileprivate func makeItemsControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemsControl(fromAbi: abi)
}

fileprivate func makeItemsPanelTemplateFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemsPanelTemplate(fromAbi: abi)
}

fileprivate func makeItemsRepeaterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemsRepeater(fromAbi: abi)
}

fileprivate func makeItemsRepeaterElementClearingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemsRepeaterElementClearingEventArgs(fromAbi: abi)
}

fileprivate func makeItemsRepeaterElementIndexChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemsRepeaterElementIndexChangedEventArgs(fromAbi: abi)
}

fileprivate func makeItemsRepeaterElementPreparedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemsRepeaterElementPreparedEventArgs(fromAbi: abi)
}

fileprivate func makeItemsSourceViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemsSourceView(fromAbi: abi)
}

fileprivate func makeLayoutFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Layout(fromAbi: abi)
}

fileprivate func makeLayoutContextFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LayoutContext(fromAbi: abi)
}

fileprivate func makeListBoxFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ListBox(fromAbi: abi)
}

fileprivate func makeListBoxItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ListBoxItem(fromAbi: abi)
}

fileprivate func makeListViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ListView(fromAbi: abi)
}

fileprivate func makeListViewBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ListViewBase(fromAbi: abi)
}

fileprivate func makeListViewBaseHeaderItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ListViewBaseHeaderItem(fromAbi: abi)
}

fileprivate func makeListViewItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ListViewItem(fromAbi: abi)
}

fileprivate func makeMediaPlayerElementFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlayerElement(fromAbi: abi)
}

fileprivate func makeMediaTransportControlsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaTransportControls(fromAbi: abi)
}

fileprivate func makeMenuBarFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MenuBar(fromAbi: abi)
}

fileprivate func makeMenuBarItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MenuBarItem(fromAbi: abi)
}

fileprivate func makeMenuFlyoutFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MenuFlyout(fromAbi: abi)
}

fileprivate func makeMenuFlyoutItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MenuFlyoutItem(fromAbi: abi)
}

fileprivate func makeMenuFlyoutItemBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MenuFlyoutItemBase(fromAbi: abi)
}

fileprivate func makeMenuFlyoutSeparatorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MenuFlyoutSeparator(fromAbi: abi)
}

fileprivate func makeMenuFlyoutSubItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MenuFlyoutSubItem(fromAbi: abi)
}

fileprivate func makePageFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Page(fromAbi: abi)
}

fileprivate func makePanelFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Panel(fromAbi: abi)
}

fileprivate func makePasswordBoxFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PasswordBox(fromAbi: abi)
}

fileprivate func makePasswordBoxPasswordChangingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PasswordBoxPasswordChangingEventArgs(fromAbi: abi)
}

fileprivate func makePipsPagerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PipsPager(fromAbi: abi)
}

fileprivate func makePipsPagerSelectedIndexChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PipsPagerSelectedIndexChangedEventArgs(fromAbi: abi)
}

fileprivate func makePipsPagerTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PipsPagerTemplateSettings(fromAbi: abi)
}

fileprivate func makeProgressBarFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProgressBar(fromAbi: abi)
}

fileprivate func makeProgressBarTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProgressBarTemplateSettings(fromAbi: abi)
}

fileprivate func makeProgressRingFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProgressRing(fromAbi: abi)
}

fileprivate func makeProgressRingTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProgressRingTemplateSettings(fromAbi: abi)
}

fileprivate func makeRadioButtonFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RadioButton(fromAbi: abi)
}

fileprivate func makeRadioButtonsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RadioButtons(fromAbi: abi)
}

fileprivate func makeRelativePanelFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RelativePanel(fromAbi: abi)
}

fileprivate func makeRowDefinitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RowDefinition(fromAbi: abi)
}

fileprivate func makeRowDefinitionCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RowDefinitionCollection(fromAbi: abi)
}

fileprivate func makeScrollViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollView(fromAbi: abi)
}

fileprivate func makeScrollViewerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollViewer(fromAbi: abi)
}

fileprivate func makeScrollViewerViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollViewerView(fromAbi: abi)
}

fileprivate func makeScrollViewerViewChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollViewerViewChangedEventArgs(fromAbi: abi)
}

fileprivate func makeScrollViewerViewChangingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollViewerViewChangingEventArgs(fromAbi: abi)
}

fileprivate func makeScrollingAnchorRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollingAnchorRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeScrollingBringingIntoViewEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollingBringingIntoViewEventArgs(fromAbi: abi)
}

fileprivate func makeScrollingScrollAnimationStartingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollingScrollAnimationStartingEventArgs(fromAbi: abi)
}

fileprivate func makeScrollingScrollCompletedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollingScrollCompletedEventArgs(fromAbi: abi)
}

fileprivate func makeScrollingScrollOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollingScrollOptions(fromAbi: abi)
}

fileprivate func makeScrollingZoomAnimationStartingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollingZoomAnimationStartingEventArgs(fromAbi: abi)
}

fileprivate func makeScrollingZoomCompletedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollingZoomCompletedEventArgs(fromAbi: abi)
}

fileprivate func makeScrollingZoomOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollingZoomOptions(fromAbi: abi)
}

fileprivate func makeSelectionChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SelectionChangedEventArgs(fromAbi: abi)
}

fileprivate func makeSemanticZoomFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SemanticZoom(fromAbi: abi)
}

fileprivate func makeSemanticZoomLocationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SemanticZoomLocation(fromAbi: abi)
}

fileprivate func makeSemanticZoomViewChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SemanticZoomViewChangedEventArgs(fromAbi: abi)
}

fileprivate func makeSliderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Slider(fromAbi: abi)
}

fileprivate func makeSplitViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SplitView(fromAbi: abi)
}

fileprivate func makeSplitViewPaneClosingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SplitViewPaneClosingEventArgs(fromAbi: abi)
}

fileprivate func makeStackLayoutFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StackLayout(fromAbi: abi)
}

fileprivate func makeStackPanelFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StackPanel(fromAbi: abi)
}

fileprivate func makeStyleSelectorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StyleSelector(fromAbi: abi)
}

fileprivate func makeTeachingTipFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TeachingTip(fromAbi: abi)
}

fileprivate func makeTeachingTipClosedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TeachingTipClosedEventArgs(fromAbi: abi)
}

fileprivate func makeTeachingTipClosingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TeachingTipClosingEventArgs(fromAbi: abi)
}

fileprivate func makeTeachingTipTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TeachingTipTemplateSettings(fromAbi: abi)
}

fileprivate func makeTextBlockFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextBlock(fromAbi: abi)
}

fileprivate func makeTextBoxFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextBox(fromAbi: abi)
}

fileprivate func makeTextBoxBeforeTextChangingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextBoxBeforeTextChangingEventArgs(fromAbi: abi)
}

fileprivate func makeTextBoxSelectionChangingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextBoxSelectionChangingEventArgs(fromAbi: abi)
}

fileprivate func makeTextBoxTextChangingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextBoxTextChangingEventArgs(fromAbi: abi)
}

fileprivate func makeTextChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextChangedEventArgs(fromAbi: abi)
}

fileprivate func makeTextCompositionChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextCompositionChangedEventArgs(fromAbi: abi)
}

fileprivate func makeTextCompositionEndedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextCompositionEndedEventArgs(fromAbi: abi)
}

fileprivate func makeTextCompositionStartedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextCompositionStartedEventArgs(fromAbi: abi)
}

fileprivate func makeTextControlCopyingToClipboardEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextControlCopyingToClipboardEventArgs(fromAbi: abi)
}

fileprivate func makeTextControlCuttingToClipboardEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextControlCuttingToClipboardEventArgs(fromAbi: abi)
}

fileprivate func makeTextControlPasteEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextControlPasteEventArgs(fromAbi: abi)
}

fileprivate func makeToggleMenuFlyoutItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToggleMenuFlyoutItem(fromAbi: abi)
}

fileprivate func makeToggleSwitchFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToggleSwitch(fromAbi: abi)
}

fileprivate func makeToolTipFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToolTip(fromAbi: abi)
}

fileprivate func makeToolTipServiceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToolTipService(fromAbi: abi)
}

fileprivate func makeTreeViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TreeView(fromAbi: abi)
}

fileprivate func makeTreeViewCollapsedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TreeViewCollapsedEventArgs(fromAbi: abi)
}

fileprivate func makeTreeViewDragItemsCompletedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TreeViewDragItemsCompletedEventArgs(fromAbi: abi)
}

fileprivate func makeTreeViewDragItemsStartingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TreeViewDragItemsStartingEventArgs(fromAbi: abi)
}

fileprivate func makeTreeViewExpandingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TreeViewExpandingEventArgs(fromAbi: abi)
}

fileprivate func makeTreeViewItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TreeViewItem(fromAbi: abi)
}

fileprivate func makeTreeViewItemInvokedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TreeViewItemInvokedEventArgs(fromAbi: abi)
}

fileprivate func makeTreeViewItemTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TreeViewItemTemplateSettings(fromAbi: abi)
}

fileprivate func makeTreeViewListFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TreeViewList(fromAbi: abi)
}

fileprivate func makeTreeViewNodeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TreeViewNode(fromAbi: abi)
}

fileprivate func makeTreeViewSelectionChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TreeViewSelectionChangedEventArgs(fromAbi: abi)
}

fileprivate func makeUIElementCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UIElementCollection(fromAbi: abi)
}

fileprivate func makeUniformGridLayoutFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UniformGridLayout(fromAbi: abi)
}

fileprivate func makeUserControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UserControl(fromAbi: abi)
}

fileprivate func makeVirtualizingLayoutFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VirtualizingLayout(fromAbi: abi)
}

fileprivate func makeVirtualizingLayoutContextFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VirtualizingLayoutContext(fromAbi: abi)
}

fileprivate func makeWebView2From(abi: WindowsFoundation.IInspectable) -> Any {
    return WebView2(fromAbi: abi)
}

fileprivate func makeXamlControlsResourcesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XamlControlsResources(fromAbi: abi)
}

fileprivate func makeAppBarTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppBarTemplateSettings(fromAbi: abi)
}

fileprivate func makeButtonBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ButtonBase(fromAbi: abi)
}

fileprivate func makeComboBoxTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ComboBoxTemplateSettings(fromAbi: abi)
}

fileprivate func makeFlyoutBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FlyoutBase(fromAbi: abi)
}

fileprivate func makeFlyoutBaseClosingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FlyoutBaseClosingEventArgs(fromAbi: abi)
}

fileprivate func makeFlyoutShowOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FlyoutShowOptions(fromAbi: abi)
}

fileprivate func makeItemsChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemsChangedEventArgs(fromAbi: abi)
}

fileprivate func makeListViewItemTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ListViewItemTemplateSettings(fromAbi: abi)
}

fileprivate func makeMenuFlyoutItemTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MenuFlyoutItemTemplateSettings(fromAbi: abi)
}

fileprivate func makePopupFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Popup(fromAbi: abi)
}

fileprivate func makeRangeBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RangeBase(fromAbi: abi)
}

fileprivate func makeRangeBaseValueChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RangeBaseValueChangedEventArgs(fromAbi: abi)
}

fileprivate func makeScrollControllerAddScrollVelocityRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollControllerAddScrollVelocityRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeScrollControllerPanRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollControllerPanRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeScrollControllerScrollByRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollControllerScrollByRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeScrollControllerScrollToRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollControllerScrollToRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeScrollPresenterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollPresenter(fromAbi: abi)
}

fileprivate func makeScrollSnapPointBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScrollSnapPointBase(fromAbi: abi)
}

fileprivate func makeSelectorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Selector(fromAbi: abi)
}

fileprivate func makeSelectorItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SelectorItem(fromAbi: abi)
}

fileprivate func makeSnapPointBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SnapPointBase(fromAbi: abi)
}

fileprivate func makeSplitViewTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SplitViewTemplateSettings(fromAbi: abi)
}

fileprivate func makeToggleButtonFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToggleButton(fromAbi: abi)
}

fileprivate func makeToggleSwitchTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToggleSwitchTemplateSettings(fromAbi: abi)
}

fileprivate func makeToolTipTemplateSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToolTipTemplateSettings(fromAbi: abi)
}

fileprivate func makeZoomSnapPointBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ZoomSnapPointBase(fromAbi: abi)
}

fileprivate func makeBindingFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Binding(fromAbi: abi)
}

fileprivate func makeBindingBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BindingBase(fromAbi: abi)
}

fileprivate func makeBindingExpressionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BindingExpression(fromAbi: abi)
}

fileprivate func makeBindingExpressionBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BindingExpressionBase(fromAbi: abi)
}

fileprivate func makeItemIndexRangeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ItemIndexRange(fromAbi: abi)
}

fileprivate func makePropertyChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PropertyChangedEventArgs(fromAbi: abi)
}

fileprivate func makeRelativeSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RelativeSource(fromAbi: abi)
}

fileprivate func makeHyperlinkFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Hyperlink(fromAbi: abi)
}

fileprivate func makeHyperlinkClickEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HyperlinkClickEventArgs(fromAbi: abi)
}

fileprivate func makeInlineFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Inline(fromAbi: abi)
}

fileprivate func makeInlineCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InlineCollection(fromAbi: abi)
}

fileprivate func makeRunFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Run(fromAbi: abi)
}

fileprivate func makeSpanFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Span(fromAbi: abi)
}

fileprivate func makeTextElementFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextElement(fromAbi: abi)
}

fileprivate func makeTextHighlighterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextHighlighter(fromAbi: abi)
}

fileprivate func makeTextPointerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TextPointer(fromAbi: abi)
}

fileprivate func makeDesktopWindowXamlSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DesktopWindowXamlSource(fromAbi: abi)
}

fileprivate func makeDesktopWindowXamlSourceGotFocusEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DesktopWindowXamlSourceGotFocusEventArgs(fromAbi: abi)
}

fileprivate func makeDesktopWindowXamlSourceTakeFocusRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DesktopWindowXamlSourceTakeFocusRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeElementCompositionPreviewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ElementCompositionPreview(fromAbi: abi)
}

fileprivate func makeWindowsXamlManagerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WindowsXamlManager(fromAbi: abi)
}

fileprivate func makeXamlShutdownCompletedOnThreadEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XamlShutdownCompletedOnThreadEventArgs(fromAbi: abi)
}

fileprivate func makeXamlSourceFocusNavigationRequestFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XamlSourceFocusNavigationRequest(fromAbi: abi)
}

fileprivate func makeXamlSourceFocusNavigationResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XamlSourceFocusNavigationResult(fromAbi: abi)
}

fileprivate func makeAccessKeyDisplayDismissedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AccessKeyDisplayDismissedEventArgs(fromAbi: abi)
}

fileprivate func makeAccessKeyDisplayRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AccessKeyDisplayRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeAccessKeyInvokedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AccessKeyInvokedEventArgs(fromAbi: abi)
}

fileprivate func makeCharacterReceivedRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CharacterReceivedRoutedEventArgs(fromAbi: abi)
}

fileprivate func makeContextRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContextRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeDoubleTappedRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DoubleTappedRoutedEventArgs(fromAbi: abi)
}

fileprivate func makeFindNextElementOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FindNextElementOptions(fromAbi: abi)
}

fileprivate func makeFocusManagerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FocusManager(fromAbi: abi)
}

fileprivate func makeFocusManagerGotFocusEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FocusManagerGotFocusEventArgs(fromAbi: abi)
}

fileprivate func makeFocusManagerLostFocusEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FocusManagerLostFocusEventArgs(fromAbi: abi)
}

fileprivate func makeFocusMovementResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FocusMovementResult(fromAbi: abi)
}

fileprivate func makeGettingFocusEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return GettingFocusEventArgs(fromAbi: abi)
}

fileprivate func makeHoldingRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HoldingRoutedEventArgs(fromAbi: abi)
}

fileprivate func makeInertiaExpansionBehaviorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InertiaExpansionBehavior(fromAbi: abi)
}

fileprivate func makeInertiaRotationBehaviorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InertiaRotationBehavior(fromAbi: abi)
}

fileprivate func makeInertiaTranslationBehaviorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InertiaTranslationBehavior(fromAbi: abi)
}

fileprivate func makeInputScopeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputScope(fromAbi: abi)
}

fileprivate func makeInputScopeNameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputScopeName(fromAbi: abi)
}

fileprivate func makeKeyRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return KeyRoutedEventArgs(fromAbi: abi)
}

fileprivate func makeKeyboardAcceleratorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return KeyboardAccelerator(fromAbi: abi)
}

fileprivate func makeKeyboardAcceleratorInvokedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return KeyboardAcceleratorInvokedEventArgs(fromAbi: abi)
}

fileprivate func makeLosingFocusEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LosingFocusEventArgs(fromAbi: abi)
}

fileprivate func makeManipulationCompletedRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ManipulationCompletedRoutedEventArgs(fromAbi: abi)
}

fileprivate func makeManipulationDeltaRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ManipulationDeltaRoutedEventArgs(fromAbi: abi)
}

fileprivate func makeManipulationInertiaStartingRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ManipulationInertiaStartingRoutedEventArgs(fromAbi: abi)
}

fileprivate func makeManipulationPivotFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ManipulationPivot(fromAbi: abi)
}

fileprivate func makeManipulationStartedRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ManipulationStartedRoutedEventArgs(fromAbi: abi)
}

fileprivate func makeManipulationStartingRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ManipulationStartingRoutedEventArgs(fromAbi: abi)
}

fileprivate func makeNoFocusCandidateFoundEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NoFocusCandidateFoundEventArgs(fromAbi: abi)
}

fileprivate func makePointerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Pointer(fromAbi: abi)
}

fileprivate func makePointerRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointerRoutedEventArgs(fromAbi: abi)
}

fileprivate func makeProcessKeyboardAcceleratorEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProcessKeyboardAcceleratorEventArgs(fromAbi: abi)
}

fileprivate func makeRightTappedRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RightTappedRoutedEventArgs(fromAbi: abi)
}

fileprivate func makeTappedRoutedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TappedRoutedEventArgs(fromAbi: abi)
}

fileprivate func makeNotifyCollectionChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NotifyCollectionChangedEventArgs(fromAbi: abi)
}

fileprivate func makeXamlBindingHelperFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XamlBindingHelper(fromAbi: abi)
}

fileprivate func makeXamlReaderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XamlReader(fromAbi: abi)
}

fileprivate func makeAcrylicBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AcrylicBrush(fromAbi: abi)
}

fileprivate func makeBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Brush(fromAbi: abi)
}

fileprivate func makeCacheModeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CacheMode(fromAbi: abi)
}

fileprivate func makeCompositeTransformFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositeTransform(fromAbi: abi)
}

fileprivate func makeCompositionTargetFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionTarget(fromAbi: abi)
}

fileprivate func makeDoubleCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DoubleCollection(fromAbi: abi)
}

fileprivate func makeFontFamilyFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FontFamily(fromAbi: abi)
}

fileprivate func makeGeneralTransformFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return GeneralTransform(fromAbi: abi)
}

fileprivate func makeGeometryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Geometry(fromAbi: abi)
}

fileprivate func makeGradientBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return GradientBrush(fromAbi: abi)
}

fileprivate func makeGradientStopFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return GradientStop(fromAbi: abi)
}

fileprivate func makeGradientStopCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return GradientStopCollection(fromAbi: abi)
}

fileprivate func makeImageSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ImageSource(fromAbi: abi)
}

fileprivate func makeLineSegmentFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LineSegment(fromAbi: abi)
}

fileprivate func makeLinearGradientBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LinearGradientBrush(fromAbi: abi)
}

fileprivate func makeMediaTransportControlsThumbnailRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaTransportControlsThumbnailRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeMicaBackdropFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MicaBackdrop(fromAbi: abi)
}

fileprivate func makePathFigureFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PathFigure(fromAbi: abi)
}

fileprivate func makePathFigureCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PathFigureCollection(fromAbi: abi)
}

fileprivate func makePathGeometryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PathGeometry(fromAbi: abi)
}

fileprivate func makePathSegmentFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PathSegment(fromAbi: abi)
}

fileprivate func makePathSegmentCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PathSegmentCollection(fromAbi: abi)
}

fileprivate func makePointCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointCollection(fromAbi: abi)
}

fileprivate func makePolyBezierSegmentFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PolyBezierSegment(fromAbi: abi)
}

fileprivate func makeProjectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Projection(fromAbi: abi)
}

fileprivate func makeRectangleGeometryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RectangleGeometry(fromAbi: abi)
}

fileprivate func makeRenderedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RenderedEventArgs(fromAbi: abi)
}

fileprivate func makeShadowFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Shadow(fromAbi: abi)
}

fileprivate func makeSolidColorBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SolidColorBrush(fromAbi: abi)
}

fileprivate func makeSystemBackdropFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SystemBackdrop(fromAbi: abi)
}

fileprivate func makeThemeShadowFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ThemeShadow(fromAbi: abi)
}

fileprivate func makeTransformFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Transform(fromAbi: abi)
}

fileprivate func makeTranslateTransformFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TranslateTransform(fromAbi: abi)
}

fileprivate func makeVisualTreeHelperFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VisualTreeHelper(fromAbi: abi)
}

fileprivate func makeXamlCompositionBrushBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XamlCompositionBrushBase(fromAbi: abi)
}

fileprivate func makeXamlLightFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XamlLight(fromAbi: abi)
}

fileprivate func makeAddDeleteThemeTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AddDeleteThemeTransition(fromAbi: abi)
}

fileprivate func makeBackEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BackEase(fromAbi: abi)
}

fileprivate func makeBasicConnectedAnimationConfigurationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BasicConnectedAnimationConfiguration(fromAbi: abi)
}

fileprivate func makeBeginStoryboardFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BeginStoryboard(fromAbi: abi)
}

fileprivate func makeBounceEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BounceEase(fromAbi: abi)
}

fileprivate func makeCircleEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CircleEase(fromAbi: abi)
}

fileprivate func makeColorAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ColorAnimation(fromAbi: abi)
}

fileprivate func makeColorAnimationUsingKeyFramesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ColorAnimationUsingKeyFrames(fromAbi: abi)
}

fileprivate func makeColorKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ColorKeyFrame(fromAbi: abi)
}

fileprivate func makeColorKeyFrameCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ColorKeyFrameCollection(fromAbi: abi)
}

fileprivate func makeCommonNavigationTransitionInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CommonNavigationTransitionInfo(fromAbi: abi)
}

fileprivate func makeConnectedAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ConnectedAnimation(fromAbi: abi)
}

fileprivate func makeConnectedAnimationConfigurationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ConnectedAnimationConfiguration(fromAbi: abi)
}

fileprivate func makeConnectedAnimationServiceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ConnectedAnimationService(fromAbi: abi)
}

fileprivate func makeContentThemeTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentThemeTransition(fromAbi: abi)
}

fileprivate func makeContinuumNavigationTransitionInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContinuumNavigationTransitionInfo(fromAbi: abi)
}

fileprivate func makeCubicEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CubicEase(fromAbi: abi)
}

fileprivate func makeDirectConnectedAnimationConfigurationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DirectConnectedAnimationConfiguration(fromAbi: abi)
}

fileprivate func makeDiscreteColorKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DiscreteColorKeyFrame(fromAbi: abi)
}

fileprivate func makeDiscreteDoubleKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DiscreteDoubleKeyFrame(fromAbi: abi)
}

fileprivate func makeDiscreteObjectKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DiscreteObjectKeyFrame(fromAbi: abi)
}

fileprivate func makeDiscretePointKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DiscretePointKeyFrame(fromAbi: abi)
}

fileprivate func makeDoubleAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DoubleAnimation(fromAbi: abi)
}

fileprivate func makeDoubleAnimationUsingKeyFramesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DoubleAnimationUsingKeyFrames(fromAbi: abi)
}

fileprivate func makeDoubleKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DoubleKeyFrame(fromAbi: abi)
}

fileprivate func makeDoubleKeyFrameCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DoubleKeyFrameCollection(fromAbi: abi)
}

fileprivate func makeDragItemThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DragItemThemeAnimation(fromAbi: abi)
}

fileprivate func makeDragOverThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DragOverThemeAnimation(fromAbi: abi)
}

fileprivate func makeDrillInNavigationTransitionInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DrillInNavigationTransitionInfo(fromAbi: abi)
}

fileprivate func makeDrillInThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DrillInThemeAnimation(fromAbi: abi)
}

fileprivate func makeDrillOutThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DrillOutThemeAnimation(fromAbi: abi)
}

fileprivate func makeDropTargetItemThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DropTargetItemThemeAnimation(fromAbi: abi)
}

fileprivate func makeEasingColorKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EasingColorKeyFrame(fromAbi: abi)
}

fileprivate func makeEasingDoubleKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EasingDoubleKeyFrame(fromAbi: abi)
}

fileprivate func makeEasingFunctionBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EasingFunctionBase(fromAbi: abi)
}

fileprivate func makeEasingPointKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EasingPointKeyFrame(fromAbi: abi)
}

fileprivate func makeEdgeUIThemeTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EdgeUIThemeTransition(fromAbi: abi)
}

fileprivate func makeElasticEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ElasticEase(fromAbi: abi)
}

fileprivate func makeEntranceNavigationTransitionInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EntranceNavigationTransitionInfo(fromAbi: abi)
}

fileprivate func makeEntranceThemeTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EntranceThemeTransition(fromAbi: abi)
}

fileprivate func makeExponentialEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ExponentialEase(fromAbi: abi)
}

fileprivate func makeFadeInThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FadeInThemeAnimation(fromAbi: abi)
}

fileprivate func makeFadeOutThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FadeOutThemeAnimation(fromAbi: abi)
}

fileprivate func makeGravityConnectedAnimationConfigurationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return GravityConnectedAnimationConfiguration(fromAbi: abi)
}

fileprivate func makeKeySplineFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return KeySpline(fromAbi: abi)
}

fileprivate func makeKeyTimeHelperFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return KeyTimeHelper(fromAbi: abi)
}

fileprivate func makeLinearColorKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LinearColorKeyFrame(fromAbi: abi)
}

fileprivate func makeLinearDoubleKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LinearDoubleKeyFrame(fromAbi: abi)
}

fileprivate func makeLinearPointKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LinearPointKeyFrame(fromAbi: abi)
}

fileprivate func makeNavigationThemeTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NavigationThemeTransition(fromAbi: abi)
}

fileprivate func makeNavigationTransitionInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NavigationTransitionInfo(fromAbi: abi)
}

fileprivate func makeObjectAnimationUsingKeyFramesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ObjectAnimationUsingKeyFrames(fromAbi: abi)
}

fileprivate func makeObjectKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ObjectKeyFrame(fromAbi: abi)
}

fileprivate func makeObjectKeyFrameCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ObjectKeyFrameCollection(fromAbi: abi)
}

fileprivate func makePaneThemeTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PaneThemeTransition(fromAbi: abi)
}

fileprivate func makePointAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointAnimation(fromAbi: abi)
}

fileprivate func makePointAnimationUsingKeyFramesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointAnimationUsingKeyFrames(fromAbi: abi)
}

fileprivate func makePointKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointKeyFrame(fromAbi: abi)
}

fileprivate func makePointKeyFrameCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointKeyFrameCollection(fromAbi: abi)
}

fileprivate func makePointerDownThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointerDownThemeAnimation(fromAbi: abi)
}

fileprivate func makePointerUpThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointerUpThemeAnimation(fromAbi: abi)
}

fileprivate func makePopInThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PopInThemeAnimation(fromAbi: abi)
}

fileprivate func makePopOutThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PopOutThemeAnimation(fromAbi: abi)
}

fileprivate func makePopupThemeTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PopupThemeTransition(fromAbi: abi)
}

fileprivate func makePowerEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PowerEase(fromAbi: abi)
}

fileprivate func makeQuadraticEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return QuadraticEase(fromAbi: abi)
}

fileprivate func makeQuarticEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return QuarticEase(fromAbi: abi)
}

fileprivate func makeQuinticEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return QuinticEase(fromAbi: abi)
}

fileprivate func makeReorderThemeTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ReorderThemeTransition(fromAbi: abi)
}

fileprivate func makeRepeatBehaviorHelperFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RepeatBehaviorHelper(fromAbi: abi)
}

fileprivate func makeRepositionThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RepositionThemeAnimation(fromAbi: abi)
}

fileprivate func makeRepositionThemeTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RepositionThemeTransition(fromAbi: abi)
}

fileprivate func makeSineEaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SineEase(fromAbi: abi)
}

fileprivate func makeSlideNavigationTransitionInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SlideNavigationTransitionInfo(fromAbi: abi)
}

fileprivate func makeSplineColorKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SplineColorKeyFrame(fromAbi: abi)
}

fileprivate func makeSplineDoubleKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SplineDoubleKeyFrame(fromAbi: abi)
}

fileprivate func makeSplinePointKeyFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SplinePointKeyFrame(fromAbi: abi)
}

fileprivate func makeSplitCloseThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SplitCloseThemeAnimation(fromAbi: abi)
}

fileprivate func makeSplitOpenThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SplitOpenThemeAnimation(fromAbi: abi)
}

fileprivate func makeStoryboardFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Storyboard(fromAbi: abi)
}

fileprivate func makeSuppressNavigationTransitionInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SuppressNavigationTransitionInfo(fromAbi: abi)
}

fileprivate func makeSwipeBackThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SwipeBackThemeAnimation(fromAbi: abi)
}

fileprivate func makeSwipeHintThemeAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SwipeHintThemeAnimation(fromAbi: abi)
}

fileprivate func makeTimelineFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Timeline(fromAbi: abi)
}

fileprivate func makeTimelineCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TimelineCollection(fromAbi: abi)
}

fileprivate func makeTransitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Transition(fromAbi: abi)
}

fileprivate func makeTransitionCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TransitionCollection(fromAbi: abi)
}

fileprivate func makeBitmapImageFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BitmapImage(fromAbi: abi)
}

fileprivate func makeBitmapSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BitmapSource(fromAbi: abi)
}

fileprivate func makeDownloadProgressEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DownloadProgressEventArgs(fromAbi: abi)
}

fileprivate func makeRenderTargetBitmapFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RenderTargetBitmap(fromAbi: abi)
}

fileprivate func makeSoftwareBitmapSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SoftwareBitmapSource(fromAbi: abi)
}

fileprivate func makeSurfaceImageSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SurfaceImageSource(fromAbi: abi)
}

fileprivate func makeSvgImageSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SvgImageSource(fromAbi: abi)
}

fileprivate func makeSvgImageSourceFailedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SvgImageSourceFailedEventArgs(fromAbi: abi)
}

fileprivate func makeSvgImageSourceOpenedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SvgImageSourceOpenedEventArgs(fromAbi: abi)
}

fileprivate func makeVirtualSurfaceImageSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VirtualSurfaceImageSource(fromAbi: abi)
}

fileprivate func makeWriteableBitmapFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WriteableBitmap(fromAbi: abi)
}

fileprivate func makeXamlRenderingBackgroundTaskFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XamlRenderingBackgroundTask(fromAbi: abi)
}

fileprivate func makeTransform3DFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Transform3D(fromAbi: abi)
}

fileprivate func makeFrameNavigationOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FrameNavigationOptions(fromAbi: abi)
}

fileprivate func makeNavigatingCancelEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NavigatingCancelEventArgs(fromAbi: abi)
}

fileprivate func makeNavigationEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NavigationEventArgs(fromAbi: abi)
}

fileprivate func makeNavigationFailedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NavigationFailedEventArgs(fromAbi: abi)
}

fileprivate func makePageStackEntryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PageStackEntry(fromAbi: abi)
}

fileprivate func makeEllipseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Ellipse(fromAbi: abi)
}

fileprivate func makePathFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Path(fromAbi: abi)
}

fileprivate func makeRectangleFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Rectangle(fromAbi: abi)
}

fileprivate func makeShapeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Shape(fromAbi: abi)
}

fileprivate func makeXamlControlsXamlMetaDataProviderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XamlControlsXamlMetaDataProvider(fromAbi: abi)
}

@_spi(__MakeFromAbi_DoNotImport)
public class __MakeFromAbi: MakeFromAbi {
    public static func from(typeName: String, abi: WindowsFoundation.IInspectable) -> Any? {
        switch typeName {
            case "IDataTemplateExtension": return makeIDataTemplateExtensionFrom(abi: abi)
            case "IElementFactory": return makeIElementFactoryFrom(abi: abi)
            case "IInsertionPanel": return makeIInsertionPanelFrom(abi: abi)
            case "IItemContainerMapping": return makeIItemContainerMappingFrom(abi: abi)
            case "IKeyIndexMapping": return makeIKeyIndexMappingFrom(abi: abi)
            case "INavigate": return makeINavigateFrom(abi: abi)
            case "IScrollAnchorProvider": return makeIScrollAnchorProviderFrom(abi: abi)
            case "ISemanticZoomInformation": return makeISemanticZoomInformationFrom(abi: abi)
            case "IScrollController": return makeIScrollControllerFrom(abi: abi)
            case "IScrollControllerPanningInfo": return makeIScrollControllerPanningInfoFrom(abi: abi)
            case "IScrollSnapPointsInfo": return makeIScrollSnapPointsInfoFrom(abi: abi)
            case "INotifyPropertyChanged": return makeINotifyPropertyChangedFrom(abi: abi)
            case "IValueConverter": return makeIValueConverterFrom(abi: abi)
            case "ICommand": return makeICommandFrom(abi: abi)
            case "IBindableIterable": return makeIBindableIterableFrom(abi: abi)
            case "IBindableIterator": return makeIBindableIteratorFrom(abi: abi)
            case "IBindableVector": return makeIBindableVectorFrom(abi: abi)
            case "IBindableVectorView": return makeIBindableVectorViewFrom(abi: abi)
            case "INotifyCollectionChanged": return makeINotifyCollectionChangedFrom(abi: abi)
            case "IComponentConnector": return makeIComponentConnectorFrom(abi: abi)
            case "IDataTemplateComponent": return makeIDataTemplateComponentFrom(abi: abi)
            case "IXamlMember": return makeIXamlMemberFrom(abi: abi)
            case "IXamlMetadataProvider": return makeIXamlMetadataProviderFrom(abi: abi)
            case "IXamlType": return makeIXamlTypeFrom(abi: abi)
            case "Application": return makeApplicationFrom(abi: abi)
            case "ApplicationInitializationCallbackParams": return makeApplicationInitializationCallbackParamsFrom(abi: abi)
            case "BindingFailedEventArgs": return makeBindingFailedEventArgsFrom(abi: abi)
            case "BringIntoViewOptions": return makeBringIntoViewOptionsFrom(abi: abi)
            case "BringIntoViewRequestedEventArgs": return makeBringIntoViewRequestedEventArgsFrom(abi: abi)
            case "BrushTransition": return makeBrushTransitionFrom(abi: abi)
            case "DataContextChangedEventArgs": return makeDataContextChangedEventArgsFrom(abi: abi)
            case "DataTemplate": return makeDataTemplateFrom(abi: abi)
            case "DebugSettings": return makeDebugSettingsFrom(abi: abi)
            case "DependencyObject": return makeDependencyObjectFrom(abi: abi)
            case "DependencyProperty": return makeDependencyPropertyFrom(abi: abi)
            case "DependencyPropertyChangedEventArgs": return makeDependencyPropertyChangedEventArgsFrom(abi: abi)
            case "DragEventArgs": return makeDragEventArgsFrom(abi: abi)
            case "DragOperationDeferral": return makeDragOperationDeferralFrom(abi: abi)
            case "DragStartingEventArgs": return makeDragStartingEventArgsFrom(abi: abi)
            case "DragUI": return makeDragUIFrom(abi: abi)
            case "DragUIOverride": return makeDragUIOverrideFrom(abi: abi)
            case "DropCompletedEventArgs": return makeDropCompletedEventArgsFrom(abi: abi)
            case "EffectiveViewportChangedEventArgs": return makeEffectiveViewportChangedEventArgsFrom(abi: abi)
            case "ElementFactoryGetArgs": return makeElementFactoryGetArgsFrom(abi: abi)
            case "ElementFactoryRecycleArgs": return makeElementFactoryRecycleArgsFrom(abi: abi)
            case "ExceptionRoutedEventArgs": return makeExceptionRoutedEventArgsFrom(abi: abi)
            case "FrameworkElement": return makeFrameworkElementFrom(abi: abi)
            case "FrameworkTemplate": return makeFrameworkTemplateFrom(abi: abi)
            case "LaunchActivatedEventArgs": return makeLaunchActivatedEventArgsFrom(abi: abi)
            case "PropertyMetadata": return makePropertyMetadataFrom(abi: abi)
            case "PropertyPath": return makePropertyPathFrom(abi: abi)
            case "ResourceDictionary": return makeResourceDictionaryFrom(abi: abi)
            case "ResourceManagerRequestedEventArgs": return makeResourceManagerRequestedEventArgsFrom(abi: abi)
            case "RoutedEvent": return makeRoutedEventFrom(abi: abi)
            case "RoutedEventArgs": return makeRoutedEventArgsFrom(abi: abi)
            case "ScalarTransition": return makeScalarTransitionFrom(abi: abi)
            case "Setter": return makeSetterFrom(abi: abi)
            case "SetterBase": return makeSetterBaseFrom(abi: abi)
            case "SetterBaseCollection": return makeSetterBaseCollectionFrom(abi: abi)
            case "SizeChangedEventArgs": return makeSizeChangedEventArgsFrom(abi: abi)
            case "Style": return makeStyleFrom(abi: abi)
            case "TargetPropertyPath": return makeTargetPropertyPathFrom(abi: abi)
            case "TriggerAction": return makeTriggerActionFrom(abi: abi)
            case "TriggerBase": return makeTriggerBaseFrom(abi: abi)
            case "TriggerCollection": return makeTriggerCollectionFrom(abi: abi)
            case "UIElement": return makeUIElementFrom(abi: abi)
            case "UIElementWeakCollection": return makeUIElementWeakCollectionFrom(abi: abi)
            case "UnhandledExceptionEventArgs": return makeUnhandledExceptionEventArgsFrom(abi: abi)
            case "Vector3Transition": return makeVector3TransitionFrom(abi: abi)
            case "Window": return makeWindowFrom(abi: abi)
            case "WindowActivatedEventArgs": return makeWindowActivatedEventArgsFrom(abi: abi)
            case "WindowEventArgs": return makeWindowEventArgsFrom(abi: abi)
            case "WindowSizeChangedEventArgs": return makeWindowSizeChangedEventArgsFrom(abi: abi)
            case "WindowVisibilityChangedEventArgs": return makeWindowVisibilityChangedEventArgsFrom(abi: abi)
            case "XamlResourceReferenceFailedEventArgs": return makeXamlResourceReferenceFailedEventArgsFrom(abi: abi)
            case "XamlRoot": return makeXamlRootFrom(abi: abi)
            case "XamlRootChangedEventArgs": return makeXamlRootChangedEventArgsFrom(abi: abi)
            case "AutomationAnnotation": return makeAutomationAnnotationFrom(abi: abi)
            case "AutomationProperties": return makeAutomationPropertiesFrom(abi: abi)
            case "AutomationProperty": return makeAutomationPropertyFrom(abi: abi)
            case "AutomationPeer": return makeAutomationPeerFrom(abi: abi)
            case "AutomationPeerAnnotation": return makeAutomationPeerAnnotationFrom(abi: abi)
            case "IRawElementProviderSimple": return makeIRawElementProviderSimpleFrom(abi: abi)
            case "AnchorRequestedEventArgs": return makeAnchorRequestedEventArgsFrom(abi: abi)
            case "AppBar": return makeAppBarFrom(abi: abi)
            case "BitmapIcon": return makeBitmapIconFrom(abi: abi)
            case "Border": return makeBorderFrom(abi: abi)
            case "Button": return makeButtonFrom(abi: abi)
            case "CandidateWindowBoundsChangedEventArgs": return makeCandidateWindowBoundsChangedEventArgsFrom(abi: abi)
            case "Canvas": return makeCanvasFrom(abi: abi)
            case "CheckBox": return makeCheckBoxFrom(abi: abi)
            case "ChoosingGroupHeaderContainerEventArgs": return makeChoosingGroupHeaderContainerEventArgsFrom(abi: abi)
            case "ChoosingItemContainerEventArgs": return makeChoosingItemContainerEventArgsFrom(abi: abi)
            case "ColumnDefinition": return makeColumnDefinitionFrom(abi: abi)
            case "ColumnDefinitionCollection": return makeColumnDefinitionCollectionFrom(abi: abi)
            case "ComboBox": return makeComboBoxFrom(abi: abi)
            case "ComboBoxTextSubmittedEventArgs": return makeComboBoxTextSubmittedEventArgsFrom(abi: abi)
            case "ContainerContentChangingEventArgs": return makeContainerContentChangingEventArgsFrom(abi: abi)
            case "ContentControl": return makeContentControlFrom(abi: abi)
            case "ContentDialog": return makeContentDialogFrom(abi: abi)
            case "ContentDialogButtonClickDeferral": return makeContentDialogButtonClickDeferralFrom(abi: abi)
            case "ContentDialogButtonClickEventArgs": return makeContentDialogButtonClickEventArgsFrom(abi: abi)
            case "ContentDialogClosedEventArgs": return makeContentDialogClosedEventArgsFrom(abi: abi)
            case "ContentDialogClosingDeferral": return makeContentDialogClosingDeferralFrom(abi: abi)
            case "ContentDialogClosingEventArgs": return makeContentDialogClosingEventArgsFrom(abi: abi)
            case "ContentDialogOpenedEventArgs": return makeContentDialogOpenedEventArgsFrom(abi: abi)
            case "ContentPresenter": return makeContentPresenterFrom(abi: abi)
            case "ContextMenuEventArgs": return makeContextMenuEventArgsFrom(abi: abi)
            case "Control": return makeControlFrom(abi: abi)
            case "ControlTemplate": return makeControlTemplateFrom(abi: abi)
            case "CoreWebView2InitializedEventArgs": return makeCoreWebView2InitializedEventArgsFrom(abi: abi)
            case "DataTemplateSelector": return makeDataTemplateSelectorFrom(abi: abi)
            case "DragItemsCompletedEventArgs": return makeDragItemsCompletedEventArgsFrom(abi: abi)
            case "DragItemsStartingEventArgs": return makeDragItemsStartingEventArgsFrom(abi: abi)
            case "FlipView": return makeFlipViewFrom(abi: abi)
            case "FlipViewItem": return makeFlipViewItemFrom(abi: abi)
            case "Flyout": return makeFlyoutFrom(abi: abi)
            case "FlyoutPresenter": return makeFlyoutPresenterFrom(abi: abi)
            case "FocusDisengagedEventArgs": return makeFocusDisengagedEventArgsFrom(abi: abi)
            case "FocusEngagedEventArgs": return makeFocusEngagedEventArgsFrom(abi: abi)
            case "FontIcon": return makeFontIconFrom(abi: abi)
            case "FontIconSource": return makeFontIconSourceFrom(abi: abi)
            case "Frame": return makeFrameFrom(abi: abi)
            case "Grid": return makeGridFrom(abi: abi)
            case "GridView": return makeGridViewFrom(abi: abi)
            case "GroupStyle": return makeGroupStyleFrom(abi: abi)
            case "GroupStyleSelector": return makeGroupStyleSelectorFrom(abi: abi)
            case "HyperlinkButton": return makeHyperlinkButtonFrom(abi: abi)
            case "IconElement": return makeIconElementFrom(abi: abi)
            case "IconSource": return makeIconSourceFrom(abi: abi)
            case "IconSourceElement": return makeIconSourceElementFrom(abi: abi)
            case "Image": return makeImageFrom(abi: abi)
            case "ImageIcon": return makeImageIconFrom(abi: abi)
            case "InfoBar": return makeInfoBarFrom(abi: abi)
            case "InfoBarClosedEventArgs": return makeInfoBarClosedEventArgsFrom(abi: abi)
            case "InfoBarClosingEventArgs": return makeInfoBarClosingEventArgsFrom(abi: abi)
            case "InfoBarTemplateSettings": return makeInfoBarTemplateSettingsFrom(abi: abi)
            case "IsTextTrimmedChangedEventArgs": return makeIsTextTrimmedChangedEventArgsFrom(abi: abi)
            case "ItemClickEventArgs": return makeItemClickEventArgsFrom(abi: abi)
            case "ItemCollection": return makeItemCollectionFrom(abi: abi)
            case "ItemCollectionTransition": return makeItemCollectionTransitionFrom(abi: abi)
            case "ItemCollectionTransitionCompletedEventArgs": return makeItemCollectionTransitionCompletedEventArgsFrom(abi: abi)
            case "ItemCollectionTransitionProgress": return makeItemCollectionTransitionProgressFrom(abi: abi)
            case "ItemCollectionTransitionProvider": return makeItemCollectionTransitionProviderFrom(abi: abi)
            case "ItemContainerGenerator": return makeItemContainerGeneratorFrom(abi: abi)
            case "ItemsControl": return makeItemsControlFrom(abi: abi)
            case "ItemsPanelTemplate": return makeItemsPanelTemplateFrom(abi: abi)
            case "ItemsRepeater": return makeItemsRepeaterFrom(abi: abi)
            case "ItemsRepeaterElementClearingEventArgs": return makeItemsRepeaterElementClearingEventArgsFrom(abi: abi)
            case "ItemsRepeaterElementIndexChangedEventArgs": return makeItemsRepeaterElementIndexChangedEventArgsFrom(abi: abi)
            case "ItemsRepeaterElementPreparedEventArgs": return makeItemsRepeaterElementPreparedEventArgsFrom(abi: abi)
            case "ItemsSourceView": return makeItemsSourceViewFrom(abi: abi)
            case "Layout": return makeLayoutFrom(abi: abi)
            case "LayoutContext": return makeLayoutContextFrom(abi: abi)
            case "ListBox": return makeListBoxFrom(abi: abi)
            case "ListBoxItem": return makeListBoxItemFrom(abi: abi)
            case "ListView": return makeListViewFrom(abi: abi)
            case "ListViewBase": return makeListViewBaseFrom(abi: abi)
            case "ListViewBaseHeaderItem": return makeListViewBaseHeaderItemFrom(abi: abi)
            case "ListViewItem": return makeListViewItemFrom(abi: abi)
            case "MediaPlayerElement": return makeMediaPlayerElementFrom(abi: abi)
            case "MediaTransportControls": return makeMediaTransportControlsFrom(abi: abi)
            case "MenuBar": return makeMenuBarFrom(abi: abi)
            case "MenuBarItem": return makeMenuBarItemFrom(abi: abi)
            case "MenuFlyout": return makeMenuFlyoutFrom(abi: abi)
            case "MenuFlyoutItem": return makeMenuFlyoutItemFrom(abi: abi)
            case "MenuFlyoutItemBase": return makeMenuFlyoutItemBaseFrom(abi: abi)
            case "MenuFlyoutSeparator": return makeMenuFlyoutSeparatorFrom(abi: abi)
            case "MenuFlyoutSubItem": return makeMenuFlyoutSubItemFrom(abi: abi)
            case "Page": return makePageFrom(abi: abi)
            case "Panel": return makePanelFrom(abi: abi)
            case "PasswordBox": return makePasswordBoxFrom(abi: abi)
            case "PasswordBoxPasswordChangingEventArgs": return makePasswordBoxPasswordChangingEventArgsFrom(abi: abi)
            case "PipsPager": return makePipsPagerFrom(abi: abi)
            case "PipsPagerSelectedIndexChangedEventArgs": return makePipsPagerSelectedIndexChangedEventArgsFrom(abi: abi)
            case "PipsPagerTemplateSettings": return makePipsPagerTemplateSettingsFrom(abi: abi)
            case "ProgressBar": return makeProgressBarFrom(abi: abi)
            case "ProgressBarTemplateSettings": return makeProgressBarTemplateSettingsFrom(abi: abi)
            case "ProgressRing": return makeProgressRingFrom(abi: abi)
            case "ProgressRingTemplateSettings": return makeProgressRingTemplateSettingsFrom(abi: abi)
            case "RadioButton": return makeRadioButtonFrom(abi: abi)
            case "RadioButtons": return makeRadioButtonsFrom(abi: abi)
            case "RelativePanel": return makeRelativePanelFrom(abi: abi)
            case "RowDefinition": return makeRowDefinitionFrom(abi: abi)
            case "RowDefinitionCollection": return makeRowDefinitionCollectionFrom(abi: abi)
            case "ScrollView": return makeScrollViewFrom(abi: abi)
            case "ScrollViewer": return makeScrollViewerFrom(abi: abi)
            case "ScrollViewerView": return makeScrollViewerViewFrom(abi: abi)
            case "ScrollViewerViewChangedEventArgs": return makeScrollViewerViewChangedEventArgsFrom(abi: abi)
            case "ScrollViewerViewChangingEventArgs": return makeScrollViewerViewChangingEventArgsFrom(abi: abi)
            case "ScrollingAnchorRequestedEventArgs": return makeScrollingAnchorRequestedEventArgsFrom(abi: abi)
            case "ScrollingBringingIntoViewEventArgs": return makeScrollingBringingIntoViewEventArgsFrom(abi: abi)
            case "ScrollingScrollAnimationStartingEventArgs": return makeScrollingScrollAnimationStartingEventArgsFrom(abi: abi)
            case "ScrollingScrollCompletedEventArgs": return makeScrollingScrollCompletedEventArgsFrom(abi: abi)
            case "ScrollingScrollOptions": return makeScrollingScrollOptionsFrom(abi: abi)
            case "ScrollingZoomAnimationStartingEventArgs": return makeScrollingZoomAnimationStartingEventArgsFrom(abi: abi)
            case "ScrollingZoomCompletedEventArgs": return makeScrollingZoomCompletedEventArgsFrom(abi: abi)
            case "ScrollingZoomOptions": return makeScrollingZoomOptionsFrom(abi: abi)
            case "SelectionChangedEventArgs": return makeSelectionChangedEventArgsFrom(abi: abi)
            case "SemanticZoom": return makeSemanticZoomFrom(abi: abi)
            case "SemanticZoomLocation": return makeSemanticZoomLocationFrom(abi: abi)
            case "SemanticZoomViewChangedEventArgs": return makeSemanticZoomViewChangedEventArgsFrom(abi: abi)
            case "Slider": return makeSliderFrom(abi: abi)
            case "SplitView": return makeSplitViewFrom(abi: abi)
            case "SplitViewPaneClosingEventArgs": return makeSplitViewPaneClosingEventArgsFrom(abi: abi)
            case "StackLayout": return makeStackLayoutFrom(abi: abi)
            case "StackPanel": return makeStackPanelFrom(abi: abi)
            case "StyleSelector": return makeStyleSelectorFrom(abi: abi)
            case "TeachingTip": return makeTeachingTipFrom(abi: abi)
            case "TeachingTipClosedEventArgs": return makeTeachingTipClosedEventArgsFrom(abi: abi)
            case "TeachingTipClosingEventArgs": return makeTeachingTipClosingEventArgsFrom(abi: abi)
            case "TeachingTipTemplateSettings": return makeTeachingTipTemplateSettingsFrom(abi: abi)
            case "TextBlock": return makeTextBlockFrom(abi: abi)
            case "TextBox": return makeTextBoxFrom(abi: abi)
            case "TextBoxBeforeTextChangingEventArgs": return makeTextBoxBeforeTextChangingEventArgsFrom(abi: abi)
            case "TextBoxSelectionChangingEventArgs": return makeTextBoxSelectionChangingEventArgsFrom(abi: abi)
            case "TextBoxTextChangingEventArgs": return makeTextBoxTextChangingEventArgsFrom(abi: abi)
            case "TextChangedEventArgs": return makeTextChangedEventArgsFrom(abi: abi)
            case "TextCompositionChangedEventArgs": return makeTextCompositionChangedEventArgsFrom(abi: abi)
            case "TextCompositionEndedEventArgs": return makeTextCompositionEndedEventArgsFrom(abi: abi)
            case "TextCompositionStartedEventArgs": return makeTextCompositionStartedEventArgsFrom(abi: abi)
            case "TextControlCopyingToClipboardEventArgs": return makeTextControlCopyingToClipboardEventArgsFrom(abi: abi)
            case "TextControlCuttingToClipboardEventArgs": return makeTextControlCuttingToClipboardEventArgsFrom(abi: abi)
            case "TextControlPasteEventArgs": return makeTextControlPasteEventArgsFrom(abi: abi)
            case "ToggleMenuFlyoutItem": return makeToggleMenuFlyoutItemFrom(abi: abi)
            case "ToggleSwitch": return makeToggleSwitchFrom(abi: abi)
            case "ToolTip": return makeToolTipFrom(abi: abi)
            case "ToolTipService": return makeToolTipServiceFrom(abi: abi)
            case "TreeView": return makeTreeViewFrom(abi: abi)
            case "TreeViewCollapsedEventArgs": return makeTreeViewCollapsedEventArgsFrom(abi: abi)
            case "TreeViewDragItemsCompletedEventArgs": return makeTreeViewDragItemsCompletedEventArgsFrom(abi: abi)
            case "TreeViewDragItemsStartingEventArgs": return makeTreeViewDragItemsStartingEventArgsFrom(abi: abi)
            case "TreeViewExpandingEventArgs": return makeTreeViewExpandingEventArgsFrom(abi: abi)
            case "TreeViewItem": return makeTreeViewItemFrom(abi: abi)
            case "TreeViewItemInvokedEventArgs": return makeTreeViewItemInvokedEventArgsFrom(abi: abi)
            case "TreeViewItemTemplateSettings": return makeTreeViewItemTemplateSettingsFrom(abi: abi)
            case "TreeViewList": return makeTreeViewListFrom(abi: abi)
            case "TreeViewNode": return makeTreeViewNodeFrom(abi: abi)
            case "TreeViewSelectionChangedEventArgs": return makeTreeViewSelectionChangedEventArgsFrom(abi: abi)
            case "UIElementCollection": return makeUIElementCollectionFrom(abi: abi)
            case "UniformGridLayout": return makeUniformGridLayoutFrom(abi: abi)
            case "UserControl": return makeUserControlFrom(abi: abi)
            case "VirtualizingLayout": return makeVirtualizingLayoutFrom(abi: abi)
            case "VirtualizingLayoutContext": return makeVirtualizingLayoutContextFrom(abi: abi)
            case "WebView2": return makeWebView2From(abi: abi)
            case "XamlControlsResources": return makeXamlControlsResourcesFrom(abi: abi)
            case "AppBarTemplateSettings": return makeAppBarTemplateSettingsFrom(abi: abi)
            case "ButtonBase": return makeButtonBaseFrom(abi: abi)
            case "ComboBoxTemplateSettings": return makeComboBoxTemplateSettingsFrom(abi: abi)
            case "FlyoutBase": return makeFlyoutBaseFrom(abi: abi)
            case "FlyoutBaseClosingEventArgs": return makeFlyoutBaseClosingEventArgsFrom(abi: abi)
            case "FlyoutShowOptions": return makeFlyoutShowOptionsFrom(abi: abi)
            case "ItemsChangedEventArgs": return makeItemsChangedEventArgsFrom(abi: abi)
            case "ListViewItemTemplateSettings": return makeListViewItemTemplateSettingsFrom(abi: abi)
            case "MenuFlyoutItemTemplateSettings": return makeMenuFlyoutItemTemplateSettingsFrom(abi: abi)
            case "Popup": return makePopupFrom(abi: abi)
            case "RangeBase": return makeRangeBaseFrom(abi: abi)
            case "RangeBaseValueChangedEventArgs": return makeRangeBaseValueChangedEventArgsFrom(abi: abi)
            case "ScrollControllerAddScrollVelocityRequestedEventArgs": return makeScrollControllerAddScrollVelocityRequestedEventArgsFrom(abi: abi)
            case "ScrollControllerPanRequestedEventArgs": return makeScrollControllerPanRequestedEventArgsFrom(abi: abi)
            case "ScrollControllerScrollByRequestedEventArgs": return makeScrollControllerScrollByRequestedEventArgsFrom(abi: abi)
            case "ScrollControllerScrollToRequestedEventArgs": return makeScrollControllerScrollToRequestedEventArgsFrom(abi: abi)
            case "ScrollPresenter": return makeScrollPresenterFrom(abi: abi)
            case "ScrollSnapPointBase": return makeScrollSnapPointBaseFrom(abi: abi)
            case "Selector": return makeSelectorFrom(abi: abi)
            case "SelectorItem": return makeSelectorItemFrom(abi: abi)
            case "SnapPointBase": return makeSnapPointBaseFrom(abi: abi)
            case "SplitViewTemplateSettings": return makeSplitViewTemplateSettingsFrom(abi: abi)
            case "ToggleButton": return makeToggleButtonFrom(abi: abi)
            case "ToggleSwitchTemplateSettings": return makeToggleSwitchTemplateSettingsFrom(abi: abi)
            case "ToolTipTemplateSettings": return makeToolTipTemplateSettingsFrom(abi: abi)
            case "ZoomSnapPointBase": return makeZoomSnapPointBaseFrom(abi: abi)
            case "Binding": return makeBindingFrom(abi: abi)
            case "BindingBase": return makeBindingBaseFrom(abi: abi)
            case "BindingExpression": return makeBindingExpressionFrom(abi: abi)
            case "BindingExpressionBase": return makeBindingExpressionBaseFrom(abi: abi)
            case "ItemIndexRange": return makeItemIndexRangeFrom(abi: abi)
            case "PropertyChangedEventArgs": return makePropertyChangedEventArgsFrom(abi: abi)
            case "RelativeSource": return makeRelativeSourceFrom(abi: abi)
            case "Hyperlink": return makeHyperlinkFrom(abi: abi)
            case "HyperlinkClickEventArgs": return makeHyperlinkClickEventArgsFrom(abi: abi)
            case "Inline": return makeInlineFrom(abi: abi)
            case "InlineCollection": return makeInlineCollectionFrom(abi: abi)
            case "Run": return makeRunFrom(abi: abi)
            case "Span": return makeSpanFrom(abi: abi)
            case "TextElement": return makeTextElementFrom(abi: abi)
            case "TextHighlighter": return makeTextHighlighterFrom(abi: abi)
            case "TextPointer": return makeTextPointerFrom(abi: abi)
            case "DesktopWindowXamlSource": return makeDesktopWindowXamlSourceFrom(abi: abi)
            case "DesktopWindowXamlSourceGotFocusEventArgs": return makeDesktopWindowXamlSourceGotFocusEventArgsFrom(abi: abi)
            case "DesktopWindowXamlSourceTakeFocusRequestedEventArgs": return makeDesktopWindowXamlSourceTakeFocusRequestedEventArgsFrom(abi: abi)
            case "ElementCompositionPreview": return makeElementCompositionPreviewFrom(abi: abi)
            case "WindowsXamlManager": return makeWindowsXamlManagerFrom(abi: abi)
            case "XamlShutdownCompletedOnThreadEventArgs": return makeXamlShutdownCompletedOnThreadEventArgsFrom(abi: abi)
            case "XamlSourceFocusNavigationRequest": return makeXamlSourceFocusNavigationRequestFrom(abi: abi)
            case "XamlSourceFocusNavigationResult": return makeXamlSourceFocusNavigationResultFrom(abi: abi)
            case "AccessKeyDisplayDismissedEventArgs": return makeAccessKeyDisplayDismissedEventArgsFrom(abi: abi)
            case "AccessKeyDisplayRequestedEventArgs": return makeAccessKeyDisplayRequestedEventArgsFrom(abi: abi)
            case "AccessKeyInvokedEventArgs": return makeAccessKeyInvokedEventArgsFrom(abi: abi)
            case "CharacterReceivedRoutedEventArgs": return makeCharacterReceivedRoutedEventArgsFrom(abi: abi)
            case "ContextRequestedEventArgs": return makeContextRequestedEventArgsFrom(abi: abi)
            case "DoubleTappedRoutedEventArgs": return makeDoubleTappedRoutedEventArgsFrom(abi: abi)
            case "FindNextElementOptions": return makeFindNextElementOptionsFrom(abi: abi)
            case "FocusManager": return makeFocusManagerFrom(abi: abi)
            case "FocusManagerGotFocusEventArgs": return makeFocusManagerGotFocusEventArgsFrom(abi: abi)
            case "FocusManagerLostFocusEventArgs": return makeFocusManagerLostFocusEventArgsFrom(abi: abi)
            case "FocusMovementResult": return makeFocusMovementResultFrom(abi: abi)
            case "GettingFocusEventArgs": return makeGettingFocusEventArgsFrom(abi: abi)
            case "HoldingRoutedEventArgs": return makeHoldingRoutedEventArgsFrom(abi: abi)
            case "InertiaExpansionBehavior": return makeInertiaExpansionBehaviorFrom(abi: abi)
            case "InertiaRotationBehavior": return makeInertiaRotationBehaviorFrom(abi: abi)
            case "InertiaTranslationBehavior": return makeInertiaTranslationBehaviorFrom(abi: abi)
            case "InputScope": return makeInputScopeFrom(abi: abi)
            case "InputScopeName": return makeInputScopeNameFrom(abi: abi)
            case "KeyRoutedEventArgs": return makeKeyRoutedEventArgsFrom(abi: abi)
            case "KeyboardAccelerator": return makeKeyboardAcceleratorFrom(abi: abi)
            case "KeyboardAcceleratorInvokedEventArgs": return makeKeyboardAcceleratorInvokedEventArgsFrom(abi: abi)
            case "LosingFocusEventArgs": return makeLosingFocusEventArgsFrom(abi: abi)
            case "ManipulationCompletedRoutedEventArgs": return makeManipulationCompletedRoutedEventArgsFrom(abi: abi)
            case "ManipulationDeltaRoutedEventArgs": return makeManipulationDeltaRoutedEventArgsFrom(abi: abi)
            case "ManipulationInertiaStartingRoutedEventArgs": return makeManipulationInertiaStartingRoutedEventArgsFrom(abi: abi)
            case "ManipulationPivot": return makeManipulationPivotFrom(abi: abi)
            case "ManipulationStartedRoutedEventArgs": return makeManipulationStartedRoutedEventArgsFrom(abi: abi)
            case "ManipulationStartingRoutedEventArgs": return makeManipulationStartingRoutedEventArgsFrom(abi: abi)
            case "NoFocusCandidateFoundEventArgs": return makeNoFocusCandidateFoundEventArgsFrom(abi: abi)
            case "Pointer": return makePointerFrom(abi: abi)
            case "PointerRoutedEventArgs": return makePointerRoutedEventArgsFrom(abi: abi)
            case "ProcessKeyboardAcceleratorEventArgs": return makeProcessKeyboardAcceleratorEventArgsFrom(abi: abi)
            case "RightTappedRoutedEventArgs": return makeRightTappedRoutedEventArgsFrom(abi: abi)
            case "TappedRoutedEventArgs": return makeTappedRoutedEventArgsFrom(abi: abi)
            case "NotifyCollectionChangedEventArgs": return makeNotifyCollectionChangedEventArgsFrom(abi: abi)
            case "XamlBindingHelper": return makeXamlBindingHelperFrom(abi: abi)
            case "XamlReader": return makeXamlReaderFrom(abi: abi)
            case "AcrylicBrush": return makeAcrylicBrushFrom(abi: abi)
            case "Brush": return makeBrushFrom(abi: abi)
            case "CacheMode": return makeCacheModeFrom(abi: abi)
            case "CompositeTransform": return makeCompositeTransformFrom(abi: abi)
            case "CompositionTarget": return makeCompositionTargetFrom(abi: abi)
            case "DoubleCollection": return makeDoubleCollectionFrom(abi: abi)
            case "FontFamily": return makeFontFamilyFrom(abi: abi)
            case "GeneralTransform": return makeGeneralTransformFrom(abi: abi)
            case "Geometry": return makeGeometryFrom(abi: abi)
            case "GradientBrush": return makeGradientBrushFrom(abi: abi)
            case "GradientStop": return makeGradientStopFrom(abi: abi)
            case "GradientStopCollection": return makeGradientStopCollectionFrom(abi: abi)
            case "ImageSource": return makeImageSourceFrom(abi: abi)
            case "LineSegment": return makeLineSegmentFrom(abi: abi)
            case "LinearGradientBrush": return makeLinearGradientBrushFrom(abi: abi)
            case "MediaTransportControlsThumbnailRequestedEventArgs": return makeMediaTransportControlsThumbnailRequestedEventArgsFrom(abi: abi)
            case "MicaBackdrop": return makeMicaBackdropFrom(abi: abi)
            case "PathFigure": return makePathFigureFrom(abi: abi)
            case "PathFigureCollection": return makePathFigureCollectionFrom(abi: abi)
            case "PathGeometry": return makePathGeometryFrom(abi: abi)
            case "PathSegment": return makePathSegmentFrom(abi: abi)
            case "PathSegmentCollection": return makePathSegmentCollectionFrom(abi: abi)
            case "PointCollection": return makePointCollectionFrom(abi: abi)
            case "PolyBezierSegment": return makePolyBezierSegmentFrom(abi: abi)
            case "Projection": return makeProjectionFrom(abi: abi)
            case "RectangleGeometry": return makeRectangleGeometryFrom(abi: abi)
            case "RenderedEventArgs": return makeRenderedEventArgsFrom(abi: abi)
            case "Shadow": return makeShadowFrom(abi: abi)
            case "SolidColorBrush": return makeSolidColorBrushFrom(abi: abi)
            case "SystemBackdrop": return makeSystemBackdropFrom(abi: abi)
            case "ThemeShadow": return makeThemeShadowFrom(abi: abi)
            case "Transform": return makeTransformFrom(abi: abi)
            case "TranslateTransform": return makeTranslateTransformFrom(abi: abi)
            case "VisualTreeHelper": return makeVisualTreeHelperFrom(abi: abi)
            case "XamlCompositionBrushBase": return makeXamlCompositionBrushBaseFrom(abi: abi)
            case "XamlLight": return makeXamlLightFrom(abi: abi)
            case "AddDeleteThemeTransition": return makeAddDeleteThemeTransitionFrom(abi: abi)
            case "BackEase": return makeBackEaseFrom(abi: abi)
            case "BasicConnectedAnimationConfiguration": return makeBasicConnectedAnimationConfigurationFrom(abi: abi)
            case "BeginStoryboard": return makeBeginStoryboardFrom(abi: abi)
            case "BounceEase": return makeBounceEaseFrom(abi: abi)
            case "CircleEase": return makeCircleEaseFrom(abi: abi)
            case "ColorAnimation": return makeColorAnimationFrom(abi: abi)
            case "ColorAnimationUsingKeyFrames": return makeColorAnimationUsingKeyFramesFrom(abi: abi)
            case "ColorKeyFrame": return makeColorKeyFrameFrom(abi: abi)
            case "ColorKeyFrameCollection": return makeColorKeyFrameCollectionFrom(abi: abi)
            case "CommonNavigationTransitionInfo": return makeCommonNavigationTransitionInfoFrom(abi: abi)
            case "ConnectedAnimation": return makeConnectedAnimationFrom(abi: abi)
            case "ConnectedAnimationConfiguration": return makeConnectedAnimationConfigurationFrom(abi: abi)
            case "ConnectedAnimationService": return makeConnectedAnimationServiceFrom(abi: abi)
            case "ContentThemeTransition": return makeContentThemeTransitionFrom(abi: abi)
            case "ContinuumNavigationTransitionInfo": return makeContinuumNavigationTransitionInfoFrom(abi: abi)
            case "CubicEase": return makeCubicEaseFrom(abi: abi)
            case "DirectConnectedAnimationConfiguration": return makeDirectConnectedAnimationConfigurationFrom(abi: abi)
            case "DiscreteColorKeyFrame": return makeDiscreteColorKeyFrameFrom(abi: abi)
            case "DiscreteDoubleKeyFrame": return makeDiscreteDoubleKeyFrameFrom(abi: abi)
            case "DiscreteObjectKeyFrame": return makeDiscreteObjectKeyFrameFrom(abi: abi)
            case "DiscretePointKeyFrame": return makeDiscretePointKeyFrameFrom(abi: abi)
            case "DoubleAnimation": return makeDoubleAnimationFrom(abi: abi)
            case "DoubleAnimationUsingKeyFrames": return makeDoubleAnimationUsingKeyFramesFrom(abi: abi)
            case "DoubleKeyFrame": return makeDoubleKeyFrameFrom(abi: abi)
            case "DoubleKeyFrameCollection": return makeDoubleKeyFrameCollectionFrom(abi: abi)
            case "DragItemThemeAnimation": return makeDragItemThemeAnimationFrom(abi: abi)
            case "DragOverThemeAnimation": return makeDragOverThemeAnimationFrom(abi: abi)
            case "DrillInNavigationTransitionInfo": return makeDrillInNavigationTransitionInfoFrom(abi: abi)
            case "DrillInThemeAnimation": return makeDrillInThemeAnimationFrom(abi: abi)
            case "DrillOutThemeAnimation": return makeDrillOutThemeAnimationFrom(abi: abi)
            case "DropTargetItemThemeAnimation": return makeDropTargetItemThemeAnimationFrom(abi: abi)
            case "EasingColorKeyFrame": return makeEasingColorKeyFrameFrom(abi: abi)
            case "EasingDoubleKeyFrame": return makeEasingDoubleKeyFrameFrom(abi: abi)
            case "EasingFunctionBase": return makeEasingFunctionBaseFrom(abi: abi)
            case "EasingPointKeyFrame": return makeEasingPointKeyFrameFrom(abi: abi)
            case "EdgeUIThemeTransition": return makeEdgeUIThemeTransitionFrom(abi: abi)
            case "ElasticEase": return makeElasticEaseFrom(abi: abi)
            case "EntranceNavigationTransitionInfo": return makeEntranceNavigationTransitionInfoFrom(abi: abi)
            case "EntranceThemeTransition": return makeEntranceThemeTransitionFrom(abi: abi)
            case "ExponentialEase": return makeExponentialEaseFrom(abi: abi)
            case "FadeInThemeAnimation": return makeFadeInThemeAnimationFrom(abi: abi)
            case "FadeOutThemeAnimation": return makeFadeOutThemeAnimationFrom(abi: abi)
            case "GravityConnectedAnimationConfiguration": return makeGravityConnectedAnimationConfigurationFrom(abi: abi)
            case "KeySpline": return makeKeySplineFrom(abi: abi)
            case "KeyTimeHelper": return makeKeyTimeHelperFrom(abi: abi)
            case "LinearColorKeyFrame": return makeLinearColorKeyFrameFrom(abi: abi)
            case "LinearDoubleKeyFrame": return makeLinearDoubleKeyFrameFrom(abi: abi)
            case "LinearPointKeyFrame": return makeLinearPointKeyFrameFrom(abi: abi)
            case "NavigationThemeTransition": return makeNavigationThemeTransitionFrom(abi: abi)
            case "NavigationTransitionInfo": return makeNavigationTransitionInfoFrom(abi: abi)
            case "ObjectAnimationUsingKeyFrames": return makeObjectAnimationUsingKeyFramesFrom(abi: abi)
            case "ObjectKeyFrame": return makeObjectKeyFrameFrom(abi: abi)
            case "ObjectKeyFrameCollection": return makeObjectKeyFrameCollectionFrom(abi: abi)
            case "PaneThemeTransition": return makePaneThemeTransitionFrom(abi: abi)
            case "PointAnimation": return makePointAnimationFrom(abi: abi)
            case "PointAnimationUsingKeyFrames": return makePointAnimationUsingKeyFramesFrom(abi: abi)
            case "PointKeyFrame": return makePointKeyFrameFrom(abi: abi)
            case "PointKeyFrameCollection": return makePointKeyFrameCollectionFrom(abi: abi)
            case "PointerDownThemeAnimation": return makePointerDownThemeAnimationFrom(abi: abi)
            case "PointerUpThemeAnimation": return makePointerUpThemeAnimationFrom(abi: abi)
            case "PopInThemeAnimation": return makePopInThemeAnimationFrom(abi: abi)
            case "PopOutThemeAnimation": return makePopOutThemeAnimationFrom(abi: abi)
            case "PopupThemeTransition": return makePopupThemeTransitionFrom(abi: abi)
            case "PowerEase": return makePowerEaseFrom(abi: abi)
            case "QuadraticEase": return makeQuadraticEaseFrom(abi: abi)
            case "QuarticEase": return makeQuarticEaseFrom(abi: abi)
            case "QuinticEase": return makeQuinticEaseFrom(abi: abi)
            case "ReorderThemeTransition": return makeReorderThemeTransitionFrom(abi: abi)
            case "RepeatBehaviorHelper": return makeRepeatBehaviorHelperFrom(abi: abi)
            case "RepositionThemeAnimation": return makeRepositionThemeAnimationFrom(abi: abi)
            case "RepositionThemeTransition": return makeRepositionThemeTransitionFrom(abi: abi)
            case "SineEase": return makeSineEaseFrom(abi: abi)
            case "SlideNavigationTransitionInfo": return makeSlideNavigationTransitionInfoFrom(abi: abi)
            case "SplineColorKeyFrame": return makeSplineColorKeyFrameFrom(abi: abi)
            case "SplineDoubleKeyFrame": return makeSplineDoubleKeyFrameFrom(abi: abi)
            case "SplinePointKeyFrame": return makeSplinePointKeyFrameFrom(abi: abi)
            case "SplitCloseThemeAnimation": return makeSplitCloseThemeAnimationFrom(abi: abi)
            case "SplitOpenThemeAnimation": return makeSplitOpenThemeAnimationFrom(abi: abi)
            case "Storyboard": return makeStoryboardFrom(abi: abi)
            case "SuppressNavigationTransitionInfo": return makeSuppressNavigationTransitionInfoFrom(abi: abi)
            case "SwipeBackThemeAnimation": return makeSwipeBackThemeAnimationFrom(abi: abi)
            case "SwipeHintThemeAnimation": return makeSwipeHintThemeAnimationFrom(abi: abi)
            case "Timeline": return makeTimelineFrom(abi: abi)
            case "TimelineCollection": return makeTimelineCollectionFrom(abi: abi)
            case "Transition": return makeTransitionFrom(abi: abi)
            case "TransitionCollection": return makeTransitionCollectionFrom(abi: abi)
            case "BitmapImage": return makeBitmapImageFrom(abi: abi)
            case "BitmapSource": return makeBitmapSourceFrom(abi: abi)
            case "DownloadProgressEventArgs": return makeDownloadProgressEventArgsFrom(abi: abi)
            case "RenderTargetBitmap": return makeRenderTargetBitmapFrom(abi: abi)
            case "SoftwareBitmapSource": return makeSoftwareBitmapSourceFrom(abi: abi)
            case "SurfaceImageSource": return makeSurfaceImageSourceFrom(abi: abi)
            case "SvgImageSource": return makeSvgImageSourceFrom(abi: abi)
            case "SvgImageSourceFailedEventArgs": return makeSvgImageSourceFailedEventArgsFrom(abi: abi)
            case "SvgImageSourceOpenedEventArgs": return makeSvgImageSourceOpenedEventArgsFrom(abi: abi)
            case "VirtualSurfaceImageSource": return makeVirtualSurfaceImageSourceFrom(abi: abi)
            case "WriteableBitmap": return makeWriteableBitmapFrom(abi: abi)
            case "XamlRenderingBackgroundTask": return makeXamlRenderingBackgroundTaskFrom(abi: abi)
            case "Transform3D": return makeTransform3DFrom(abi: abi)
            case "FrameNavigationOptions": return makeFrameNavigationOptionsFrom(abi: abi)
            case "NavigatingCancelEventArgs": return makeNavigatingCancelEventArgsFrom(abi: abi)
            case "NavigationEventArgs": return makeNavigationEventArgsFrom(abi: abi)
            case "NavigationFailedEventArgs": return makeNavigationFailedEventArgsFrom(abi: abi)
            case "PageStackEntry": return makePageStackEntryFrom(abi: abi)
            case "Ellipse": return makeEllipseFrom(abi: abi)
            case "Path": return makePathFrom(abi: abi)
            case "Rectangle": return makeRectangleFrom(abi: abi)
            case "Shape": return makeShapeFrom(abi: abi)
            case "XamlControlsXamlMetaDataProvider": return makeXamlControlsXamlMetaDataProviderFrom(abi: abi)
            default: return nil
        }
    }
}
